{"/home/travis/build/npmtest/node-npmtest-cloudcmd/test.js":"/* istanbul instrument in package npmtest_cloudcmd */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/lib.npmtest_cloudcmd.js":"/* istanbul instrument in package npmtest_cloudcmd */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cloudcmd = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cloudcmd = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cloudcmd && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cloudcmd */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cloudcmd\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cloudcmd.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_cloudcmd.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cloudcmd.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_cloudcmd.__dirname + '/lib.npmtest_cloudcmd.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/legacy/server/cloudcmd.js":"module.exports = require('../../server_/cloudcmd.js');","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/cloudcmd.js":"'use strict';\n\nvar DIR = __dirname + '/';\nvar DIR_ROOT = DIR + '../';\n\nvar cloudfunc = require(DIR + 'cloudfunc');\nvar auth = require(DIR + 'auth');\nvar config = require(DIR + 'config');\nvar modulas = require(DIR + 'modulas');\nvar rest = require(DIR + 'rest');\nvar route = require(DIR + 'route');\nvar validate = require(DIR + 'validate');\nvar prefixer = require(DIR + 'prefixer');\nvar pluginer = require(DIR + 'plugins');\nvar terminal = require(DIR + 'terminal');\n\nvar apart = require('apart');\nvar join = require('join-io');\nvar ponse = require('ponse');\nvar mollify = require('mollify');\nvar restafary = require('restafary/legacy');\nvar konsole = require('console-io/legacy');\nvar edward = require('edward/legacy');\nvar dword = require('dword/legacy');\nvar deepword = require('deepword/legacy');\nvar nomine = require('nomine/legacy');\nvar spero = require('spero');\nvar remedy = require('remedy');\nvar ishtar = require('ishtar');\nvar salam = require('salam/legacy');\nvar omnes = require('omnes/legacy');\nvar criton = require('criton');\n\nvar root = function root() {\n    return config('root');\n};\n\nvar notEmpty = function notEmpty(a) {\n    return a;\n};\nvar clean = function clean(a) {\n    return a.filter(notEmpty);\n};\n\nvar isDev = process.env.NODE_ENV === 'development';\n\nfunction getPrefix(prefix) {\n    if (typeof prefix === 'function') return prefix() || '';\n\n    return prefix || '';\n}\n\nmodule.exports = function (params) {\n    var p = params || {};\n    var options = p.config || {};\n    var plugins = p.plugins;\n    var modules = p.modules;\n\n    var keys = Object.keys(options);\n\n    var prefix = void 0;\n\n    checkPlugins(plugins);\n\n    keys.forEach(function (name) {\n        var value = options[name];\n\n        switch (name) {\n            case 'root':\n                validate.root(value);\n                break;\n            case 'editor':\n                validate.editor(value);\n                break;\n            case 'packer':\n                validate.packer(value);\n                break;\n            case 'password':\n                /* could be useful when used as middleware */\n                value = criton(value, config('algo'));\n                break;\n            case 'prefix':\n                prefix = prefixer(value);\n                break;\n        }\n\n        config(name, value);\n    });\n\n    var console = config('console');\n    var configDialog = config('configDialog');\n\n    config('console', defaultValue(options.console, console));\n    config('configDialog', defaultValue(options.configDialog, configDialog));\n\n    if (p.socket) listen(prefix, p.socket);\n\n    return cloudcmd(prefix, plugins, modules);\n};\n\nfunction defaultValue(value, previous) {\n    if (typeof value === 'undefined') return previous;\n\n    return value;\n}\n\nfunction authCheck(socket, success) {\n    if (!config('auth')) return success();\n\n    socket.on('auth', function (name, pass) {\n        var isName = name === config('username');\n        var isPass = pass === config('password');\n\n        if (!isName || !isPass) return socket.emit('reject');\n\n        success();\n        socket.emit('accept');\n    });\n}\n\nfunction listen(prefix, socket) {\n    var size = cloudfunc.MAX_SIZE;\n\n    prefix = getPrefix(prefix);\n\n    config.listen(socket, authCheck);\n\n    edward.listen(socket, {\n        size: size,\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/edward'\n    });\n\n    dword.listen(socket, {\n        size: size,\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/dword'\n    });\n\n    deepword.listen(socket, {\n        size: size,\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/deepword'\n    });\n\n    spero.listen(socket, {\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/spero'\n    });\n\n    remedy.listen(socket, {\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/remedy'\n    });\n\n    ishtar.listen(socket, {\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/ishtar'\n    });\n\n    salam.listen(socket, {\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/salam'\n    });\n\n    omnes.listen(socket, {\n        root: root,\n        authCheck: authCheck,\n        prefix: prefix + '/omnes'\n    });\n\n    config('console') && konsole.listen(socket, {\n        authCheck: authCheck,\n        prefix: prefix + '/console'\n    });\n\n    config('terminal') && terminal.listen(socket, {\n        authCheck: authCheck,\n        prefix: prefix + '/gritty'\n    });\n}\n\nfunction cloudcmd(prefix, plugins, modules) {\n    var isOption = function isOption(name) {\n        return config(name);\n    };\n\n    var minify = apart(isOption, 'minify');\n    var online = apart(isOption, 'online');\n    var cache = apart(isOption, 'cache');\n    var diff = apart(isOption, 'diff');\n    var zip = apart(isOption, 'zip');\n\n    var ponseStatic = ponse.static(DIR_ROOT, { cache: cache });\n\n    var funcs = clean([config('console') && konsole({\n        prefix: prefix + '/console',\n        minify: minify,\n        online: online\n    }), config('terminal') && terminal({\n        prefix: prefix + '/gritty'\n    }), edward({\n        prefix: prefix + '/edward',\n        minify: minify,\n        online: online,\n        diff: diff,\n        zip: zip\n    }), dword({\n        prefix: prefix + '/dword',\n        minify: minify,\n        online: online,\n        diff: diff,\n        zip: zip\n    }), deepword({\n        prefix: prefix + '/deepword',\n        minify: minify,\n        online: online,\n        diff: diff,\n        zip: zip\n    }), spero({\n        prefix: prefix + '/spero',\n        minify: minify,\n        online: online\n    }), remedy({\n        prefix: prefix + '/remedy',\n        minify: minify,\n        online: online\n    }), ishtar({\n        prefix: prefix + '/ishtar',\n        minify: minify,\n        online: online\n    }), salam({\n        prefix: prefix + '/salam'\n    }), omnes({\n        prefix: prefix + '/omnes'\n    }), nomine({\n        prefix: prefix + '/rename'\n    }), setUrl(prefix), logout, auth(), config.middle, modules && modulas(modules), restafary({\n        prefix: cloudfunc.apiURL + '/fs',\n        root: root\n    }), rest, route, join({\n        dir: DIR_ROOT,\n        minify: minify\n    }), mollify({\n        dir: DIR_ROOT,\n        is: minify\n    }), pluginer(plugins), ponseStatic]);\n\n    return funcs;\n}\n\nfunction logout(req, res, next) {\n    if (req.url !== '/logout') return next();\n\n    res.sendStatus(401);\n}\n\nfunction setUrl(pref) {\n    return function (req, res, next) {\n        var prefix = getPrefix(pref);\n        var is = !req.url.indexOf(prefix);\n\n        if (!is) return next();\n\n        req.url = req.url.replace(prefix, '') || '/';\n\n        if (/^\\/cloudcmd\\.js(\\.map)?$/.test(req.url)) req.url = '/dist' + req.url;\n\n        if (isDev) req.url = req.url.replace(/^\\/dist\\//, '/dist-dev/');\n\n        next();\n    };\n}\n\nfunction checkPlugins(plugins) {\n    if (typeof plugins === 'undefined') return;\n\n    if (!Array.isArray(plugins)) throw Error('plugins should be an array!');\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/cloudfunc.js":"'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar rendy = require('rendy');\nvar Entity = require('./entity');\n\n/* КОНСТАНТЫ (общие для клиента и сервера)*/\n\n/* название программы */\nvar NAME = 'Cloud Commander';\nvar FS = '/fs';\n\nvar Path = store();\n\nPath('/');\n\nmodule.exports.FS = FS;\nmodule.exports.apiURL = '/api/v1';\nmodule.exports.MAX_FILE_SIZE = 500 * 1024;\nmodule.exports.Entity = Entity;\n\nmodule.exports.formatMsg = function (msg, name) {\n    var status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ok';\n\n    if (name) name = '(\"' + name + '\")';else name = '';\n\n    return msg + ': ' + status + name;\n};\n\n/**\n * Функция возвращает заголовок веб страницы\n * @path\n */\nmodule.exports.getTitle = function (path) {\n    return NAME + ' - ' + (path || Path());\n};\n\n/** Функция получает адреса каждого каталога в пути\n * возвращаеться массив каталогов\n * @param url -  адрес каталога\n */\nfunction getPathLink(url, prefix, template) {\n    if (!url) throw Error('url could not be empty!');\n\n    if (!template) throw Error('template could not be empty!');\n\n    var names = url.split('/').slice(1, -1);\n\n    var allNames = ['/'].concat(_toConsumableArray(names));\n    var length = allNames.length - 1;\n\n    var path = '/';\n\n    var pathHTML = allNames.map(function (name, index) {\n        var isLast = index === length;\n\n        if (index) path += name + '/';\n\n        if (index && isLast) return name + '/';\n\n        var slash = index ? '/' : '';\n\n        return rendy(template, {\n            path: path,\n            name: name,\n            slash: slash,\n            prefix: prefix\n        });\n    }).join('');\n\n    return pathHTML;\n}\n\n/**\n * Функция строит таблицу файлв из JSON-информации о файлах\n * @param params - информация о файлах\n *\n */\nmodule.exports.buildFromJSON = function (params) {\n    var prefix = params.prefix;\n    var template = params.template;\n    var templateFile = template.file;\n    var templateLink = template.link;\n    var json = params.data;\n\n    var path = json.path,\n        files = json.files;\n\n\n    var sort = params.sort || 'name';\n    var order = params.order || 'asc';\n\n    /*\n     * Строим путь каталога в котором мы находимся\n     * со всеми подкаталогами\n     */\n    var htmlPath = getPathLink(path, prefix, template.pathLink);\n\n    var fileTable = rendy(template.path, {\n        link: prefix + FS + path,\n        fullPath: path,\n        path: htmlPath\n    });\n\n    var name = 'name';\n    var size = 'size';\n    var date = 'date';\n    var owner = 'owner';\n    var mode = 'mode';\n    var arrow = order === 'asc' ? '↑' : '↓';\n\n    if (sort === 'name' && order !== 'asc') name += arrow;else if (sort === 'size') size += arrow;else if (sort === 'date') date += arrow;\n\n    var header = rendy(templateFile, {\n        tag: 'div',\n        attribute: 'data-name=\"js-fm-header\" ',\n        className: 'fm-header',\n        type: '',\n        name: name,\n        size: size,\n        date: date,\n        owner: owner,\n        mode: mode\n    });\n\n    /* сохраняем путь */\n    Path(path);\n\n    fileTable += header + '<ul data-name=\"js-files\" class=\"files\">';\n    /* Если мы не в корне */\n    if (path !== '/') {\n        /* убираем последний слеш и каталог в котором мы сейчас находимся*/\n        var lastSlash = path.substr(path, path.lastIndexOf('/'));\n        var dotDot = lastSlash.substr(lastSlash, lastSlash.lastIndexOf('/'));\n\n        var link = prefix + FS + (dotDot || '/');\n\n        var linkResult = rendy(template.link, {\n            link: link,\n            title: '..',\n            name: '..'\n        });\n\n        var dataName = 'data-name=\"js-file-..\" ';\n        var attribute = 'draggable=\"true\" ' + dataName;\n\n        /* Сохраняем путь к каталогу верхнего уровня*/\n        fileTable += rendy(template.file, {\n            tag: 'li',\n            attribute: attribute,\n            className: '',\n            type: 'directory',\n            name: linkResult,\n            size: '&lt;dir&gt;',\n            date: '--.--.----',\n            owner: '.',\n            mode: '--- --- ---'\n        });\n    }\n\n    fileTable += files.map(function (file) {\n        var link = prefix + FS + path + file.name;\n\n        var type = getType(file.size);\n        var size = getSize(file.size);\n\n        var date = file.date || '--.--.----';\n        var owner = file.owner || 'root';\n        var mode = file.mode;\n\n        var linkResult = rendy(templateLink, {\n            link: link,\n            title: file.name,\n            name: Entity.encode(file.name),\n            attribute: getAttribute(file.size)\n        });\n\n        var dataName = 'data-name=\"js-file-' + file.name + '\" ';\n        var attribute = 'draggable=\"true\" ' + dataName;\n\n        return rendy(templateFile, {\n            tag: 'li',\n            attribute: attribute,\n            className: '',\n            type: type,\n            name: linkResult,\n            size: size,\n            date: date,\n            owner: owner,\n            mode: mode\n        });\n    }).join('');\n\n    fileTable += '</ul>';\n\n    return fileTable;\n};\n\nfunction getType(size) {\n    if (size === 'dir') return 'directory';\n\n    return 'text-file';\n}\n\nfunction getAttribute(size) {\n    if (size === 'dir') return '';\n\n    return 'target=\"_blank\" ';\n}\n\nfunction getSize(size) {\n    if (size === 'dir') return '&lt;dir&gt;';\n\n    return size;\n}\n\nfunction store() {\n    var data = {};\n    return function (value) {\n        if (typeof value !== 'undefined') data.value = value;\n\n        return data.value;\n    };\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/entity.js":"'use strict';\n\nvar Entities = {\n    '&nbsp;': ' ',\n    '&lt;': '<',\n    '&gt;': '>'\n};\n\nvar keys = Object.keys(Entities);\n\nmodule.exports.encode = function (str) {\n    keys.forEach(function (code) {\n        var char = Entities[code];\n        var reg = RegExp(char, 'g');\n\n        str = str.replace(reg, code);\n    });\n\n    return str;\n};\n\nmodule.exports.decode = function (str) {\n    keys.forEach(function (code) {\n        var char = Entities[code];\n        var reg = RegExp(code, 'g');\n\n        str = str.replace(reg, char);\n    });\n\n    return str;\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/auth.js":"'use strict';\n\nvar httpAuth = require('http-auth');\nvar criton = require('criton');\n\nvar config = require('./config');\n\nmodule.exports = function () {\n    var auth = httpAuth.basic({\n        realm: 'Cloud Commander'\n    }, check);\n\n    return middle(auth);\n};\n\nfunction middle(authentication) {\n    return function (req, res, next) {\n        var is = config('auth');\n\n        if (!is) return next();\n\n        var success = function success() {\n            return next();\n        };\n        authentication.check(req, res, success);\n    };\n}\n\nfunction check(username, password, callback) {\n    var BAD_CREDENTIALS = false;\n    var name = config('username');\n    var pass = config('password');\n    var algo = config('algo');\n\n    if (!password) return callback(BAD_CREDENTIALS);\n\n    var sameName = username === name;\n    var samePass = pass === criton(password, algo);\n\n    callback(sameName && samePass);\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/config.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar DIR_SERVER = __dirname + '/';\nvar DIR = DIR_SERVER + '../';\n\nvar path = require('path');\nvar fs = require('fs');\n\nvar exit = require(DIR_SERVER + 'exit');\nvar CloudFunc = require(DIR_SERVER + 'cloudfunc');\n\nvar pullout = require('pullout/legacy');\nvar ponse = require('ponse');\nvar jonny = require('jonny');\nvar jju = require('jju');\nvar writejson = require('writejson');\nvar tryCatch = require('try-catch');\nvar exec = require('execon');\nvar criton = require('criton');\nvar HOME = require('os-homedir')();\n\nvar apiURL = CloudFunc.apiURL;\n\nvar ConfigPath = path.join(DIR, 'json/config.json');\nvar ConfigHome = path.join(HOME, '.cloudcmd.json');\n\nvar readjsonSync = function readjsonSync(name) {\n    return jju.parse(fs.readFileSync(name, 'utf8'), {\n        mode: 'json'\n    });\n};\n\nvar key = function key(a) {\n    return Object.keys(a).pop();\n};\n\nvar config = void 0;\nvar error = tryCatch(function () {\n    config = readjsonSync(ConfigHome);\n});\n\nif (error) {\n    if (error.code !== 'ENOENT') console.error('cloudcmd --config ~/.cloudcmd.json:', error.message);\n\n    error = tryCatch(function () {\n        config = readjsonSync(ConfigPath);\n    });\n\n    if (error) exit('cloudcmd --config', ConfigPath + ':', error.message);\n}\n\nmodule.exports = manage;\nmodule.exports.save = save;\nmodule.exports.middle = middle;\nmodule.exports.listen = function (socket, authCheck) {\n    check(socket, authCheck);\n\n    if (!manage('configDialog')) return middle;\n\n    listen(socket, authCheck);\n\n    return middle;\n};\n\nfunction manage(key, value) {\n    if (!key) return;\n\n    if (key === '*') return config;\n\n    if (value === undefined) return config[key];\n\n    config[key] = value;\n}\n\nfunction save(callback) {\n    writejson(ConfigHome, config, callback);\n}\n\nfunction listen(sock, authCheck) {\n    var prefix = manage('prefix');\n\n    sock.of(prefix + '/config').on('connection', function (socket) {\n        var connect = exec.with(connection, socket);\n\n        exec.if(!manage('auth'), connect, function (fn) {\n            authCheck(socket, fn);\n        });\n    });\n}\n\nfunction connection(socket) {\n    socket.emit('config', config);\n\n    socket.on('message', function (json) {\n        if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) !== 'object') return socket.emit('err', 'Error: Wrong data type!');\n\n        cryptoPass(json);\n        traverse(json);\n\n        save(function (error) {\n            if (error) return socket.emit('err', error.message);\n\n            var data = CloudFunc.formatMsg('config', key(json));\n\n            socket.broadcast.send(json);\n            socket.send(json);\n            socket.emit('log', data);\n        });\n    });\n}\n\nfunction middle(req, res, next) {\n    var noConfigDialog = !manage('configDialog');\n\n    if (req.url !== apiURL + '/config') return next();\n\n    switch (req.method) {\n        case 'GET':\n            get(req, res, next);\n            break;\n\n        case 'PATCH':\n            if (noConfigDialog) return res.status(404).send('Config is disabled');\n\n            patch(req, res, next);\n            break;\n\n        default:\n            next();\n    }\n}\n\nfunction get(req, res) {\n    var data = jonny.stringify(config);\n\n    ponse.send(data, {\n        name: 'config.json',\n        request: req,\n        response: res,\n        cache: false\n    });\n}\n\nfunction patch(req, res, callback) {\n    var options = {\n        name: 'config.json',\n        request: req,\n        response: res,\n        cache: false\n    };\n\n    pullout(req, 'string', function (error, body) {\n        var json = jonny.parse(body) || {};\n\n        if (error) return callback(error);\n\n        cryptoPass(json);\n        traverse(json);\n\n        save(function (error) {\n            if (error) return ponse.sendError(error, options);\n\n            var data = CloudFunc.formatMsg('config', key(json));\n\n            ponse.send(data, options);\n        });\n    });\n}\n\nfunction traverse(json) {\n    Object.keys(json).forEach(function (name) {\n        manage(name, json[name]);\n    });\n}\n\nfunction cryptoPass(json) {\n    var algo = manage('algo');\n\n    if (json && json.password) json.password = criton(json.password, algo);\n}\n\nfunction check(socket, authCheck) {\n    if (!socket) throw Error('socket could not be empty!');\n\n    if (authCheck && typeof authCheck !== 'function') throw Error('authCheck should be function!');\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/exit.js":"'use strict';\n\nmodule.exports = function () {\n    console.error.apply(console, arguments);\n    process.exit(1);\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/modulas.js":"'use strict';\n\nvar deepmerge = require('deepmerge');\nvar originalModules = require('../json/modules');\n\nmodule.exports = function () {\n    var modules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var result = deepmerge(originalModules, modules);\n\n    return function (req, res, next) {\n        if (req.url !== '/json/modules.json') return next();\n\n        res.send(result);\n    };\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/rest.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar DIR = './';\nvar path = require('path');\n\nvar root = require(DIR + 'root');\nvar config = require(DIR + 'config');\nvar CloudFunc = require(DIR + 'cloudfunc');\nvar markdown = require(DIR + 'markdown');\n\nvar jaguar = require('jaguar/legacy');\nvar onezip = require('onezip/legacy');\nvar inly = require('inly/legacy');\nvar flop = require('flop/legacy');\nvar pullout = require('pullout/legacy');\nvar ponse = require('ponse');\nvar copymitter = require('copymitter/legacy');\nvar json = require('jonny');\nvar check = require('checkup');\n\nvar isWin32 = process.platform === 'win32';\n\n/**\n * rest interface\n *\n * @param request\n * @param response\n * @param callback\n */\nmodule.exports = function (request, response, next) {\n    check.type('next', next, 'function').check({\n        request: request,\n        response: response\n    });\n\n    var apiURL = CloudFunc.apiURL;\n    var name = ponse.getPathName(request);\n    var regExp = RegExp('^' + apiURL);\n    var is = regExp.test(name);\n\n    if (!is) return next();\n\n    var params = {\n        request: request,\n        response: response,\n        name: name.replace(apiURL, '') || '/'\n    };\n\n    sendData(params, function (error, options, data) {\n        params.gzip = !error;\n\n        if (!data) {\n            data = options;\n            options = {};\n        }\n\n        if (options.name) params.name = options.name;\n\n        if (options.gzip !== undefined) params.gzip = options.gzip;\n\n        if (options.query) params.query = options.query;\n\n        if (error) return ponse.sendError(error, params);\n\n        ponse.send(data, params);\n    });\n};\n\n/**\n * getting data on method and command\n *\n * @param params {name, method, body, requrest, response}\n */\nfunction sendData(params, callback) {\n    var p = params;\n    var isMD = RegExp('^/markdown').test(p.name);\n\n    if (isMD) return markdown(p.name, p.request, function (error, data) {\n        callback(error, data);\n    });\n\n    switch (p.request.method) {\n        case 'GET':\n            onGET(params, callback);\n            break;\n\n        case 'PUT':\n            pullout(p.request, 'string', function (error, body) {\n                if (error) return callback(error);\n\n                onPUT(p.name, body, callback);\n            });\n            break;\n    }\n}\n\nfunction onGET(params, callback) {\n    var cmd = void 0;\n    var p = params;\n\n    if (p.name[0] === '/') cmd = p.name.replace('/', '');\n\n    if (/^pack/.test(cmd)) {\n        cmd = cmd.replace(/^pack/, '');\n        streamPack(root(cmd), p.response);\n        return;\n    }\n\n    switch (cmd) {\n        case '':\n            p.data = json.stringify({\n                info: 'Cloud Commander API v1'\n            });\n\n            callback(null, { name: 'api.json' }, p.data);\n            break;\n\n        default:\n            callback({\n                message: 'Not Found'\n            });\n            break;\n    }\n}\n\nfunction getPackReg() {\n    if (config('packer') === 'zip') return (/\\.zip$/\n    );\n\n    return (/\\.tar\\.gz$/\n    );\n}\n\nfunction streamPack(cmd, response) {\n    var noop = function noop() {};\n    var filename = cmd.replace(getPackReg(), '');\n    var dir = path.dirname(filename);\n    var names = [path.basename(filename)];\n\n    operation('pack', dir, response, names, noop);\n}\n\nfunction getCMD(cmd) {\n    if (cmd[0] === '/') return cmd.slice(1);\n\n    return cmd;\n}\n\nfunction onPUT(name, body, callback) {\n    check.type('callback', callback, 'function').check({\n        name: name,\n        body: body\n    });\n\n    var cmd = getCMD(name);\n    var files = json.parse(body);\n\n    switch (cmd) {\n        case 'mv':\n            if (!files.from || !files.to) return callback(body);\n\n            if (isRootAll([files.to, files.from])) return callback(getWin32RootMsg());\n\n            files.from = root(files.from);\n            files.to = root(files.to);\n\n            copyFiles(files, flop.move, function (error) {\n                var data = !files.names ? files : files.names.slice();\n                var msg = formatMsg('move', data);\n\n                callback(error, msg);\n            });\n\n            break;\n\n        case 'cp':\n            if (!files.from || !files.names || !files.to) return callback(body);\n\n            if (isRootAll([files.to, files.from])) return callback(getWin32RootMsg());\n\n            files.from = root(files.from);\n            files.to = root(files.to);\n\n            copy(files.from, files.to, files.names, function (error) {\n                var msg = formatMsg('copy', files.names);\n                callback(error, msg);\n            });\n            break;\n\n        case 'pack':\n            if (!files.from) return callback(body);\n\n            pack(files.from, files.to, files.names, callback);\n            break;\n\n        case 'extract':\n            if (!files.from) return callback(body);\n\n            extract(files.from, files.to, callback);\n\n            break;\n\n        default:\n            callback();\n            break;\n    }\n}\n\nfunction pack(from, to, names, fn) {\n    from = root(from);\n    to = root(to);\n\n    if (!names) {\n        names = [path.basename(from)];\n\n        from = path.dirname(from);\n    }\n\n    operation('pack', from, to, names, fn);\n}\n\nfunction extract(from, to, fn) {\n    from = root(from);\n\n    if (to) to = root(to);else to = from.replace(/\\.tar\\.gz$/, '');\n\n    operation('extract', from, to, fn);\n}\n\nfunction getPacker(operation) {\n    if (operation === 'extract') return inly;\n\n    if (config('packer') === 'zip') return onezip.pack;\n\n    return jaguar.pack;\n}\n\nfunction operation(op, from, to, names, fn) {\n    if (!fn) {\n        fn = names;\n        names = [path.basename(from)];\n    }\n\n    var packer = getPacker(op);\n    var pack = packer(from, to, names);\n\n    pack.on('error', fn);\n\n    var name = names[0];\n    pack.on('progress', function (count) {\n        process.stdout.write('\\r' + op + ' \"' + name + '\": ' + count + '%');\n    });\n\n    pack.on('end', function () {\n        process.stdout.write('\\n');\n\n        var name = path.basename(from);\n        var msg = formatMsg(op, name);\n\n        fn(null, msg);\n    });\n}\n\nfunction copy(from, to, names, fn) {\n    copymitter(from, to, names).on('error', fn).on('progress', function (count) {\n        process.stdout.write('\\r copy ' + from + ' ' + to + ' ' + count + '%');\n    }).on('end', function () {\n        process.stdout.write('\\n');\n        fn();\n    });\n}\n\nfunction copyFiles(files, processFunc, callback) {\n    var names = files.names;\n\n    var copy = function copy() {\n        var isLast = void 0;\n        var name = void 0;\n        var from = files.from;\n        var to = files.to;\n\n        if (names) {\n            isLast = !names.length;\n            name = names.shift();\n            from += name;\n            to += name;\n        } else {\n            isLast = false;\n            names = [];\n        }\n\n        if (isLast) return callback();\n\n        processFunc(from, to, function (error) {\n            if (error) return callback(error);\n\n            copy();\n        });\n    };\n\n    check.type('callback', callback, 'function').type('processFunc', processFunc, 'function').check({\n        files: files\n    });\n\n    copy();\n}\n\nfunction isRootWin32(path) {\n    var isRoot = path === '/';\n    var isConfig = config('root') === '/';\n\n    return isWin32 && isRoot && isConfig;\n}\n\nfunction isRootAll(names) {\n    return names.some(function (name) {\n        return isRootWin32(name);\n    });\n}\n\nfunction getWin32RootMsg() {\n    var message = 'Could not copy from/to root on windows!';\n    var error = Error(message);\n\n    return error;\n}\n\nfunction formatMsg(msgParam, dataParam, status) {\n    var data = void 0;\n    var isObj = (typeof dataParam === 'undefined' ? 'undefined' : _typeof(dataParam)) === 'object';\n\n    if (isObj) data = json.stringify(dataParam);else data = dataParam;\n\n    return CloudFunc.formatMsg(msgParam, data, status);\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/root.js":"'use strict';\n\nvar config = require('./config');\nvar mellow = require('mellow');\n\nmodule.exports = function (dir) {\n    var root = config('root') || '/';\n\n    return mellow.pathToWin(dir, root);\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/markdown.js":"'use strict';\n\nvar DIR_ROOT = __dirname + '/../';\nvar fs = require('fs');\n\nvar pullout = require('pullout/legacy');\nvar ponse = require('ponse');\nvar markdown = require('markdown-it')();\n\nvar root = require('./root');\n\nmodule.exports = function (name, request, callback) {\n    var method = request.method;\n    var query = ponse.getQuery(request);\n\n    check(name, request, callback);\n\n    switch (method) {\n        case 'GET':\n            name = name.replace('/markdown', '');\n\n            if (query === 'relative') name = DIR_ROOT + name;else name = root(name);\n\n            fs.readFile(name, 'utf8', function (error, data) {\n                if (error) return callback(error);\n\n                parse(data, callback);\n            });\n            break;\n\n        case 'PUT':\n            pullout(request, 'string', function (error, data) {\n                if (error) return callback(error);\n\n                parse(data, callback);\n            });\n            break;\n    }\n};\n\nfunction parse(data, callback) {\n    process.nextTick(function () {\n        var md = markdown.render(data);\n\n        callback(null, md);\n    });\n}\n\nfunction check(name, request, callback) {\n    if (typeof name !== 'string') throw Error('name should be string!');\n\n    if (!request) throw Error('request could not be empty!');\n\n    if (typeof callback !== 'function') throw Error('callback should be function!');\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/route.js":"'use strict';\n\nvar DIR = __dirname + '/../';\nvar DIR_TMPL = DIR + 'tmpl/';\nvar DIR_HTML = DIR + 'html/';\nvar DIR_JSON = DIR + 'json/';\nvar DIR_SERVER = './';\nvar DIR_FS = DIR_TMPL + 'fs/';\n\nvar fs = require('fs');\n\nvar flop = require('flop/legacy');\nvar ponse = require('ponse');\nvar files = require('files-io');\nvar rendy = require('rendy');\nvar exec = require('execon');\nvar minify = require('minify');\nvar format = require('format-io');\nvar squad = require('squad');\nvar apart = require('apart');\n\nvar config = require(DIR_SERVER + 'config');\nvar root = require(DIR_SERVER + 'root');\nvar prefixer = require(DIR_SERVER + 'prefixer');\nvar CloudFunc = require(DIR_SERVER + 'cloudfunc');\nvar prefix = squad(prefixer, apart(config, 'prefix'));\n\nvar PATH_INDEX = DIR_HTML + 'index.html';\n\nvar TMPL_PATH = ['file', 'panel', 'path', 'pathLink', 'link'];\n\nvar Template = {};\nvar FS = CloudFunc.FS;\n\nvar CSS_URL = require(DIR_JSON + 'css.json').map(function (name) {\n    return 'css/' + name + '.css';\n}).join(':');\n\nmodule.exports = function (req, res, next) {\n    check(req, res, next);\n\n    readFiles(function () {\n        route(req, res, next);\n    });\n};\n\n/**\n * additional processing of index file\n */\nfunction indexProcessing(options) {\n    var keysPanel = '<div id=\"js-keyspanel\" class=\"{{ className }}';\n    var isOnePanel = config('onePanelMode');\n    var noConfig = !config('configDialog');\n    var noConsole = !config('console');\n    var panel = options.panel;\n\n    var data = options.data;\n\n    var from = void 0;\n    var to = void 0;\n    if (!config('showKeysPanel')) {\n        from = rendy(keysPanel, {\n            className: 'keyspanel'\n        });\n\n        to = rendy(keysPanel, {\n            className: 'keyspanel hidden'\n        });\n\n        data = data.replace(from, to);\n    }\n\n    if (isOnePanel) data = data.replace('icon-move', 'icon-move none').replace('icon-copy', 'icon-copy none');\n\n    if (noConfig) data = data.replace('icon-config', 'icon-config none');\n\n    if (noConsole) data = data.replace('icon-console', 'icon-console none');\n\n    var left = rendy(Template.panel, {\n        side: 'left',\n        content: panel,\n        className: !isOnePanel ? '' : 'panel-single'\n    });\n\n    var right = '';\n    if (!isOnePanel) right = rendy(Template.panel, {\n        side: 'right',\n        content: panel,\n        className: ''\n    });\n\n    data = rendy(data, {\n        title: CloudFunc.getTitle(),\n        fm: left + right,\n        prefix: prefix(),\n        config: JSON.stringify(config('*')),\n        css: CSS_URL\n    });\n\n    return data;\n}\n\nfunction readFiles(callback) {\n    var paths = {};\n    var lengthTmpl = Object.keys(Template).length;\n    var lenthPath = TMPL_PATH.length;\n    var isRead = lengthTmpl === lenthPath;\n\n    if (typeof callback !== 'function') throw Error('callback should be a function!');\n\n    if (isRead) return callback();\n\n    var filesList = TMPL_PATH.map(function (name) {\n        var path = DIR_FS + name + '.hbs';\n\n        paths[path] = name;\n\n        return path;\n    });\n\n    files.read(filesList, 'utf8', function (error, files) {\n        if (error) throw error;\n\n        Object.keys(files).forEach(function (path) {\n            var name = paths[path];\n\n            Template[name] = files[path];\n        });\n\n        callback();\n    });\n}\n\n/**\n * routing of server queries\n */\nfunction route(request, response, callback) {\n    var name = ponse.getPathName(request);\n\n    var isAuth = RegExp('^(/auth|/auth/github)$').test(name);\n    var isFS = RegExp('^/$|^' + FS).test(name);\n    var p = {\n        request: request,\n        response: response,\n        gzip: true,\n        name: name\n    };\n\n    if (!isAuth && !isFS) return callback();\n\n    if (isAuth) {\n        p.name = DIR_HTML + name + '.html';\n        ponse.sendFile(p);\n        return;\n    }\n\n    if (!isFS) return;\n\n    name = name.replace(CloudFunc.FS, '') || '/';\n    var fullPath = root(name);\n\n    flop.read(fullPath, function (error, dir) {\n        if (dir) dir.path = format.addSlashToEnd(name);\n\n        if (!error) return buildIndex(dir, function (error, data) {\n            p.name = PATH_INDEX;\n\n            if (error) return ponse.sendError(error, p);\n\n            ponse.send(data, p);\n        });\n\n        if (error.code !== 'ENOTDIR') return ponse.sendError(error, p);\n\n        fs.realpath(fullPath, function (error, pathReal) {\n            if (!error) p.name = pathReal;else p.name = name;\n\n            p.gzip = false;\n            ponse.sendFile(p);\n        });\n    });\n}\n\nfunction buildIndex(json, callback) {\n    var isMinify = config('minify');\n\n    exec.if(!isMinify, function (error, name) {\n        fs.readFile(name || PATH_INDEX, 'utf8', function (error, template) {\n            if (error) return;\n\n            var panel = CloudFunc.buildFromJSON({\n                data: json,\n                prefix: prefix(),\n                template: Template\n            });\n\n            var data = indexProcessing({\n                panel: panel,\n                data: template\n            });\n\n            callback(error, data);\n        });\n    }, function (callback) {\n        minify(PATH_INDEX, 'name', callback);\n    });\n}\n\nfunction check(req, res, next) {\n    if (!req) throw Error('req could not be empty!');\n\n    if (!res) throw Error('res could not be empty!');\n\n    if (typeof next !== 'function') throw Error('next should be function!');\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/prefixer.js":"'use strict';\n\nmodule.exports = function (value) {\n    if (typeof value !== 'string') return '';\n\n    if (value.length === 1) return '';\n\n    if (value && !~value.indexOf('/')) return '/' + value;\n\n    return value;\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/validate.js":"'use strict';\n\nvar exit = require('./exit');\n\nmodule.exports.root = root;\nmodule.exports.editor = editor;\nmodule.exports.packer = packer;\n\nfunction root(dir, fn) {\n    if (typeof dir !== 'string') throw Error('dir should be a string');\n\n    if (dir === '/') return;\n\n    var fs = require('fs');\n\n    fs.stat(dir, function (error) {\n        if (error) return exit('cloudcmd --root: %s', error.message);\n\n        if (typeof fn === 'function') fn('root:', dir);\n    });\n}\n\nfunction editor(name) {\n    var reg = /^(dword|edward|deepword)$/;\n\n    if (!reg.test(name)) exit('cloudcmd --editor: could be \"dword\", \"edward\" or \"deepword\" only');\n}\n\nfunction packer(name) {\n    var reg = /^(tar|zip)$/;\n\n    if (!reg.test(name)) exit('cloudcmd --packer: could be \"tar\" or \"zip\" only');\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/plugins.js":"'use strict';\n\nvar currify = require('currify/legacy');\nvar files = require('files-io');\n\nmodule.exports = currify(function (plugins, req, res, next) {\n    if (req.url !== '/plugins.js') return next();\n\n    if (!plugins || !plugins.length) return res.send('');\n\n    files.readPipe(plugins, res, function (e) {\n        if (!e) return;\n\n        res.end(e.message);\n    });\n});","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/terminal.js":"'use strict';\n\nvar tryCatch = require('try-catch');\nvar config = require('./config');\n\nvar noop = function noop() {};\nnoop.listen = noop;\n\nmodule.exports = getTerminal(config('terminal'));\n\nfunction getTerminal(term) {\n    if (!term) return noop;\n\n    var result = void 0;\n\n    var e = tryCatch(function () {\n        result = require(config('terminalPath'));\n    });\n\n    if (!e) return result;\n\n    config('terminal', false);\n    console.log('cloudcmd --terminal: ' + e.message);\n\n    return noop;\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/bin/cloudcmd.js":"#!/usr/bin/env node\n\n'use strict';\n\nconst Info = require('../package');\nconst DIR_SERVER = '../server/';\n\nconst exit = require(DIR_SERVER + 'exit');\nconst config = require(DIR_SERVER + 'config');\nconst env = require(DIR_SERVER + 'env');\n\nconst choose = (a, b) => {\n    if (!a && typeof a !== 'boolean')\n        return b;\n    \n    return a;\n};\n\nconst argv = process.argv;\nconst args = require('minimist')(argv.slice(2), {\n    string: [\n        'port',\n        'password',\n        'username',\n        'config',\n        'editor',\n        'packer',\n        'root',\n        'prefix',\n        'terminal-path',\n    ],\n    boolean: [\n        'auth',\n        'repl',\n        'save',\n        'server',\n        'online',\n        'open',\n        'minify',\n        'progress',\n        'config-dialog',\n        'console',\n        'terminal',\n        'one-panel-mode',\n        'html-dialogs'\n    ],\n    default: {\n        server      : true,\n        auth        : config('auth'),\n        port        : config('port'),\n        minify      : config('minify'),\n        online      : config('online'),\n        open        : config('open'),\n        editor      : config('editor') || 'edward',\n        packer      : config('packer') || 'tar',\n        zip         : config('zip'),\n        username    : config('username'),\n        root        : config('root') || '/',\n        prefix      : config('prefix') || '',\n        progress    : config('progress'),\n        console     : config('console'),\n        terminal    : choose(env.bool('terminal'), config('terminal')),\n        \n        'terminal-path': env('terminal_path') || config('terminalPath'),\n        'config-dialog': choose(env.bool('config_dialog'), config('configDialog')),\n        'one-panel-mode': config('onePanelMode'),\n        'html-dialogs': config('htmlDialogs')\n    },\n    alias: {\n        v: 'version',\n        h: 'help',\n        p: 'password',\n        o: 'online',\n        u: 'username',\n        s: 'save',\n        a: 'auth',\n        c: 'config'\n    },\n    unknown: (cmd) => {\n        exit('\\'%s\\' is not a cloudcmd option. See \\'cloudcmd --help\\'.', cmd);\n    }\n});\n\nif (args.version) {\n    version();\n} else if (args.help) {\n    help();\n} else {\n    if (args.repl)\n        repl();\n    \n    checkUpdate();\n    \n    port(args.port);\n    \n    config('auth', args.auth);\n    config('online', args.online);\n    config('open', args.open);\n    config('minify', args.minify);\n    config('username', args.username);\n    config('progress', args.progress);\n    config('console', args.console);\n    config('terminal', args.terminal);\n    config('terminalPath', args['terminal-path']);\n    config('editor', args.editor);\n    config('prefix', args.prefix);\n    config('root', args.root);\n    config('htmlDialogs', args['html-dialogs']);\n    config('onePanelMode', args['one-panel-mode']);\n    config('configDialog', args['config-dialog']);\n    \n    readConfig(args.config);\n    \n    const options = {\n        root: args.root || '/', /* --no-root */\n        editor: args.editor,\n        packer: args.packer,\n        prefix: args.prefix\n    };\n    \n    if (args.password)\n        config('password', getPassword(args.password));\n    \n    validateRoot(options.root);\n    \n    if (!args.save)\n        start(options);\n    else\n        config.save(() => {\n            start(options);\n        });\n}\n\nfunction validateRoot(root) {\n    const validate = require(DIR_SERVER + 'validate');\n    validate.root(root, console.log);\n}\n\nfunction getPassword(password) {\n    const criton = require('criton');\n    \n    return criton(password, config('algo'));\n}\n\nfunction version() {\n    console.log('v' + Info.version);\n}\n\nfunction start(config) {\n    const SERVER = DIR_SERVER + 'server';\n    \n    if (args.server)\n        require(SERVER)(config);\n}\n\nfunction port(arg) {\n    const number = parseInt(arg, 10);\n    \n    if (!isNaN(number))\n        config('port', number);\n    else\n        exit('cloudcmd --port: should be a number');\n}\n\nfunction readConfig(name) {\n    if (!name)\n        return;\n    \n    const fs = require('fs');\n    const tryCatch = require('try-catch');\n    const jju = require('jju');\n    \n    const readjsonSync = (name) => jju.parse(fs.readFileSync(name, 'utf8'), {\n        mode: 'json'\n    });\n    \n    let data;\n    \n    const error = tryCatch(() => {\n        data = readjsonSync(name);\n    });\n    \n    if (error)\n        return exit(error.message);\n    \n    Object.keys(data).forEach((item) => {\n        config(item, data[item]);\n    });\n}\n\nfunction help() {\n    const bin = require('../json/help');\n    const usage = 'Usage: cloudcmd [options]';\n    const url = Info.homepage;\n    \n    console.log(usage);\n    console.log('Options:');\n    \n    Object.keys(bin).forEach((name) => {\n        console.log('  %s %s', name, bin[name]);\n    });\n    \n    console.log('\\nGeneral help using Cloud Commander: <%s>', url);\n}\n\nfunction repl() {\n    console.log('REPL mode enabled (telnet localhost 1337)');\n    require(DIR_SERVER + 'repl');\n}\n\nfunction checkUpdate() {\n    const load = require('package-json');\n    const noop = () => {};\n    \n    load(Info.name, 'latest')\n        .then(showUpdateInfo)\n        .catch(noop);\n}\n\nfunction showUpdateInfo(data) {\n    const version = data.version;\n    \n    if (version !== Info.version) {\n        const chalk = require('chalk');\n        const rendy = require('rendy');\n        \n        const latest = rendy('update available: {{ latest }}', {\n            latest: chalk.green.bold('v' + version),\n        });\n        \n        const current = chalk.dim(rendy('(current: v{{ current }})', {\n            current: Info.version\n        }));\n        \n        console.log('%s %s', latest, current);\n    }\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/exit.js":"'use strict';\n\nmodule.exports = function() {\n    console.error.apply(console, arguments);\n    process.exit(1);\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/config.js":"'use strict';\n\nconst DIR_SERVER = __dirname + '/';\nconst DIR = DIR_SERVER + '../';\n\nconst path = require('path');\nconst fs = require('fs');\n\nconst exit = require(DIR_SERVER + 'exit');\nconst CloudFunc = require(DIR_SERVER + 'cloudfunc');\n\nconst pullout = require('pullout/legacy');\nconst ponse = require('ponse');\nconst jonny = require('jonny');\nconst jju = require('jju');\nconst writejson = require('writejson');\nconst tryCatch = require('try-catch');\nconst exec = require('execon');\nconst criton = require('criton');\nconst HOME = require('os-homedir')();\n\nconst apiURL = CloudFunc.apiURL;\n\nconst ConfigPath = path.join(DIR, 'json/config.json');\nconst ConfigHome = path.join(HOME, '.cloudcmd.json');\n\nconst readjsonSync = (name) => jju.parse(fs.readFileSync(name, 'utf8'), {\n    mode: 'json'\n});\n\nconst key = (a) => Object.keys(a).pop();\n\nlet config;\nlet error = tryCatch(() => {\n    config = readjsonSync(ConfigHome);\n});\n\nif (error) {\n    if (error.code !== 'ENOENT')\n        console.error('cloudcmd --config ~/.cloudcmd.json:', error.message);\n    \n    error = tryCatch(() => {\n        config = readjsonSync(ConfigPath);\n    });\n    \n    if (error)\n        exit('cloudcmd --config', ConfigPath + ':', error.message);\n}\n\nmodule.exports          = manage;\nmodule.exports.save     = save;\nmodule.exports.middle   = middle;\nmodule.exports.listen   = (socket, authCheck) => {\n    check(socket, authCheck);\n    \n    if (!manage('configDialog'))\n        return middle;\n    \n    listen(socket, authCheck);\n    \n    return middle;\n};\n\nfunction manage(key, value) {\n    if (!key)\n        return;\n    \n    if (key === '*')\n        return config;\n    \n    if (value === undefined)\n        return config[key];\n    \n    config[key] = value;\n}\n\nfunction save(callback) {\n    writejson(ConfigHome, config, callback);\n}\n\nfunction listen(sock, authCheck) {\n    const prefix = manage('prefix');\n    \n    sock.of(prefix + '/config')\n        .on('connection', (socket) => {\n            const connect = exec.with(connection, socket);\n            \n            exec.if(!manage('auth'), connect, (fn) => {\n                authCheck(socket, fn);\n            });\n        });\n}\n\nfunction connection(socket) {\n    socket.emit('config', config);\n    \n    socket.on('message', (json) => {\n        if (typeof json !== 'object')\n            return socket.emit('err', 'Error: Wrong data type!');\n            \n        cryptoPass(json);\n        traverse(json);\n        \n        save((error)  => {\n            if (error)\n                return socket.emit('err', error.message);\n            \n            const data = CloudFunc.formatMsg('config', key(json));\n            \n            socket.broadcast.send(json);\n            socket.send(json);\n            socket.emit('log', data);\n        });\n    });\n}\n\nfunction middle(req, res, next) {\n    const noConfigDialog = !manage('configDialog');\n    \n    if (req.url !== apiURL + '/config')\n        return next();\n        \n    switch(req.method) {\n    case 'GET':\n        get(req, res, next);\n        break;\n    \n    case 'PATCH':\n        if (noConfigDialog)\n            return res\n                .status(404)\n                .send('Config is disabled');\n         \n        patch(req, res, next);\n        break;\n    \n    default:\n        next();\n    }\n}\n\nfunction get(req, res) {\n    const data = jonny.stringify(config);\n    \n    ponse.send(data, {\n        name    : 'config.json',\n        request : req,\n        response: res,\n        cache   : false\n    });\n}\n\nfunction patch(req, res, callback) {\n    const options = {\n        name    : 'config.json',\n        request : req,\n        response: res,\n        cache   : false\n    };\n    \n    pullout(req, 'string', (error, body) => {\n        const json = jonny.parse(body) || {};\n        \n        if (error)\n            return callback(error);\n        \n        cryptoPass(json);\n        traverse(json);\n        \n        save((error) => {\n            if (error)\n                return ponse.sendError(error, options);\n            \n            const data = CloudFunc.formatMsg('config', key(json));\n            \n            ponse.send(data, options);\n        });\n    });\n}\n\nfunction traverse(json) {\n    Object.keys(json).forEach((name) => {\n        manage(name, json[name]);\n    });\n}\n\nfunction cryptoPass(json) {\n    const algo = manage('algo');\n    \n    if (json && json.password)\n        json.password = criton(json.password, algo);\n}\n\nfunction check(socket, authCheck) {\n    if (!socket)\n        throw Error('socket could not be empty!');\n    \n    if (authCheck && typeof authCheck !== 'function')\n        throw Error('authCheck should be function!');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/cloudfunc.js":"'use strict';\n\nconst rendy = require('rendy');\nconst Entity = require('./entity');\n\n/* КОНСТАНТЫ (общие для клиента и сервера)*/\n\n/* название программы */\nconst NAME = 'Cloud Commander';\nconst FS = '/fs';\n\nconst Path = store();\n\nPath('/');\n\nmodule.exports.FS = FS;\nmodule.exports.apiURL = '/api/v1';\nmodule.exports.MAX_FILE_SIZE = 500 * 1024;\nmodule.exports.Entity = Entity;\n\nmodule.exports.formatMsg = (msg, name, status = 'ok') => {\n    if (name)\n        name = '(\"' + name + '\")';\n    else\n        name = '';\n    \n    return msg + ': ' + status + name;\n};\n\n/**\n * Функция возвращает заголовок веб страницы\n * @path\n */\nmodule.exports.getTitle = (path) => {\n    return  NAME + ' - ' + (path || Path());\n};\n\n/** Функция получает адреса каждого каталога в пути\n * возвращаеться массив каталогов\n * @param url -  адрес каталога\n */\nfunction getPathLink(url, prefix, template) {\n    if (!url)\n        throw Error('url could not be empty!');\n    \n    if (!template)\n        throw Error('template could not be empty!');\n    \n    const names = url\n        .split('/')\n        .slice(1, -1);\n    \n    const allNames = ['/', ...names];\n    const length = allNames.length - 1;\n    \n    let path = '/';\n    \n    const pathHTML = allNames.map((name, index) => {\n        const isLast = index === length;\n        \n        if (index)\n            path += name + '/';\n        \n        if (index && isLast)\n            return name + '/';\n        \n        const slash = index ? '/' : '';\n        \n        return rendy(template, {\n            path,\n            name,\n            slash,\n            prefix,\n        });\n    }).join('');\n    \n    return pathHTML;\n}\n\n/**\n * Функция строит таблицу файлв из JSON-информации о файлах\n * @param params - информация о файлах\n *\n */\nmodule.exports.buildFromJSON = (params) => {\n    const prefix = params.prefix;\n    const template = params.template;\n    const templateFile = template.file;\n    const templateLink = template.link;\n    const json = params.data;\n    \n    const {path, files} = json;\n    \n    const sort = params.sort || 'name';\n    const order = params.order || 'asc';\n    \n    /*\n     * Строим путь каталога в котором мы находимся\n     * со всеми подкаталогами\n     */\n    const htmlPath = getPathLink(path, prefix, template.pathLink);\n    \n    let fileTable = rendy(template.path, {\n        link        : prefix + FS + path,\n        fullPath    : path,\n        path        : htmlPath\n    });\n    \n    let name = 'name';\n    let size = 'size';\n    let date = 'date';\n    const owner = 'owner';\n    const mode = 'mode';\n    const arrow = order === 'asc' ?  '↑' : '↓';\n    \n    if (sort === 'name' && order !== 'asc')\n        name += arrow;\n    else if (sort === 'size')\n        size += arrow;\n    else if (sort === 'date')\n        date += arrow;\n    \n    const header = rendy(templateFile, {\n        tag         : 'div',\n        attribute   : 'data-name=\"js-fm-header\" ',\n        className   : 'fm-header',\n        type        : '',\n        name,\n        size,\n        date,\n        owner,\n        mode,\n    });\n    \n    /* сохраняем путь */\n    Path(path);\n    \n    fileTable += header + '<ul data-name=\"js-files\" class=\"files\">';\n    /* Если мы не в корне */\n    if (path !== '/') {\n        /* убираем последний слеш и каталог в котором мы сейчас находимся*/\n        const lastSlash  = path.substr(path, path.lastIndexOf('/'));\n        const dotDot = lastSlash.substr(lastSlash, lastSlash.lastIndexOf('/'));\n        \n        const link = prefix + FS + (dotDot || '/');\n        \n        const linkResult = rendy(template.link, {\n            link,\n            title       : '..',\n            name        : '..'\n        });\n        \n        const dataName = 'data-name=\"js-file-..\" ';\n        const attribute = 'draggable=\"true\" ' + dataName;\n        \n        /* Сохраняем путь к каталогу верхнего уровня*/\n        fileTable += rendy(template.file, {\n            tag         : 'li',\n            attribute,\n            className   : '',\n            type        : 'directory',\n            name        : linkResult,\n            size        : '&lt;dir&gt;',\n            date        : '--.--.----',\n            owner       : '.',\n            mode        : '--- --- ---'\n        });\n    }\n    \n    fileTable += files.map((file) => {\n        const link = prefix + FS + path + file.name;\n        \n        const type = getType(file.size);\n        const size = getSize(file.size);\n        \n        const date = file.date || '--.--.----';\n        const owner = file.owner || 'root';\n        const mode = file.mode;\n        \n        const linkResult = rendy(templateLink, {\n            link,\n            title: file.name,\n            name: Entity.encode(file.name),\n            attribute: getAttribute(file.size)\n        });\n        \n        const dataName = 'data-name=\"js-file-' + file.name + '\" ';\n        const attribute = 'draggable=\"true\" ' + dataName;\n        \n        return rendy(templateFile, {\n            tag: 'li',\n            attribute,\n            className: '',\n            type,\n            name: linkResult,\n            size,\n            date,\n            owner,\n            mode,\n        });\n    }).join('');\n    \n    fileTable += '</ul>';\n    \n    return fileTable;\n};\n\nfunction getType(size) {\n    if (size === 'dir')\n        return 'directory';\n    \n    return 'text-file';\n}\n\nfunction getAttribute(size) {\n    if (size === 'dir')\n        return '';\n    \n    return 'target=\"_blank\" ';\n}\n\nfunction getSize(size) {\n    if (size === 'dir')\n        return '&lt;dir&gt;';\n    \n    return size;\n}\n\nfunction store() {\n    const data = {};\n    return (value) => {\n        if (typeof value !== 'undefined')\n            data.value = value;\n        \n        return data.value;\n    };\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/entity.js":"'use strict';\n\nconst Entities = {\n    '&nbsp;': ' ',\n    '&lt;': '<',\n    '&gt;': '>',\n};\n\nconst keys = Object.keys(Entities);\n\nmodule.exports.encode = (str) => {\n    keys.forEach((code) => {\n        const char = Entities[code];\n        const reg = RegExp(char, 'g');\n        \n        str = str.replace(reg, code);\n    });\n    \n    return str;\n};\n\nmodule.exports.decode = (str) => {\n    keys.forEach((code) => {\n        const char = Entities[code];\n        const reg = RegExp(code, 'g');\n        \n        str = str.replace(reg, char);\n    });\n    \n    return str;\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/env.js":"'use strict';\n\nconst env = process.env;\nconst up = (a) => a.toUpperCase();\n\nmodule.exports = parse;\nmodule.exports.bool = (name) => {\n    const value = parse(name);\n    \n    if (value === 'false')\n        return false;\n    \n    return value;\n};\n\nfunction parse(name) {\n    const small = `cloudcmd_${name}`;\n    const big = up(small);\n    \n    return env[small] || env[big];\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/validate.js":"'use strict';\n\nconst exit = require('./exit');\n\nmodule.exports.root = root;\nmodule.exports.editor = editor;\nmodule.exports.packer = packer;\n\nfunction root(dir, fn) {\n    if (typeof dir !== 'string')\n        throw Error('dir should be a string');\n    \n    if (dir === '/')\n        return;\n    \n    const fs = require('fs');\n    \n    fs.stat(dir, (error) => {\n        if (error)\n            return exit('cloudcmd --root: %s', error.message);\n        \n        if (typeof fn === 'function')\n            fn('root:', dir);\n    });\n}\n\nfunction editor(name) {\n    const reg = /^(dword|edward|deepword)$/;\n    \n    if (!reg.test(name))\n        exit('cloudcmd --editor: could be \"dword\", \"edward\" or \"deepword\" only');\n}\n\nfunction packer(name) {\n    const reg = /^(tar|zip)$/;\n    \n    if (!reg.test(name))\n        exit('cloudcmd --packer: could be \"tar\" or \"zip\" only');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/server.js":"'use strict';\n\nconst DIR_SERVER = './';\nconst cloudcmd = require(DIR_SERVER + 'cloudcmd');\n\nconst exit = require(DIR_SERVER + 'exit');\nconst config = require(DIR_SERVER + 'config');\nconst prefixer = require(DIR_SERVER + 'prefixer');\n\nconst http = require('http');\nconst opn = require('opn');\nconst express = require('express');\nconst io = require('socket.io');\nconst squad = require('squad');\nconst apart = require('apart');\n\nconst tryRequire = require('tryrequire');\nconst logger = tryRequire('morgan');\n\nconst prefix = squad(prefixer, apart(config, 'prefix'));\n\nmodule.exports = (options) => {\n    const port = process.env.PORT            ||  /* c9           */\n                 process.env.VCAP_APP_PORT   ||  /* cloudfoundry */\n                 config('port');\n    \n    const ip =  process.env.IP               ||  /* c9           */\n                config('ip')                 ||\n                '0.0.0.0';\n    \n    const app = express();\n    const server = http.createServer(app);\n    \n    if (logger)\n        app.use(logger('dev'));\n    \n    app.use(cloudcmd({\n        config: options,\n        socket: io(server, {\n            path: prefix() + '/socket.io'\n        }),\n    }));\n    \n    if (port < 0 || port > 65535)\n        exit('cloudcmd --port: %s', 'port number could be 1..65535, 0 means any available port');\n    \n    server.listen(port, ip, () => {\n        const host = config('ip') || 'localhost';\n        const port0 = port || server.address().port;\n        const url = `http://${host}:${port0}${prefix()}/`;\n        \n        console.log('url:', url);\n        \n        if (!config('open'))\n            return;\n        \n        opn(url);\n    });\n    \n    server.on('error', error => {\n        exit('cloudcmd --port: %s', error.message);\n    });\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/cloudcmd.js":"'use strict';\n\nconst DIR = __dirname + '/';\nconst DIR_ROOT = DIR + '../';\n\nconst cloudfunc = require(DIR + 'cloudfunc');\nconst auth = require(DIR + 'auth');\nconst config = require(DIR + 'config');\nconst modulas = require(DIR + 'modulas');\nconst rest = require(DIR + 'rest');\nconst route = require(DIR + 'route');\nconst validate = require(DIR + 'validate');\nconst prefixer = require(DIR + 'prefixer');\nconst pluginer = require(DIR + 'plugins');\nconst terminal = require(DIR + 'terminal');\n\nconst apart = require('apart');\nconst join = require('join-io');\nconst ponse = require('ponse');\nconst mollify = require('mollify');\nconst restafary = require('restafary/legacy');\nconst konsole = require('console-io/legacy');\nconst edward = require('edward/legacy');\nconst dword = require('dword/legacy');\nconst deepword = require('deepword/legacy');\nconst nomine = require('nomine/legacy');\nconst spero = require('spero');\nconst remedy = require('remedy');\nconst ishtar = require('ishtar');\nconst salam = require('salam/legacy');\nconst omnes = require('omnes/legacy');\nconst criton = require('criton');\n\nconst root = () => config('root');\n\nconst notEmpty = (a) => a;\nconst clean = (a) => a.filter(notEmpty);\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nfunction getPrefix(prefix) {\n    if (typeof prefix === 'function')\n        return prefix() || '';\n    \n    return prefix || '';\n}\n\nmodule.exports = (params) => {\n    const p = params || {};\n    const options = p.config || {};\n    const plugins = p.plugins;\n    const modules = p.modules;\n    \n    const keys = Object.keys(options);\n    \n    let prefix;\n    \n    checkPlugins(plugins);\n    \n    keys.forEach((name) => {\n        let value = options[name];\n        \n        switch(name) {\n        case 'root':\n            validate.root(value);\n            break;\n        case 'editor':\n            validate.editor(value);\n            break;\n        case 'packer':\n            validate.packer(value);\n            break;\n        case 'password':\n            /* could be useful when used as middleware */\n            value = criton(value, config('algo'));\n            break;\n        case 'prefix':\n            prefix = prefixer(value);\n            break;\n        }\n        \n        config(name, value);\n    });\n    \n    const console = config('console');\n    const configDialog = config('configDialog');\n    \n    config('console', defaultValue(options.console, console));\n    config('configDialog', defaultValue(options.configDialog, configDialog));\n    \n    if (p.socket)\n        listen(prefix, p.socket);\n    \n    return cloudcmd(prefix, plugins, modules);\n};\n\nfunction defaultValue(value, previous) {\n    if (typeof value === 'undefined')\n        return previous;\n    \n    return value;\n}\n\nfunction authCheck(socket, success) {\n    if (!config('auth'))\n        return success();\n    \n    socket.on('auth', (name, pass) => {\n        const isName = name === config('username');\n        const isPass = pass === config('password');\n        \n        if (!isName || !isPass)\n            return socket.emit('reject');\n        \n        success();\n        socket.emit('accept');\n    });\n}\n\nfunction listen(prefix, socket) {\n    const size = cloudfunc.MAX_SIZE;\n    \n    prefix = getPrefix(prefix);\n    \n    config.listen(socket, authCheck);\n    \n    edward.listen(socket, {\n        size,\n        root,\n        authCheck,\n        prefix: prefix + '/edward',\n    });\n    \n    dword.listen(socket, {\n        size,\n        root,\n        authCheck,\n        prefix: prefix + '/dword',\n    });\n    \n    deepword.listen(socket, {\n        size,\n        root,\n        authCheck,\n        prefix: prefix + '/deepword',\n    });\n    \n    spero.listen(socket, {\n        root,\n        authCheck,\n        prefix: prefix + '/spero',\n    });\n    \n    remedy.listen(socket, {\n        root,\n        authCheck,\n        prefix: prefix + '/remedy',\n    });\n    \n    ishtar.listen(socket, {\n        root,\n        authCheck,\n        prefix: prefix + '/ishtar',\n    });\n    \n    salam.listen(socket, {\n        root,\n        authCheck,\n        prefix: prefix + '/salam',\n    });\n    \n    omnes.listen(socket, {\n        root,\n        authCheck,\n        prefix: prefix + '/omnes',\n    });\n    \n    config('console') && konsole.listen(socket, {\n        authCheck,\n        prefix: prefix + '/console',\n    });\n    \n    config('terminal') && terminal.listen(socket, {\n        authCheck,\n        prefix: prefix + '/gritty',\n    });\n}\n\nfunction cloudcmd(prefix, plugins, modules) {\n    const isOption = (name) => {\n        return config(name);\n    };\n    \n    const minify = apart(isOption, 'minify');\n    const online = apart(isOption, 'online');\n    const cache = apart(isOption, 'cache');\n    const diff = apart(isOption, 'diff');\n    const zip = apart(isOption, 'zip');\n    \n    const ponseStatic = ponse.static(DIR_ROOT, {cache});\n   \n    const funcs = clean([\n        config('console') && konsole({\n            prefix: prefix + '/console',\n            minify,\n            online,\n        }),\n        \n        config('terminal') && terminal({\n            prefix: prefix + '/gritty',\n        }),\n        \n        edward({\n            prefix  : prefix + '/edward',\n            minify,\n            online,\n            diff,\n            zip,\n        }),\n       \n        dword({\n            prefix  : prefix + '/dword',\n            minify,\n            online,\n            diff,\n            zip,\n        }),\n        \n        deepword({\n            prefix  : prefix + '/deepword',\n            minify,\n            online,\n            diff,\n            zip,\n        }),\n        \n        spero({\n            prefix  : prefix + '/spero',\n            minify,\n            online,\n        }),\n        \n        remedy({\n            prefix  : prefix + '/remedy',\n            minify,\n            online,\n        }),\n        \n        ishtar({\n            prefix  : prefix + '/ishtar',\n            minify,\n            online,\n        }),\n        \n        salam({\n            prefix: prefix + '/salam',\n        }),\n        \n        omnes({\n            prefix: prefix + '/omnes',\n        }),\n        \n        nomine({\n            prefix: prefix + '/rename',\n        }),\n        \n        setUrl(prefix),\n        logout,\n        auth(),\n        config.middle,\n        \n        modules && modulas(modules),\n        \n        restafary({\n            prefix: cloudfunc.apiURL + '/fs',\n            root\n        }),\n        \n        rest,\n        route,\n        \n        join({\n            dir     : DIR_ROOT,\n            minify,\n        }),\n        \n        mollify({\n            dir : DIR_ROOT,\n            is  : minify,\n        }),\n        \n        pluginer(plugins),\n        ponseStatic\n    ]);\n    \n    return funcs;\n}\n\nfunction logout(req, res, next) {\n    if (req.url !== '/logout')\n        return next();\n    \n    res.sendStatus(401);\n}\n\nfunction setUrl(pref) {\n    return (req, res, next) => {\n        const prefix = getPrefix(pref);\n        const is = !req.url.indexOf(prefix);\n        \n        if (!is)\n            return next();\n        \n        req.url = req.url.replace(prefix, '') || '/';\n        \n        if (/^\\/cloudcmd\\.js(\\.map)?$/.test(req.url))\n            req.url = `/dist${req.url}`;\n        \n        if (isDev)\n            req.url = req.url.replace(/^\\/dist\\//, '/dist-dev/');\n        \n        next();\n    };\n}\n\nfunction checkPlugins(plugins) {\n    if (typeof plugins === 'undefined')\n        return;\n    \n    if (!Array.isArray(plugins))\n        throw Error('plugins should be an array!');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/auth.js":"'use strict';\n\nconst httpAuth = require('http-auth');\nconst criton = require('criton');\n\nconst config = require('./config');\n\nmodule.exports = () => {\n    const auth = httpAuth.basic({\n        realm: 'Cloud Commander'\n    }, check);\n    \n    return middle(auth);\n};\n\nfunction middle(authentication) {\n    return (req, res, next) => {\n        const is = config('auth');\n        \n        if (!is)\n            return next();\n        \n        const success = () => next(/* success */);\n        authentication.check(req, res, success);\n    };\n}\n\nfunction check(username, password, callback) {\n    const BAD_CREDENTIALS = false;\n    const name = config('username');\n    const pass = config('password');\n    const algo = config('algo');\n    \n    if (!password)\n        return callback(BAD_CREDENTIALS);\n    \n    const sameName = username === name;\n    const samePass = pass === criton(password, algo);\n    \n    callback(sameName && samePass);\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/modulas.js":"'use strict';\n\nconst deepmerge = require('deepmerge');\nconst originalModules = require('../json/modules');\n\nmodule.exports = (modules = {}) => {\n    const result = deepmerge(originalModules, modules);\n    \n    return (req, res, next) => {\n        if (req.url !== '/json/modules.json')\n            return next();\n        \n        res.send(result);\n    };\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/rest.js":"'use strict';\n\nconst DIR = './';\nconst path = require('path');\n\nconst root = require(DIR + 'root');\nconst config = require(DIR + 'config');\nconst CloudFunc = require(DIR + 'cloudfunc');\nconst markdown = require(DIR + 'markdown');\n\nconst jaguar = require('jaguar/legacy');\nconst onezip = require('onezip/legacy');\nconst inly = require('inly/legacy');\nconst flop = require('flop/legacy');\nconst pullout = require('pullout/legacy');\nconst ponse = require('ponse');\nconst copymitter = require('copymitter/legacy');\nconst json = require('jonny');\nconst check = require('checkup');\n\nconst isWin32 = process.platform === 'win32';\n\n/**\n * rest interface\n *\n * @param request\n * @param response\n * @param callback\n */\nmodule.exports = (request, response, next) => {\n    check\n        .type('next', next, 'function')\n        .check({\n            request,\n            response,\n        });\n    \n    const apiURL = CloudFunc.apiURL;\n    const name = ponse.getPathName(request);\n    const regExp = RegExp('^' + apiURL);\n    const is = regExp.test(name);\n    \n    if (!is)\n        return next();\n    \n    const params  = {\n        request,\n        response,\n        name: name.replace(apiURL, '') || '/',\n    };\n    \n    sendData(params, (error, options, data) => {\n        params.gzip = !error;\n        \n        if (!data) {\n            data = options;\n            options = {};\n        }\n        \n        if (options.name)\n            params.name = options.name;\n        \n        if (options.gzip !== undefined)\n            params.gzip = options.gzip;\n        \n        if (options.query)\n            params.query = options.query;\n        \n        if (error)\n            return ponse.sendError(error, params);\n        \n        ponse.send(data, params);\n    });\n};\n\n/**\n * getting data on method and command\n *\n * @param params {name, method, body, requrest, response}\n */\nfunction sendData(params, callback) {\n    const p = params;\n    const isMD = RegExp('^/markdown').test(p.name);\n    \n    if (isMD)\n        return markdown(p.name, p.request, (error, data) => {\n            callback(error, data);\n        });\n    \n    switch(p.request.method) {\n    case 'GET':\n        onGET(params, callback);\n        break;\n    \n    case 'PUT':\n        pullout(p.request, 'string', (error, body) => {\n            if (error)\n                return callback(error);\n            \n            onPUT(p.name, body, callback);\n        });\n        break;\n    }\n}\n\nfunction onGET(params, callback) {\n    let cmd;\n    const p = params;\n    \n    if (p.name[0] === '/')\n        cmd = p.name.replace('/', '');\n    \n    if (/^pack/.test(cmd)) {\n        cmd = cmd.replace(/^pack/, '');\n        streamPack(root(cmd), p.response);\n        return;\n    }\n    \n    switch(cmd) {\n    case '':\n        p.data = json.stringify({\n            info: 'Cloud Commander API v1'\n        });\n        \n        callback(null, {name: 'api.json'}, p.data);\n        break;\n    \n    default:\n        callback({\n            message: 'Not Found'\n        });\n        break;\n    }\n}\n\nfunction getPackReg() {\n    if (config('packer') === 'zip')\n        return /\\.zip$/;\n    \n    return /\\.tar\\.gz$/;\n}\n\nfunction streamPack(cmd, response) {\n    const noop = () => {};\n    const filename = cmd.replace(getPackReg(), '');\n    const dir = path.dirname(filename);\n    const names = [\n        path.basename(filename)\n    ];\n    \n    operation('pack', dir, response, names, noop);\n}\n\nfunction getCMD(cmd) {\n    if (cmd[0] === '/')\n        return cmd.slice(1);\n    \n    return cmd;\n}\n\nfunction onPUT(name, body, callback) {\n    check\n        .type('callback', callback, 'function')\n        .check({\n            name,\n            body,\n        });\n    \n    const cmd = getCMD(name);\n    const files = json.parse(body);\n    \n    switch(cmd) {\n    case 'mv':\n        if (!files.from || !files.to)\n            return callback(body);\n        \n        if (isRootAll([files.to, files.from]))\n            return callback(getWin32RootMsg());\n            \n        files.from = root(files.from);\n        files.to = root(files.to);\n        \n        copyFiles(files, flop.move, (error) => {\n            const data = !files.names ? files : files.names.slice();\n            const msg = formatMsg('move', data);\n            \n            callback(error, msg);\n        });\n        \n        break;\n    \n    case 'cp':\n        if (!files.from || !files.names || !files.to)\n            return callback(body);\n        \n        if (isRootAll([files.to, files.from]))\n            return callback(getWin32RootMsg());\n            \n        files.from  = root(files.from);\n        files.to    = root(files.to);\n        \n        copy(files.from, files.to, files.names, (error) => {\n            const msg = formatMsg('copy', files.names);\n            callback(error, msg);\n        });\n        break;\n    \n    case 'pack':\n        if (!files.from)\n            return callback(body);\n        \n        pack(files.from, files.to, files.names, callback);\n        break;\n    \n    case 'extract':\n        if (!files.from)\n            return callback(body);\n        \n        extract(files.from, files.to, callback);\n        \n        break;\n    \n    default:\n        callback();\n        break;\n    }\n}\n\nfunction pack(from, to, names, fn) {\n    from = root(from);\n    to = root(to);\n    \n    if (!names) {\n        names = [\n            path.basename(from)\n        ];\n        \n        from = path.dirname(from);\n    }\n    \n    operation('pack', from, to, names, fn);\n}\n\nfunction extract(from, to, fn) {\n    from = root(from);\n    \n    if (to)\n        to  = root(to);\n    else\n        to = from.replace(/\\.tar\\.gz$/, '');\n    \n    operation('extract', from, to, fn);\n}\n\nfunction getPacker(operation) {\n    if (operation === 'extract')\n        return inly;\n    \n    if (config('packer') === 'zip')\n        return onezip.pack;\n    \n    return jaguar.pack;\n}\n\nfunction operation(op, from, to, names, fn) {\n    if (!fn) {\n        fn      = names;\n        names   = [\n            path.basename(from)\n        ];\n    }\n    \n    const packer = getPacker(op);\n    const pack = packer(from, to, names);\n    \n    pack.on('error', fn);\n    \n    const name = names[0];\n    pack.on('progress', (count) => {\n        process.stdout.write(`\\r${ op } \"${ name }\": ${ count }%`);\n    });\n    \n    pack.on('end', () => {\n        process.stdout.write('\\n');\n        \n        const name = path.basename(from);\n        const msg = formatMsg(op, name);\n        \n        fn(null, msg);\n    });\n}\n\nfunction copy(from, to, names, fn) {\n    copymitter(from, to, names)\n        .on('error', fn)\n        .on('progress', (count) => {\n            process.stdout.write(`\\r copy ${from} ${to} ${count}%`);\n        })\n        .on('end', () => {\n            process.stdout.write('\\n');\n            fn();\n        });\n}\n\nfunction copyFiles(files, processFunc, callback) {\n    let names = files.names;\n    \n    const copy = () => {\n        let isLast;\n        let name;\n        let from = files.from;\n        let to = files.to;\n        \n        if (names) {\n            isLast  = !names.length;\n            name    = names.shift();\n            from    += name;\n            to      += name;\n        } else {\n            isLast  = false;\n            names   = [];\n        }\n        \n        if (isLast)\n            return callback();\n        \n        processFunc(from, to, error => {\n            if (error)\n                return callback(error);\n            \n            copy();\n        });\n    };\n    \n    check\n        .type('callback', callback, 'function')\n        .type('processFunc', processFunc, 'function')\n        .check({\n            files: files\n        });\n    \n    copy();\n}\n\nfunction isRootWin32(path) {\n    const isRoot = path === '/';\n    const isConfig = config('root') === '/';\n\n    return isWin32 && isRoot && isConfig;\n}\n\nfunction isRootAll(names) {\n    return names.some((name) => {\n        return isRootWin32(name);\n    });\n}\n\nfunction getWin32RootMsg() {\n    const message = 'Could not copy from/to root on windows!';\n    const error = Error(message);\n    \n    return error;\n}\n\nfunction formatMsg(msgParam, dataParam, status) {\n    let data;\n    const isObj = typeof dataParam === 'object';\n    \n    if (isObj)\n        data = json.stringify(dataParam);\n    else\n        data = dataParam;\n    \n    return CloudFunc.formatMsg(msgParam, data, status);\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/root.js":"'use strict';\n\nconst config = require('./config');\nconst mellow = require('mellow');\n\nmodule.exports = (dir) => {\n    const root = config('root') || '/';\n    \n    return mellow.pathToWin(dir, root);\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/markdown.js":"'use strict';\n\nconst DIR_ROOT = __dirname + '/../';\nconst fs = require('fs');\n\nconst pullout = require('pullout/legacy');\nconst ponse = require('ponse');\nconst markdown = require('markdown-it')();\n\nconst root = require('./root');\n\nmodule.exports  = (name, request, callback) => {\n    const method = request.method;\n    const query = ponse.getQuery(request);\n    \n    check(name, request, callback);\n    \n    switch(method) {\n    case 'GET':\n        name = name.replace('/markdown', '');\n            \n        if (query === 'relative')\n            name = DIR_ROOT + name;\n        else\n            name = root(name);\n        \n        fs.readFile(name, 'utf8', (error, data) => {\n            if (error)\n                return callback(error);\n            \n            parse(data, callback);\n        });\n        break;\n        \n    case 'PUT':\n        pullout(request, 'string', (error, data) => {\n            if (error)\n                return callback(error);\n            \n            parse(data, callback);\n        });\n        break;\n    }\n};\n\nfunction parse(data, callback) {\n    process.nextTick(() => {\n        const md = markdown.render(data);\n        \n        callback(null, md);\n    });\n}\n\nfunction check(name, request, callback) {\n    if (typeof name !== 'string')\n        throw Error('name should be string!');\n    \n    if (!request)\n        throw Error('request could not be empty!');\n    \n    if (typeof callback !== 'function')\n        throw Error('callback should be function!');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/route.js":"'use strict';\n\nconst DIR = __dirname + '/../';\nconst DIR_TMPL = DIR + 'tmpl/';\nconst DIR_HTML = DIR + 'html/';\nconst DIR_JSON = DIR + 'json/';\nconst DIR_SERVER = './';\nconst DIR_FS = DIR_TMPL + 'fs/';\n\nconst fs = require('fs');\n\nconst flop = require('flop/legacy');\nconst ponse = require('ponse');\nconst files = require('files-io');\nconst rendy = require('rendy');\nconst exec = require('execon');\nconst minify = require('minify');\nconst format = require('format-io');\nconst squad = require('squad');\nconst apart = require('apart');\n\nconst config = require(DIR_SERVER + 'config');\nconst root = require(DIR_SERVER + 'root');\nconst prefixer = require(DIR_SERVER + 'prefixer');\nconst CloudFunc = require(DIR_SERVER + 'cloudfunc');\nconst prefix = squad(prefixer, apart(config, 'prefix'));\n\nconst PATH_INDEX = DIR_HTML + 'index.html';\n\nconst TMPL_PATH   = [\n    'file',\n    'panel',\n    'path',\n    'pathLink',\n    'link'\n];\n\nconst Template = {};\nconst FS = CloudFunc.FS;\n\nconst CSS_URL = require(DIR_JSON + 'css.json')\n    .map((name) => {\n        return 'css/' + name + '.css';\n    }).join(':');\n\nmodule.exports = (req, res, next) => {\n    check(req, res, next);\n    \n    readFiles(() => {\n        route(req, res, next);\n    });\n};\n\n/**\n * additional processing of index file\n */\nfunction indexProcessing(options) {\n    const keysPanel = '<div id=\"js-keyspanel\" class=\"{{ className }}';\n    const isOnePanel = config('onePanelMode');\n    const noConfig = !config('configDialog');\n    const noConsole = !config('console');\n    const panel = options.panel;\n    \n    let data = options.data;\n    \n    let from;\n    let to;\n    if (!config('showKeysPanel')) {\n        from = rendy(keysPanel, {\n            className: 'keyspanel'\n        });\n        \n        to = rendy(keysPanel, {\n            className: 'keyspanel hidden'\n        });\n        \n        data = data.replace(from, to);\n    }\n    \n    if (isOnePanel)\n        data = data\n            .replace('icon-move', 'icon-move none')\n            .replace('icon-copy', 'icon-copy none');\n    \n    if (noConfig)\n        data = data\n             .replace('icon-config', 'icon-config none');\n    \n    if (noConsole)\n        data = data\n             .replace('icon-console', 'icon-console none');\n    \n    let left = rendy(Template.panel, {\n        side        : 'left',\n        content     : panel,\n        className   : !isOnePanel ? '' : 'panel-single'\n    });\n    \n    let right = '';\n    if (!isOnePanel)\n        right = rendy(Template.panel, {\n            side        : 'right',\n            content     : panel,\n            className   : ''\n        });\n    \n    data = rendy(data, {\n        title: CloudFunc.getTitle(),\n        fm: left + right,\n        prefix: prefix(),\n        config: JSON.stringify(config('*')),\n        css: CSS_URL\n    });\n    \n    return data;\n}\n\nfunction readFiles(callback) {\n    const paths = {};\n    const lengthTmpl = Object.keys(Template).length;\n    const lenthPath = TMPL_PATH.length;\n    const isRead = lengthTmpl === lenthPath;\n    \n    if (typeof callback !== 'function')\n        throw Error('callback should be a function!');\n    \n    if (isRead)\n        return callback();\n        \n    const filesList = TMPL_PATH.map((name) => {\n        const path = DIR_FS + name + '.hbs';\n        \n        paths[path] = name;\n        \n        return path;\n    });\n    \n    files.read(filesList, 'utf8', (error, files) => {\n        if (error)\n            throw error;\n            \n        Object.keys(files).forEach((path) => {\n            const name = paths[path];\n            \n            Template[name] = files[path];\n        });\n        \n        callback();\n    });\n}\n\n/**\n * routing of server queries\n */\nfunction route(request, response, callback) {\n    let name = ponse.getPathName(request);\n    \n    const isAuth = RegExp('^(/auth|/auth/github)$').test(name);\n    const isFS = RegExp('^/$|^' + FS).test(name);\n    const p = {\n        request     : request,\n        response    : response,\n        gzip        : true,\n        name        : name\n    };\n    \n    if (!isAuth && !isFS)\n        return callback();\n    \n    if (isAuth) {\n        p.name = DIR_HTML + name + '.html';\n        ponse.sendFile(p);\n        return;\n    }\n    \n    if (!isFS)\n        return;\n    \n    name = name.replace(CloudFunc.FS, '') || '/';\n    const fullPath = root(name);\n    \n    flop.read(fullPath, (error, dir) => {\n        if (dir)\n            dir.path = format.addSlashToEnd(name);\n        \n        if (!error)\n            return buildIndex(dir, (error, data) => {\n                p.name = PATH_INDEX;\n                \n                if (error)\n                    return ponse.sendError(error, p);\n                \n                ponse.send(data, p);\n            });\n        \n        if (error.code !== 'ENOTDIR')\n            return ponse.sendError(error, p);\n        \n        fs.realpath(fullPath, (error, pathReal) => {\n            if (!error)\n                p.name = pathReal;\n            else\n                p.name = name;\n            \n            p.gzip = false;\n            ponse.sendFile(p);\n        });\n    });\n}\n\nfunction buildIndex(json, callback) {\n    const isMinify = config('minify');\n    \n    exec.if(!isMinify, (error, name) => {\n        fs.readFile(name || PATH_INDEX, 'utf8', (error, template) => {\n            if (error)\n                return;\n                \n            const panel = CloudFunc.buildFromJSON({\n                data        : json,\n                prefix      : prefix(),\n                template    : Template\n            });\n            \n            const data = indexProcessing({\n                panel   : panel,\n                data    : template\n            });\n            \n            callback(error, data);\n        });\n    },  (callback) => {\n        minify(PATH_INDEX, 'name', callback);\n    });\n}\n\nfunction check(req, res, next) {\n    if (!req)\n        throw Error('req could not be empty!');\n    \n    if (!res)\n        throw Error('res could not be empty!');\n    \n    if (typeof next !== 'function')\n        throw Error('next should be function!');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/prefixer.js":"'use strict';\n\nmodule.exports = (value) => {\n    if (typeof value !== 'string')\n        return '';\n    \n    if (value.length === 1)\n        return '';\n    \n    if (value && !~value.indexOf('/'))\n        return '/' + value;\n    \n    return value;\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/plugins.js":"'use strict';\n\nconst currify = require('currify/legacy');\nconst files = require('files-io');\n\nmodule.exports = currify((plugins, req, res, next) => {\n    if (req.url !== '/plugins.js')\n        return next();\n    \n    if (!plugins || !plugins.length)\n        return res.send('');\n    \n    files.readPipe(plugins, res, (e) => {\n        if (!e)\n            return;\n        \n        res.end(e.message);\n    });\n});\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server/terminal.js":"'use strict';\n\nconst tryCatch = require('try-catch');\nconst config = require('./config');\n\nconst noop = () => {};\nnoop.listen = noop;\n\nmodule.exports = getTerminal(config('terminal'));\n\nfunction getTerminal(term) {\n    if (!term)\n        return noop;\n    \n    let result;\n    \n    const e = tryCatch(() => {\n        result = require(config('terminalPath'));\n    });\n    \n    if (!e)\n        return result;\n    \n    config('terminal', false);\n    console.log(`cloudcmd --terminal: ${e.message}`);\n    \n    return noop;\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/common/cloudfunc.js":"'use strict';\n\nmodule.exports = require('../server/cloudfunc');\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/common/util.js":"'use strict';\n\nconst exec = require('execon');\nconst rendy = require('rendy');\nconst jonny = require('jonny');\nconst itype = require('itype/legacy');\n\nconst Scope = global || window;\n\nmodule.exports.getStrBigFirst = getStrBigFirst;\nmodule.exports.kebabToCamelCase = kebabToCamelCase;\n\n/**\n * copy objFrom properties to target\n *\n * @target\n * @objFrom\n */\nconst extend = (target, objFrom) => {\n    const isFunc  = itype.function(objFrom);\n    const isArray = Array.isArray(objFrom);\n    const isObj = itype.object(target);\n    let ret = isObj ? target : {};\n    \n    if (isArray)\n        objFrom.forEach((item) => {\n           ret = Util.extend(target, item);\n        });\n    \n    else if (objFrom) {\n        const obj = isFunc ? new objFrom() : objFrom;\n        let keys = Object.keys(obj);\n        \n        if (!keys.length) {\n            const proto = Object.getPrototypeOf(objFrom);\n            keys = Object.keys(proto);\n        }\n        \n        keys.forEach((name) => {\n            ret[name] = obj[name];\n        });\n    }\n    \n    return ret;\n};\n\nmodule.exports.extend = extend;\n\n/**\n * extend proto\n *\n * @obj\n */\nmodule.exports.extendProto = (obj) => {\n    const F = () => {};\n    F.prototype = extend({}, obj);\n    return new F();\n};\n\nmodule.exports.json = jonny;\n\nmodule.exports.escapeRegExp = (str) => {\n    const isStr = typeof str === 'string';\n    \n    if (isStr)\n        str = str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    \n    return str;\n};\n\n/**\n * get regexp from wild card\n */\nmodule.exports.getRegExp = (wildcard = '*') => {\n    const escaped = '^' + wildcard // search from start of line\n        .replace('.', '\\\\.')\n        .replace('*', '.*')\n        .replace('?', '.?') + '$'; // search to end of line\n    \n    const regExp = new RegExp(escaped);\n    \n    return regExp;\n};\n\nmodule.exports.exec = exec;\n\n/**\n * function gets file extension\n *\n * @param name\n * @return ext\n */\nmodule.exports.getExt = (name) => {\n    const isStr = typeof name === 'string'\n    \n    if (!isStr)\n        return '';\n    \n    const dot = name.lastIndexOf('.');\n    \n    if (~dot)\n        return name.substr(dot);\n    \n    return '';\n};\n\n/**\n * find object by name in arrray\n *\n * @param array\n * @param name\n */\nmodule.exports.findObjByNameInArr = (array, name) => {\n    let ret;\n    \n     if (!Array.isArray(array))\n        throw Error('array should be array!');\n        \n    if (typeof name !== 'string')\n        throw Error('name should be string!');\n    \n    array.some((item) => {\n        let is = item.name === name;\n        const isArray = Array.isArray(item);\n        \n        if (is)\n            ret = item;\n        else if (isArray)\n            item.some((item) => {\n                is = item.name === name;\n                \n                if (is)\n                    ret = item.data;\n                \n                return is;\n            });\n        \n        return is;\n    });\n    \n    return ret;\n};\n\n/**\n * start timer\n * @param name\n */\nmodule.exports.time = (name) => {\n    const console = Scope.console;\n    \n    exec.ifExist(console, 'time', [name]);\n};\n\n/**\n * stop timer\n * @param name\n */\nmodule.exports.timeEnd = (name) => {\n    const console = Scope.console;\n    \n    exec.ifExist(console, 'timeEnd', [name]);\n};\n\nfunction getStrBigFirst(str) {\n    if (!str)\n        throw Error('str could not be empty!');\n    \n    const first = str[0].toUpperCase();\n    return first + str.slice(1);\n}\n\nfunction kebabToCamelCase(str) {\n    if (!str)\n        throw Error('str could not be empty!');\n    \n    return str\n        .split('-')\n        .map(getStrBigFirst)\n        .join('')\n        .replace(/.js$/, '');\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/legacy/package.js":"module.exports = require('../package');\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/env.js":"'use strict';\n\nvar env = process.env;\nvar up = function up(a) {\n    return a.toUpperCase();\n};\n\nmodule.exports = parse;\nmodule.exports.bool = function (name) {\n    var value = parse(name);\n\n    if (value === 'false') return false;\n\n    return value;\n};\n\nfunction parse(name) {\n    var small = 'cloudcmd_' + name;\n    var big = up(small);\n\n    return env[small] || env[big];\n}","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/repl.js":"'use strict';\n\nvar net = require('net');\nvar repl = require('repl');\n\nmodule.exports = net.createServer(function (socket) {\n    var pid = process.pid;\n    var addr = socket.remoteAddress;\n    var port = socket.remotePort;\n\n    var r = repl.start({\n        prompt: '[' + pid + ' ' + addr + ':' + port + '>',\n        input: socket,\n        output: socket,\n        terminal: true,\n        useGlobal: false\n    });\n\n    r.on('exit', function () {\n        socket.end();\n    });\n\n    r.context.socket = socket;\n}).listen(1337);","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/server_/server.js":"'use strict';\n\nvar DIR_SERVER = './';\nvar cloudcmd = require(DIR_SERVER + 'cloudcmd');\n\nvar exit = require(DIR_SERVER + 'exit');\nvar config = require(DIR_SERVER + 'config');\nvar prefixer = require(DIR_SERVER + 'prefixer');\n\nvar http = require('http');\nvar opn = require('opn');\nvar express = require('express');\nvar io = require('socket.io');\nvar squad = require('squad');\nvar apart = require('apart');\n\nvar tryRequire = require('tryrequire');\nvar logger = tryRequire('morgan');\n\nvar prefix = squad(prefixer, apart(config, 'prefix'));\n\nmodule.exports = function (options) {\n    var port = process.env.PORT || /* c9           */\n    process.env.VCAP_APP_PORT || /* cloudfoundry */\n    config('port');\n\n    var ip = process.env.IP || /* c9           */\n    config('ip') || '0.0.0.0';\n\n    var app = express();\n    var server = http.createServer(app);\n\n    if (logger) app.use(logger('dev'));\n\n    app.use(cloudcmd({\n        config: options,\n        socket: io(server, {\n            path: prefix() + '/socket.io'\n        })\n    }));\n\n    if (port < 0 || port > 65535) exit('cloudcmd --port: %s', 'port number could be 1..65535, 0 means any available port');\n\n    server.listen(port, ip, function () {\n        var host = config('ip') || 'localhost';\n        var port0 = port || server.address().port;\n        var url = 'http://' + host + ':' + port0 + prefix() + '/';\n\n        console.log('url:', url);\n\n        if (!config('open')) return;\n\n        opn(url);\n    });\n\n    server.on('error', function (error) {\n        exit('cloudcmd --port: %s', error.message);\n    });\n};","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/menu/menu-io.js":"var MenuIO;\n\n(function (window) {\n    'use strict';\n    \n    MenuIO = function(element, options, menuData) {\n        if (!(this instanceof MenuIO)) {\n            return new MenuIO(element, options, menuData);\n        }\n        \n        var ElementMenu,\n            Element,\n            Options         = {},\n            ElementFuncs    = new ElementFuncsProto(),\n            ElementHeight,\n            ElementWidth,\n            ElementEvent,\n            MenuFuncs       = {},\n            TEMPLATE        = {\n                MAIN:   '<ul data-name=\"js-menu\" class=\"menu menu-hidden\">'                             +\n                            '{{ items }}'                                                               +\n                        '</ul>',\n                ITEM:   '<li data-name=\"js-menu-item\" class=\"menu-item{{ className }}\"{{ attribute }}>' +\n                            '<label data-menu-path=\"{{ path }}\">{{ name }}</label>'                     +\n                            '{{ subitems }}'                                                            +\n                        '</li>'\n            };\n        \n        if (menuData) {\n            Element         =\n            ElementEvent    = element;\n            Options         = options;\n        } else if (options) {\n            Element         =\n            ElementEvent    = element;\n            menuData        = options;\n        } else {\n            Element         = document.body;\n            ElementEvent    = window;\n            menuData        = element;\n        }\n        \n        function init() {\n            var name, \n                isObj = typeof menuData === 'object';\n            \n            if (!isObj) {\n                name            = menuData;\n                menuData        = {};\n                menuData[name]  = null;\n            }\n            \n            ElementMenu         = createMenu(menuData);\n            \n            ElementEvent.addEventListener('click', onClick);\n            ElementEvent.addEventListener('contextmenu', onContextMenu);\n        }\n        \n        function createMenu(menuData) {\n            var menu,\n                items       = '',\n                buildItems  = function(menuData, path) {\n                    var DATA_MENU   = 'data-menu=\"js-submenu\"',\n                        Data_KEY    = 'data-key=',\n                        items       = '';\n                    \n                    if (path)\n                        path        += '.';\n                    else\n                        path        = '';\n                    \n                    Object.keys(menuData).forEach(function(name) {\n                        var nameIcon,\n                            key         = '',\n                            subitems    = '',\n                            className   = '',\n                            attribute   = '',\n                            pathName    = path + name,\n                            \n                            data        = menuData[name],\n                            isObj       = typeof data === 'object';\n                        \n                        if (!isObj) {\n                            MenuFuncs[pathName] = data;\n                        } else {\n                            subitems    = rendy(TEMPLATE.MAIN, {\n                                items: buildItems(data, pathName)\n                            });\n                            \n                            className   = ' menu-submenu';\n                            attribute   = ' ' + DATA_MENU;\n                        }\n                        \n                        if (Options.icon) {\n                            nameIcon    = name\n                                .replace(/\\(|\\)/g, '')\n                                .replace(/\\s/g, '-')\n                                .toLowerCase();\n                            \n                            className  += ' icon icon-' + nameIcon;\n                        }\n                        \n                        if (Options.keys) {\n                            key = Options.keys[name];\n                            \n                            if (key)\n                                attribute = ' ' + Data_KEY + key;\n                        }\n                        \n                        items           += rendy(TEMPLATE.ITEM, {\n                            name        : name,\n                            subitems    : subitems,\n                            className   : className,\n                            attribute   : attribute,\n                            path        : pathName\n                        });\n                    });\n                    \n                    return items;\n                };\n            \n            items = buildItems(menuData);\n            \n            menu  = document.createElement('ul');\n            menu.setAttribute('data-name', 'js-menu');\n            menu.className  = 'menu menu-hidden';\n            menu.innerHTML  = items;\n            \n            Element.appendChild(menu);\n            \n            return menu;\n        }\n        \n        this.show   = showMenuElement;\n        this.hide   = hideMenuElement;\n        \n        function checkElement(target, position) {\n            var is,\n                element = ElementFuncs.getItem(target),\n                isName  = ElementFuncs.isName(element),\n                isItem  = ElementFuncs.isItem(element),\n                isSub   = ElementFuncs.isSubMenu(element);\n            \n            if (!isName || !isItem) {\n                element = document.elementFromPoint(position.x, position.y);\n                isSub   = ElementFuncs.isSubMenu(element);\n                isName  = ElementFuncs.isName(element);\n                isItem  = ElementFuncs.isItem(element);\n            }\n            \n            is = {\n                name    : isName,\n                item    : isItem,\n                sub     : isSub,\n            };\n            \n            return is;\n        }\n        \n        function onClick(event, checkResult) {\n            var itemData, notClick,\n                afterClick  = Options.afterClick,\n                beforeClick = Options.beforeClick,\n                name        = Options.name,\n                \n                element     = event.target,\n                is          = checkResult || checkElement(element, {\n                    x: event.clientX,\n                    y: event.clientY\n                });\n            \n            notClick        = exec(beforeClick, name);\n            \n            if (is.sub) {\n                event.preventDefault();\n            } else {\n                hideMenuElement();\n                \n                if (!notClick && (is.name || is.item)) {\n                    itemData = getMenuItemData(element);\n                    exec(itemData);\n                    exec(afterClick);\n                }\n            }\n        }\n        \n        function onContextMenu(event) {\n            var element = event.target,\n                x       = event.clientX,\n                y       = event.clientY,\n                is      = checkElement(element, {\n                    x: x,\n                    y: y\n                });\n            \n            if (is.name || is.item || is.sub)\n                onClick(event, is);\n            else {\n                hideMenuElement();\n                showMenuElement(x, y);\n            }\n            \n            event.preventDefault();\n        }\n        \n        function setMenuPosition(x, y) {\n            var isNumberX   = typeof x === 'number',\n                isNumberY   = typeof y === 'number',\n                heightMenu  = getMenuHeight(),\n                widthMenu   = getMenuWidth(),\n                heightInner = window.innerHeight,\n                widthInner  = window.innerWidth;\n            \n            if (widthInner < widthMenu + x) {\n                x -= widthMenu;\n                \n                if (x < 0)\n                    x = 0;\n            }\n            \n            if (heightInner < heightMenu + y) {\n                y -= heightMenu;\n                \n                if (y < 0)\n                    y = 0;\n            }\n            \n            if (isNumberX)\n                ElementMenu.style.left  = x + 'px';\n            \n            if (isNumberY)\n                ElementMenu.style.top   = y - 14 + 'px';\n        }\n        \n        function showMenuElement(x, y) {\n            var beforeShow  = Options.beforeShow,\n                name        = Options.name,\n                params      = {\n                    x       : x,\n                    y       : y,\n                    name    : name\n                },\n                \n                notShow     = exec(beforeShow, params);\n            \n            if (!notShow) {\n                ElementMenu.classList.remove('menu-hidden');\n                setMenuPosition(params.x, params.y);\n            }\n        }\n        \n        function hideMenuElement() {\n            var notHide = exec(Options.beforeClose);\n            \n            if (!notHide)\n                ElementMenu.classList.add('menu-hidden');\n        }\n        \n        function getMenuItemData(element) {\n            var path, data;\n            \n            element     = ElementFuncs.getName(element);\n            \n            if (element) {\n                path    = element.getAttribute('data-menu-path');\n            }\n            \n            data        = MenuFuncs[path];\n            \n            return data;\n        }\n        \n        function getMenuHeight() {\n            var styleComputed, height;\n            \n            if (!ElementHeight) {\n                styleComputed   = getComputedStyle(ElementMenu);\n                height          = styleComputed.height;\n                \n                ElementHeight   = parseInt(height, 10);\n            }\n            \n            return ElementHeight;\n        }\n        \n        function getMenuWidth() {\n            var styleComputed, width;\n            \n            if (!ElementWidth) {\n                styleComputed   = getComputedStyle(ElementMenu);\n                width           = styleComputed.width;\n                \n                ElementWidth    = parseInt(width, 10);\n            }\n            \n            return ElementWidth;\n        }\n        \n        init();\n    };\n    \n    function ElementFuncsProto() {\n        this.getItem    = getItem;\n        this.getName    = getName;\n        this.isName     = isName;\n        this.isItem     = isItem;\n        this.isMenu     = isMenu;\n        this.isSubMenu  = isSubMenu;\n         \n         function getItem(element) {\n            var isNameElement;\n            \n            if (element) {\n                isNameElement = isName(element);\n                \n                if (isNameElement)\n                    element = element.parentElement;\n            }\n            \n            return element;\n        }\n        \n        function getName(element) {\n            var is;\n            \n            if (element) {\n                is = isName(element);\n                \n                if (!is)\n                    element = element.querySelector('[data-menu-path]');\n            }\n            \n            return element;\n        }\n        \n        function isName(element) {\n            var itIs;\n            \n            if (element)\n                itIs = element.hasAttribute('data-menu-path');\n            \n            return itIs;\n        }\n        \n        function isItem(element) {\n            var itIs = checkElementsName(element, 'js-menu-item');\n            \n            return itIs;\n        }\n        \n        function isMenu(element) {\n            var itIs = checkElementsName(element, 'js-menu');\n            \n            return itIs;\n        }\n        \n        function checkElementsName(element, nameElement, attribute) {\n            var itIs, name;\n            \n            if (!attribute)\n                attribute = 'data-name';\n            \n            if (element) {\n                name = element.getAttribute(attribute);\n                \n                if (name === nameElement)\n                    itIs = true;\n            }\n            \n            return itIs;\n        }\n        \n        function isSubMenu(element) {\n            var itIs, item,\n                attribute   = 'data-menu',\n                value       = 'js-submenu';\n            \n            item    = getItem(element);\n            itIs    = checkElementsName(item, value, attribute);\n            \n            return itIs;\n        }\n    }\n    \n    function exec(callback) {\n        var ret,\n            args    = [].slice.call(arguments, 1);\n       \n        if (typeof callback === 'function')\n            ret     = callback.apply(null, args);\n        \n        return ret;\n    }\n    \n    /*\n     * rendy v1.1.0\n     * https://github.com/coderaiser/rendy\n     */\n    \n    /**\n     * render template with data\n     *\n     * @param templ\n     * @param data\n     */\n    function rendy(templ, data) {\n        var result  = templ;\n        \n        check(templ, data);\n        \n        Object\n            .keys(data)\n            .forEach(function(param) {\n                var name    = '{{ ' + param + ' }}',\n                    str     = data[param];\n                \n                while(~result.indexOf(name))\n                    result = result.replace(name, str);\n            });\n        \n        if (~result.indexOf('{{'))\n            result = result.replace(/{{.*?}}/g, '');\n        \n        return result;\n    }\n    \n    function check(templ, data) {\n        if (typeof templ !== 'string')\n            throw(Error('template should be string!'));\n        \n        if (typeof data !== 'object')\n            throw(Error('data should be object!'));\n    }\n})(window);\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/olark/olark.js":"window.olark || (function (c) {\n    var f = window,\n        d = document,\n        l = f.location.protocol == \"https:\" ? \"https:\" : \"http:\",\n        z = c.name,\n        r = \"load\";\n    var nt = function () {\n        f[z] = function () {\n            (a.s = a.s || []).push(arguments);\n        };\n        var a = f[z]._ = {}, q = c.methods.length;\n        while (q--) {\n            (function (n) {\n                f[z][n] = function () {\n                    f[z](\"call\", n, arguments);\n                };\n            })(c.methods[q]);\n        }\n        a.l = c.loader;\n        a.i = nt;\n        a.p = {\n            0: +new Date()\n        };\n        a.P = function (u) {\n            a.p[u] = new Date() - a.p[0];\n        };\n\n        function s() {\n            a.P(r);\n            f[z](r);\n        }\n        f.addEventListener ? f.addEventListener(r, s, false) : f.attachEvent(\"on\" + r, s);\n        var ld = function () {\n            function p(hd) {\n                hd = \"head\";\n                return [\"<\", hd, \"></\", hd, \"><\", i, ' onl' + 'oad=\"var d=', g, \";d.getElementsByTagName('head')[0].\", j, \"(d.\", h, \"('script')).\", k, \"='\", l, \"//\", a.l, \"'\", '\"', \"></\", i, \">\"].join(\"\");\n            }\n            var i = \"body\",\n                m = d[i];\n            if (!m) {\n                return setTimeout(ld, 100);\n            }\n            a.P(1);\n            var j = \"appendChild\",\n                h = \"createElement\",\n                k = \"src\",\n                n = d[h](\"div\"),\n                v = n[j](d[h](z)),\n                b = d[h](\"iframe\"),\n                g = \"document\",\n                e = \"domain\",\n                o;\n            n.style.display = \"none\";\n            m.insertBefore(n, m.firstChild).id = z;\n            b.frameBorder = \"0\";\n            b.id = z + \"-loader\";\n            if (/MSIE[ ]+6/.test(navigator.userAgent)) {\n                b.src = \"javascript:false\";\n            }\n            b.allowTransparency = \"true\";\n            v[j](b);\n            try {\n                b.contentWindow[g].open();\n            } catch (w) {\n                c[e] = d[e];\n                o = \"javascript:var d=\" + g + \".open();d.domain='\" + d.domain + \"';\";\n                b[k] = o + \"void(0);\";\n            }\n            try {\n                var t = b.contentWindow[g];\n                t.write(p());\n                t.close();\n            } catch (x) {\n                b[k] = o + 'd.write(\"' + p().replace(/\"/g, String.fromCharCode(92) + '\"') + '\");d.close();';\n            }\n            a.P(2);\n        };\n        ld();\n    };\n    nt();\n})({\n    loader: \"static.olark.com/jsclient/loader0.js\",\n    name: \"olark\",\n    methods: [\"configure\", \"extend\", \"declare\", \"identify\"]\n});\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/emitify/lib/emitify.js":"'use strict';\n\nmodule.exports = Emitify;\n\nfunction Emitify() {\n    if (this instanceof Emitify)\n        this._all = {};\n    else\n        return new Emitify();\n}\n\nEmitify.prototype._check = function(event, callback) {\n    var isTwo = arguments.length === 2;\n    \n    if (typeof event !== 'string')\n        throw Error('event should be string!');\n    \n    if (isTwo && typeof callback !== 'function')\n        throw Error('callback should be function!');\n};\n\nEmitify.prototype.on   = function(event, callback) {\n    var funcs = this._all[event];\n    \n    this._check(event, callback);\n    \n    if (funcs)\n        funcs.push(callback);\n    else\n        this._all[event] = [callback];\n    \n    return this;\n};\n\nEmitify.prototype.addListener =\nEmitify.prototype.on;\n\nEmitify.prototype.once  = function(event, callback) {\n    var self = this;\n    \n    self._check(event, callback);\n    \n    self.on(event, function fn() {\n        callback.apply(null, arguments);\n        self.off(event, fn);\n    });\n    \n    return this;\n};\n\nEmitify.prototype.off   = function(event, callback) {\n    var events  = this._all[event] || [],\n        index   = events.indexOf(callback);\n    \n    this._check(event, callback);\n    \n    while (~index) {\n        events.splice(index, 1);\n        index = events.indexOf(callback);\n    }\n    \n    return this;\n};\n\nEmitify.prototype.removeListener    =\nEmitify.prototype.off;\n\nEmitify.prototype.emit = function(event) {\n    var args    = [].slice.call(arguments, 1),\n        funcs   = this._all[event];\n    \n    this._check(event);\n    \n    if (funcs)\n        funcs.forEach(function(fn) {\n            fn.apply(null, args);\n        });\n    else if (event === 'error')\n        throw args[0];\n    \n    return this;\n};\n\nEmitify.prototype.removeAllListeners = function(event) {\n    this._check(event);\n    this._all[event] = [];\n    \n    return this;\n};\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/fancybox/source/jquery.fancybox.js":"/*!\n * fancyBox - jQuery Plugin\n * version: 2.1.5 (Fri, 14 Jun 2013)\n * requires jQuery v1.6 or later\n *\n * Examples at http://fancyapps.com/fancybox/\n * License: www.fancyapps.com/fancybox/#license\n *\n * Copyright 2012 Janis Skarnelis - janis@fancyapps.com\n *\n */\n\n;(function (window, document, $, undefined) {\n\t\"use strict\";\n\n\tvar H = $(\"html\"),\n\t\tW = $(window),\n\t\tD = $(document),\n\t\tF = $.fancybox = function () {\n\t\t\tF.open.apply( this, arguments );\n\t\t},\n\t\tIE =  navigator.userAgent.match(/msie/i),\n\t\tdidUpdate\t= null,\n\t\tisTouch\t\t= document.createTouch !== undefined,\n\n\t\tisQuery\t= function(obj) {\n\t\t\treturn obj && obj.hasOwnProperty && obj instanceof $;\n\t\t},\n\t\tisString = function(str) {\n\t\t\treturn str && $.type(str) === \"string\";\n\t\t},\n\t\tisPercentage = function(str) {\n\t\t\treturn isString(str) && str.indexOf('%') > 0;\n\t\t},\n\t\tisScrollable = function(el) {\n\t\t\treturn (el && !(el.style.overflow && el.style.overflow === 'hidden') && ((el.clientWidth && el.scrollWidth > el.clientWidth) || (el.clientHeight && el.scrollHeight > el.clientHeight)));\n\t\t},\n\t\tgetScalar = function(orig, dim) {\n\t\t\tvar value = parseInt(orig, 10) || 0;\n\n\t\t\tif (dim && isPercentage(orig)) {\n\t\t\t\tvalue = F.getViewport()[ dim ] / 100 * value;\n\t\t\t}\n\n\t\t\treturn Math.ceil(value);\n\t\t},\n\t\tgetValue = function(value, dim) {\n\t\t\treturn getScalar(value, dim) + 'px';\n\t\t};\n\n\t$.extend(F, {\n\t\t// The current version of fancyBox\n\t\tversion: '2.1.5',\n\n\t\tdefaults: {\n\t\t\tpadding : 15,\n\t\t\tmargin  : 20,\n\n\t\t\twidth     : 800,\n\t\t\theight    : 600,\n\t\t\tminWidth  : 100,\n\t\t\tminHeight : 100,\n\t\t\tmaxWidth  : 9999,\n\t\t\tmaxHeight : 9999,\n\t\t\tpixelRatio: 1, // Set to 2 for retina display support\n\n\t\t\tautoSize   : true,\n\t\t\tautoHeight : false,\n\t\t\tautoWidth  : false,\n\n\t\t\tautoResize  : true,\n\t\t\tautoCenter  : !isTouch,\n\t\t\tfitToView   : true,\n\t\t\taspectRatio : false,\n\t\t\ttopRatio    : 0.5,\n\t\t\tleftRatio   : 0.5,\n\n\t\t\tscrolling : 'auto', // 'auto', 'yes' or 'no'\n\t\t\twrapCSS   : '',\n\n\t\t\tarrows     : true,\n\t\t\tcloseBtn   : true,\n\t\t\tcloseClick : false,\n\t\t\tnextClick  : false,\n\t\t\tmouseWheel : true,\n\t\t\tautoPlay   : false,\n\t\t\tplaySpeed  : 3000,\n\t\t\tpreload    : 3,\n\t\t\tmodal      : false,\n\t\t\tloop       : true,\n\n\t\t\tajax  : {\n\t\t\t\tdataType : 'html',\n\t\t\t\theaders  : { 'X-fancyBox': true }\n\t\t\t},\n\t\t\tiframe : {\n\t\t\t\tscrolling : 'auto',\n\t\t\t\tpreload   : true\n\t\t\t},\n\t\t\tswf : {\n\t\t\t\twmode: 'transparent',\n\t\t\t\tallowfullscreen   : 'true',\n\t\t\t\tallowscriptaccess : 'always'\n\t\t\t},\n\n\t\t\tkeys  : {\n\t\t\t\tnext : {\n\t\t\t\t\t13 : 'left', // enter\n\t\t\t\t\t34 : 'up',   // page down\n\t\t\t\t\t39 : 'left', // right arrow\n\t\t\t\t\t40 : 'up'    // down arrow\n\t\t\t\t},\n\t\t\t\tprev : {\n\t\t\t\t\t8  : 'right',  // backspace\n\t\t\t\t\t33 : 'down',   // page up\n\t\t\t\t\t37 : 'right',  // left arrow\n\t\t\t\t\t38 : 'down'    // up arrow\n\t\t\t\t},\n\t\t\t\tclose  : [27], // escape key\n\t\t\t\tplay   : [32], // space - start/stop slideshow\n\t\t\t\ttoggle : [70]  // letter \"f\" - toggle fullscreen\n\t\t\t},\n\n\t\t\tdirection : {\n\t\t\t\tnext : 'left',\n\t\t\t\tprev : 'right'\n\t\t\t},\n\n\t\t\tscrollOutside  : true,\n\n\t\t\t// Override some properties\n\t\t\tindex   : 0,\n\t\t\ttype    : null,\n\t\t\thref    : null,\n\t\t\tcontent : null,\n\t\t\ttitle   : null,\n\n\t\t\t// HTML templates\n\t\t\ttpl: {\n\t\t\t\twrap     : '<div class=\"fancybox-wrap\" tabIndex=\"-1\"><div class=\"fancybox-skin\"><div class=\"fancybox-outer\"><div class=\"fancybox-inner\"></div></div></div></div>',\n\t\t\t\timage    : '<img class=\"fancybox-image\" src=\"{href}\" alt=\"\" />',\n\t\t\t\tiframe   : '<iframe id=\"fancybox-frame{rnd}\" name=\"fancybox-frame{rnd}\" class=\"fancybox-iframe\" frameborder=\"0\" vspace=\"0\" hspace=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + (IE ? ' allowtransparency=\"true\"' : '') + '></iframe>',\n\t\t\t\terror    : '<p class=\"fancybox-error\">The requested content cannot be loaded.<br/>Please try again later.</p>',\n\t\t\t\tcloseBtn : '<a title=\"Close\" class=\"fancybox-item fancybox-close\" href=\"javascript:;\"></a>',\n\t\t\t\tnext     : '<a title=\"Next\" class=\"fancybox-nav fancybox-next\" href=\"javascript:;\"><span></span></a>',\n\t\t\t\tprev     : '<a title=\"Previous\" class=\"fancybox-nav fancybox-prev\" href=\"javascript:;\"><span></span></a>',\n\t\t\t\tloading  : '<div id=\"fancybox-loading\"><div></div></div>'\n\t\t\t},\n\n\t\t\t// Properties for each animation type\n\t\t\t// Opening fancyBox\n\t\t\topenEffect  : 'fade', // 'elastic', 'fade' or 'none'\n\t\t\topenSpeed   : 250,\n\t\t\topenEasing  : 'swing',\n\t\t\topenOpacity : true,\n\t\t\topenMethod  : 'zoomIn',\n\n\t\t\t// Closing fancyBox\n\t\t\tcloseEffect  : 'fade', // 'elastic', 'fade' or 'none'\n\t\t\tcloseSpeed   : 250,\n\t\t\tcloseEasing  : 'swing',\n\t\t\tcloseOpacity : true,\n\t\t\tcloseMethod  : 'zoomOut',\n\n\t\t\t// Changing next gallery item\n\t\t\tnextEffect : 'elastic', // 'elastic', 'fade' or 'none'\n\t\t\tnextSpeed  : 250,\n\t\t\tnextEasing : 'swing',\n\t\t\tnextMethod : 'changeIn',\n\n\t\t\t// Changing previous gallery item\n\t\t\tprevEffect : 'elastic', // 'elastic', 'fade' or 'none'\n\t\t\tprevSpeed  : 250,\n\t\t\tprevEasing : 'swing',\n\t\t\tprevMethod : 'changeOut',\n\n\t\t\t// Enable default helpers\n\t\t\thelpers : {\n\t\t\t\toverlay : true,\n\t\t\t\ttitle   : true\n\t\t\t},\n\n\t\t\t// Callbacks\n\t\t\tonCancel     : $.noop, // If canceling\n\t\t\tbeforeLoad   : $.noop, // Before loading\n\t\t\tafterLoad    : $.noop, // After loading\n\t\t\tbeforeShow   : $.noop, // Before changing in current item\n\t\t\tafterShow    : $.noop, // After opening\n\t\t\tbeforeChange : $.noop, // Before changing gallery item\n\t\t\tbeforeClose  : $.noop, // Before closing\n\t\t\tafterClose   : $.noop  // After closing\n\t\t},\n\n\t\t//Current state\n\t\tgroup    : {}, // Selected group\n\t\topts     : {}, // Group options\n\t\tprevious : null,  // Previous element\n\t\tcoming   : null,  // Element being loaded\n\t\tcurrent  : null,  // Currently loaded element\n\t\tisActive : false, // Is activated\n\t\tisOpen   : false, // Is currently open\n\t\tisOpened : false, // Have been fully opened at least once\n\n\t\twrap  : null,\n\t\tskin  : null,\n\t\touter : null,\n\t\tinner : null,\n\n\t\tplayer : {\n\t\t\ttimer    : null,\n\t\t\tisActive : false\n\t\t},\n\n\t\t// Loaders\n\t\tajaxLoad   : null,\n\t\timgPreload : null,\n\n\t\t// Some collections\n\t\ttransitions : {},\n\t\thelpers     : {},\n\n\t\t/*\n\t\t *\tStatic methods\n\t\t */\n\n\t\topen: function (group, opts) {\n\t\t\tif (!group) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!$.isPlainObject(opts)) {\n\t\t\t\topts = {};\n\t\t\t}\n\n\t\t\t// Close if already active\n\t\t\tif (false === F.close(true)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Normalize group\n\t\t\tif (!$.isArray(group)) {\n\t\t\t\tgroup = isQuery(group) ? $(group).get() : [group];\n\t\t\t}\n\n\t\t\t// Recheck if the type of each element is `object` and set content type (image, ajax, etc)\n\t\t\t$.each(group, function(i, element) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\thref,\n\t\t\t\t\ttitle,\n\t\t\t\t\tcontent,\n\t\t\t\t\ttype,\n\t\t\t\t\trez,\n\t\t\t\t\threfParts,\n\t\t\t\t\tselector;\n\n\t\t\t\tif ($.type(element) === \"object\") {\n\t\t\t\t\t// Check if is DOM element\n\t\t\t\t\tif (element.nodeType) {\n\t\t\t\t\t\telement = $(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isQuery(element)) {\n\t\t\t\t\t\tobj = {\n\t\t\t\t\t\t\thref    : element.data('fancybox-href') || element.attr('href'),\n\t\t\t\t\t\t\ttitle   : $('<div/>').text( element.data('fancybox-title') || element.attr('title') || '' ).html(),\n\t\t\t\t\t\t\tisDom   : true,\n\t\t\t\t\t\t\telement : element\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ($.metadata) {\n\t\t\t\t\t\t\t$.extend(true, obj, element.metadata());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj = element;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\thref  = opts.href  || obj.href || (isString(element) ? element : null);\n\t\t\t\ttitle = opts.title !== undefined ? opts.title : obj.title || '';\n\n\t\t\t\tcontent = opts.content || obj.content;\n\t\t\t\ttype    = content ? 'html' : (opts.type  || obj.type);\n\n\t\t\t\tif (!type && obj.isDom) {\n\t\t\t\t\ttype = element.data('fancybox-type');\n\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\trez  = element.prop('class').match(/fancybox\\.(\\w+)/);\n\t\t\t\t\t\ttype = rez ? rez[1] : null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isString(href)) {\n\t\t\t\t\t// Try to guess the content type\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\tif (F.isImage(href)) {\n\t\t\t\t\t\t\ttype = 'image';\n\n\t\t\t\t\t\t} else if (F.isSWF(href)) {\n\t\t\t\t\t\t\ttype = 'swf';\n\n\t\t\t\t\t\t} else if (href.charAt(0) === '#') {\n\t\t\t\t\t\t\ttype = 'inline';\n\n\t\t\t\t\t\t} else if (isString(element)) {\n\t\t\t\t\t\t\ttype    = 'html';\n\t\t\t\t\t\t\tcontent = element;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Split url into two pieces with source url and content selector, e.g,\n\t\t\t\t\t// \"/mypage.html #my_id\" will load \"/mypage.html\" and display element having id \"my_id\"\n\t\t\t\t\tif (type === 'ajax') {\n\t\t\t\t\t\threfParts = href.split(/\\s+/, 2);\n\t\t\t\t\t\thref      = hrefParts.shift();\n\t\t\t\t\t\tselector  = hrefParts.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!content) {\n\t\t\t\t\tif (type === 'inline') {\n\t\t\t\t\t\tif (href) {\n\t\t\t\t\t\t\tcontent = $( isString(href) ? href.replace(/.*(?=#[^\\s]+$)/, '') : href ); //strip for ie7\n\n\t\t\t\t\t\t} else if (obj.isDom) {\n\t\t\t\t\t\t\tcontent = element;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (type === 'html') {\n\t\t\t\t\t\tcontent = href;\n\n\t\t\t\t\t} else if (!type && !href && obj.isDom) {\n\t\t\t\t\t\ttype    = 'inline';\n\t\t\t\t\t\tcontent = element;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$.extend(obj, {\n\t\t\t\t\thref     : href,\n\t\t\t\t\ttype     : type,\n\t\t\t\t\tcontent  : content,\n\t\t\t\t\ttitle    : title,\n\t\t\t\t\tselector : selector\n\t\t\t\t});\n\n\t\t\t\tgroup[ i ] = obj;\n\t\t\t});\n\n\t\t\t// Extend the defaults\n\t\t\tF.opts = $.extend(true, {}, F.defaults, opts);\n\n\t\t\t// All options are merged recursive except keys\n\t\t\tif (opts.keys !== undefined) {\n\t\t\t\tF.opts.keys = opts.keys ? $.extend({}, F.defaults.keys, opts.keys) : false;\n\t\t\t}\n\n\t\t\tF.group = group;\n\n\t\t\treturn F._start(F.opts.index);\n\t\t},\n\n\t\t// Cancel image loading or abort ajax request\n\t\tcancel: function () {\n\t\t\tvar coming = F.coming;\n\n\t\t\tif (coming && false === F.trigger('onCancel')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.hideLoading();\n\n\t\t\tif (!coming) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (F.ajaxLoad) {\n\t\t\t\tF.ajaxLoad.abort();\n\t\t\t}\n\n\t\t\tF.ajaxLoad = null;\n\n\t\t\tif (F.imgPreload) {\n\t\t\t\tF.imgPreload.onload = F.imgPreload.onerror = null;\n\t\t\t}\n\n\t\t\tif (coming.wrap) {\n\t\t\t\tcoming.wrap.stop(true, true).trigger('onReset').remove();\n\t\t\t}\n\n\t\t\tF.coming = null;\n\n\t\t\t// If the first item has been canceled, then clear everything\n\t\t\tif (!F.current) {\n\t\t\t\tF._afterZoomOut( coming );\n\t\t\t}\n\t\t},\n\n\t\t// Start closing animation if is open; remove immediately if opening/closing\n\t\tclose: function (event) {\n\t\t\tF.cancel();\n\n\t\t\tif (false === F.trigger('beforeClose')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.unbindEvents();\n\n\t\t\tif (!F.isActive) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!F.isOpen || event === true) {\n\t\t\t\t$('.fancybox-wrap').stop(true).trigger('onReset').remove();\n\n\t\t\t\tF._afterZoomOut();\n\n\t\t\t} else {\n\t\t\t\tF.isOpen = F.isOpened = false;\n\t\t\t\tF.isClosing = true;\n\n\t\t\t\t$('.fancybox-item, .fancybox-nav').remove();\n\n\t\t\t\tF.wrap.stop(true, true).removeClass('fancybox-opened');\n\n\t\t\t\tF.transitions[ F.current.closeMethod ]();\n\t\t\t}\n\t\t},\n\n\t\t// Manage slideshow:\n\t\t//   $.fancybox.play(); - toggle slideshow\n\t\t//   $.fancybox.play( true ); - start\n\t\t//   $.fancybox.play( false ); - stop\n\t\tplay: function ( action ) {\n\t\t\tvar clear = function () {\n\t\t\t\t\tclearTimeout(F.player.timer);\n\t\t\t\t},\n\t\t\t\tset = function () {\n\t\t\t\t\tclear();\n\n\t\t\t\t\tif (F.current && F.player.isActive) {\n\t\t\t\t\t\tF.player.timer = setTimeout(F.next, F.current.playSpeed);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstop = function () {\n\t\t\t\t\tclear();\n\n\t\t\t\t\tD.unbind('.player');\n\n\t\t\t\t\tF.player.isActive = false;\n\n\t\t\t\t\tF.trigger('onPlayEnd');\n\t\t\t\t},\n\t\t\t\tstart = function () {\n\t\t\t\t\tif (F.current && (F.current.loop || F.current.index < F.group.length - 1)) {\n\t\t\t\t\t\tF.player.isActive = true;\n\n\t\t\t\t\t\tD.bind({\n\t\t\t\t\t\t\t'onCancel.player beforeClose.player' : stop,\n\t\t\t\t\t\t\t'onUpdate.player'   : set,\n\t\t\t\t\t\t\t'beforeLoad.player' : clear\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tset();\n\n\t\t\t\t\t\tF.trigger('onPlayStart');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tif (action === true || (!F.player.isActive && action !== false)) {\n\t\t\t\tstart();\n\t\t\t} else {\n\t\t\t\tstop();\n\t\t\t}\n\t\t},\n\n\t\t// Navigate to next gallery item\n\t\tnext: function ( direction ) {\n\t\t\tvar current = F.current;\n\n\t\t\tif (current) {\n\t\t\t\tif (!isString(direction)) {\n\t\t\t\t\tdirection = current.direction.next;\n\t\t\t\t}\n\n\t\t\t\tF.jumpto(current.index + 1, direction, 'next');\n\t\t\t}\n\t\t},\n\n\t\t// Navigate to previous gallery item\n\t\tprev: function ( direction ) {\n\t\t\tvar current = F.current;\n\n\t\t\tif (current) {\n\t\t\t\tif (!isString(direction)) {\n\t\t\t\t\tdirection = current.direction.prev;\n\t\t\t\t}\n\n\t\t\t\tF.jumpto(current.index - 1, direction, 'prev');\n\t\t\t}\n\t\t},\n\n\t\t// Navigate to gallery item by index\n\t\tjumpto: function ( index, direction, router ) {\n\t\t\tvar current = F.current;\n\n\t\t\tif (!current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tindex = getScalar(index);\n\n\t\t\tF.direction = direction || current.direction[ (index >= current.index ? 'next' : 'prev') ];\n\t\t\tF.router    = router || 'jumpto';\n\n\t\t\tif (current.loop) {\n\t\t\t\tif (index < 0) {\n\t\t\t\t\tindex = current.group.length + (index % current.group.length);\n\t\t\t\t}\n\n\t\t\t\tindex = index % current.group.length;\n\t\t\t}\n\n\t\t\tif (current.group[ index ] !== undefined) {\n\t\t\t\tF.cancel();\n\n\t\t\t\tF._start(index);\n\t\t\t}\n\t\t},\n\n\t\t// Center inside viewport and toggle position type to fixed or absolute if needed\n\t\treposition: function (e, onlyAbsolute) {\n\t\t\tvar current = F.current,\n\t\t\t\twrap    = current ? current.wrap : null,\n\t\t\t\tpos;\n\n\t\t\tif (wrap) {\n\t\t\t\tpos = F._getPosition(onlyAbsolute);\n\n\t\t\t\tif (e && e.type === 'scroll') {\n\t\t\t\t\tdelete pos.position;\n\n\t\t\t\t\twrap.stop(true, true).animate(pos, 200);\n\n\t\t\t\t} else {\n\t\t\t\t\twrap.css(pos);\n\n\t\t\t\t\tcurrent.pos = $.extend({}, current.dim, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdate: function (e) {\n\t\t\tvar type = (e && e.originalEvent && e.originalEvent.type),\n\t\t\t\tanyway = !type || type === 'orientationchange';\n\n\t\t\tif (anyway) {\n\t\t\t\tclearTimeout(didUpdate);\n\n\t\t\t\tdidUpdate = null;\n\t\t\t}\n\n\t\t\tif (!F.isOpen || didUpdate) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdidUpdate = setTimeout(function() {\n\t\t\t\tvar current = F.current;\n\n\t\t\t\tif (!current || F.isClosing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tF.wrap.removeClass('fancybox-tmp');\n\n\t\t\t\tif (anyway || type === 'load' || (type === 'resize' && current.autoResize)) {\n\t\t\t\t\tF._setDimension();\n\t\t\t\t}\n\n\t\t\t\tif (!(type === 'scroll' && current.canShrink)) {\n\t\t\t\t\tF.reposition(e);\n\t\t\t\t}\n\n\t\t\t\tF.trigger('onUpdate');\n\n\t\t\t\tdidUpdate = null;\n\n\t\t\t}, (anyway && !isTouch ? 0 : 300));\n\t\t},\n\n\t\t// Shrink content to fit inside viewport or restore if resized\n\t\ttoggle: function ( action ) {\n\t\t\tif (F.isOpen) {\n\t\t\t\tF.current.fitToView = $.type(action) === \"boolean\" ? action : !F.current.fitToView;\n\n\t\t\t\t// Help browser to restore document dimensions\n\t\t\t\tif (isTouch) {\n\t\t\t\t\tF.wrap.removeAttr('style').addClass('fancybox-tmp');\n\n\t\t\t\t\tF.trigger('onUpdate');\n\t\t\t\t}\n\n\t\t\t\tF.update();\n\t\t\t}\n\t\t},\n\n\t\thideLoading: function () {\n\t\t\tD.unbind('.loading');\n\n\t\t\t$('#fancybox-loading').remove();\n\t\t},\n\n\t\tshowLoading: function () {\n\t\t\tvar el, viewport;\n\n\t\t\tF.hideLoading();\n\n\t\t\tel = $(F.opts.tpl.loading).click(F.cancel).appendTo('body');\n\n\t\t\t// If user will press the escape-button, the request will be canceled\n\t\t\tD.bind('keydown.loading', function(e) {\n\t\t\t\tif ((e.which || e.keyCode) === 27) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tF.cancel();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!F.defaults.fixed) {\n\t\t\t\tviewport = F.getViewport();\n\n\t\t\t\tel.css({\n\t\t\t\t\tposition : 'absolute',\n\t\t\t\t\ttop  : (viewport.h * 0.5) + viewport.y,\n\t\t\t\t\tleft : (viewport.w * 0.5) + viewport.x\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tF.trigger('onLoading');\n\t\t},\n\n\t\tgetViewport: function () {\n\t\t\tvar locked = (F.current && F.current.locked) || false,\n\t\t\t\trez    = {\n\t\t\t\t\tx: W.scrollLeft(),\n\t\t\t\t\ty: W.scrollTop()\n\t\t\t\t};\n\n\t\t\tif (locked && locked.length) {\n\t\t\t\trez.w = locked[0].clientWidth;\n\t\t\t\trez.h = locked[0].clientHeight;\n\n\t\t\t} else {\n\t\t\t\t// See http://bugs.jquery.com/ticket/6724\n\t\t\t\trez.w = isTouch && window.innerWidth  ? window.innerWidth  : W.width();\n\t\t\t\trez.h = isTouch && window.innerHeight ? window.innerHeight : W.height();\n\t\t\t}\n\n\t\t\treturn rez;\n\t\t},\n\n\t\t// Unbind the keyboard / clicking actions\n\t\tunbindEvents: function () {\n\t\t\tif (F.wrap && isQuery(F.wrap)) {\n\t\t\t\tF.wrap.unbind('.fb');\n\t\t\t}\n\n\t\t\tD.unbind('.fb');\n\t\t\tW.unbind('.fb');\n\t\t},\n\n\t\tbindEvents: function () {\n\t\t\tvar current = F.current,\n\t\t\t\tkeys;\n\n\t\t\tif (!current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Changing document height on iOS devices triggers a 'resize' event,\n\t\t\t// that can change document height... repeating infinitely\n\t\t\tW.bind('orientationchange.fb' + (isTouch ? '' : ' resize.fb') + (current.autoCenter && !current.locked ? ' scroll.fb' : ''), F.update);\n\n\t\t\tkeys = current.keys;\n\n\t\t\tif (keys) {\n\t\t\t\tD.bind('keydown.fb', function (e) {\n\t\t\t\t\tvar code   = e.which || e.keyCode,\n\t\t\t\t\t\ttarget = e.target || e.srcElement;\n\n\t\t\t\t\t// Skip esc key if loading, because showLoading will cancel preloading\n\t\t\t\t\tif (code === 27 && F.coming) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore key combinations and key events within form elements\n\t\t\t\t\tif (!e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey && !(target && (target.type || $(target).is('[contenteditable]')))) {\n\t\t\t\t\t\t$.each(keys, function(i, val) {\n\t\t\t\t\t\t\tif (current.group.length > 1 && val[ code ] !== undefined) {\n\t\t\t\t\t\t\t\tF[ i ]( val[ code ] );\n\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ($.inArray(code, val) > -1) {\n\t\t\t\t\t\t\t\tF[ i ] ();\n\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ($.fn.mousewheel && current.mouseWheel) {\n\t\t\t\tF.wrap.bind('mousewheel.fb', function (e, delta, deltaX, deltaY) {\n\t\t\t\t\tvar target = e.target || null,\n\t\t\t\t\t\tparent = $(target),\n\t\t\t\t\t\tcanScroll = false;\n\n\t\t\t\t\twhile (parent.length) {\n\t\t\t\t\t\tif (canScroll || parent.is('.fancybox-skin') || parent.is('.fancybox-wrap')) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcanScroll = isScrollable( parent[0] );\n\t\t\t\t\t\tparent    = $(parent).parent();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (delta !== 0 && !canScroll) {\n\t\t\t\t\t\tif (F.group.length > 1 && !current.canShrink) {\n\t\t\t\t\t\t\tif (deltaY > 0 || deltaX > 0) {\n\t\t\t\t\t\t\t\tF.prev( deltaY > 0 ? 'down' : 'left' );\n\n\t\t\t\t\t\t\t} else if (deltaY < 0 || deltaX < 0) {\n\t\t\t\t\t\t\t\tF.next( deltaY < 0 ? 'up' : 'right' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\ttrigger: function (event, o) {\n\t\t\tvar ret, obj = o || F.coming || F.current;\n\n\t\t\tif (obj) {\n\t\t\t\tif ($.isFunction( obj[event] )) {\n\t\t\t\t\tret = obj[event].apply(obj, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t}\n\n\t\t\t\tif (ret === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (obj.helpers) {\n\t\t\t\t\t$.each(obj.helpers, function (helper, opts) {\n\t\t\t\t\t\tif (opts && F.helpers[helper] && $.isFunction(F.helpers[helper][event])) {\n\t\t\t\t\t\t\tF.helpers[helper][event]($.extend(true, {}, F.helpers[helper].defaults, opts), obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tD.trigger(event);\n\t\t},\n\n\t\tisImage: function (str) {\n\t\t\treturn isString(str) && str.match(/(^data:image\\/.*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\\?|#).*)?$)/i);\n\t\t},\n\n\t\tisSWF: function (str) {\n\t\t\treturn isString(str) && str.match(/\\.(swf)((\\?|#).*)?$/i);\n\t\t},\n\n\t\t_start: function (index) {\n\t\t\tvar coming = {},\n\t\t\t\tobj,\n\t\t\t\thref,\n\t\t\t\ttype,\n\t\t\t\tmargin,\n\t\t\t\tpadding;\n\n\t\t\tindex = getScalar( index );\n\t\t\tobj   = F.group[ index ] || null;\n\n\t\t\tif (!obj) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcoming = $.extend(true, {}, F.opts, obj);\n\n\t\t\t// Convert margin and padding properties to array - top, right, bottom, left\n\t\t\tmargin  = coming.margin;\n\t\t\tpadding = coming.padding;\n\n\t\t\tif ($.type(margin) === 'number') {\n\t\t\t\tcoming.margin = [margin, margin, margin, margin];\n\t\t\t}\n\n\t\t\tif ($.type(padding) === 'number') {\n\t\t\t\tcoming.padding = [padding, padding, padding, padding];\n\t\t\t}\n\n\t\t\t// 'modal' propery is just a shortcut\n\t\t\tif (coming.modal) {\n\t\t\t\t$.extend(true, coming, {\n\t\t\t\t\tcloseBtn   : false,\n\t\t\t\t\tcloseClick : false,\n\t\t\t\t\tnextClick  : false,\n\t\t\t\t\tarrows     : false,\n\t\t\t\t\tmouseWheel : false,\n\t\t\t\t\tkeys       : null,\n\t\t\t\t\thelpers: {\n\t\t\t\t\t\toverlay : {\n\t\t\t\t\t\t\tcloseClick : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// 'autoSize' property is a shortcut, too\n\t\t\tif (coming.autoSize) {\n\t\t\t\tcoming.autoWidth = coming.autoHeight = true;\n\t\t\t}\n\n\t\t\tif (coming.width === 'auto') {\n\t\t\t\tcoming.autoWidth = true;\n\t\t\t}\n\n\t\t\tif (coming.height === 'auto') {\n\t\t\t\tcoming.autoHeight = true;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Add reference to the group, so it`s possible to access from callbacks, example:\n\t\t\t * afterLoad : function() {\n\t\t\t *     this.title = 'Image ' + (this.index + 1) + ' of ' + this.group.length + (this.title ? ' - ' + this.title : '');\n\t\t\t * }\n\t\t\t */\n\n\t\t\tcoming.group  = F.group;\n\t\t\tcoming.index  = index;\n\n\t\t\t// Give a chance for callback or helpers to update coming item (type, title, etc)\n\t\t\tF.coming = coming;\n\n\t\t\tif (false === F.trigger('beforeLoad')) {\n\t\t\t\tF.coming = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttype = coming.type;\n\t\t\thref = coming.href;\n\n\t\t\tif (!type) {\n\t\t\t\tF.coming = null;\n\n\t\t\t\t//If we can not determine content type then drop silently or display next/prev item if looping through gallery\n\t\t\t\tif (F.current && F.router && F.router !== 'jumpto') {\n\t\t\t\t\tF.current.index = index;\n\n\t\t\t\t\treturn F[ F.router ]( F.direction );\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tF.isActive = true;\n\n\t\t\tif (type === 'image' || type === 'swf') {\n\t\t\t\tcoming.autoHeight = coming.autoWidth = false;\n\t\t\t\tcoming.scrolling  = 'visible';\n\t\t\t}\n\n\t\t\tif (type === 'image') {\n\t\t\t\tcoming.aspectRatio = true;\n\t\t\t}\n\n\t\t\tif (type === 'iframe' && isTouch) {\n\t\t\t\tcoming.scrolling = 'scroll';\n\t\t\t}\n\n\t\t\t// Build the neccessary markup\n\t\t\tcoming.wrap = $(coming.tpl.wrap).addClass('fancybox-' + (isTouch ? 'mobile' : 'desktop') + ' fancybox-type-' + type + ' fancybox-tmp ' + coming.wrapCSS).appendTo( coming.parent || 'body' );\n\n\t\t\t$.extend(coming, {\n\t\t\t\tskin  : $('.fancybox-skin',  coming.wrap),\n\t\t\t\touter : $('.fancybox-outer', coming.wrap),\n\t\t\t\tinner : $('.fancybox-inner', coming.wrap)\n\t\t\t});\n\n\t\t\t$.each([\"Top\", \"Right\", \"Bottom\", \"Left\"], function(i, v) {\n\t\t\t\tcoming.skin.css('padding' + v, getValue(coming.padding[ i ]));\n\t\t\t});\n\n\t\t\tF.trigger('onReady');\n\n\t\t\t// Check before try to load; 'inline' and 'html' types need content, others - href\n\t\t\tif (type === 'inline' || type === 'html') {\n\t\t\t\tif (!coming.content || !coming.content.length) {\n\t\t\t\t\treturn F._error( 'content' );\n\t\t\t\t}\n\n\t\t\t} else if (!href) {\n\t\t\t\treturn F._error( 'href' );\n\t\t\t}\n\n\t\t\tif (type === 'image') {\n\t\t\t\tF._loadImage();\n\n\t\t\t} else if (type === 'ajax') {\n\t\t\t\tF._loadAjax();\n\n\t\t\t} else if (type === 'iframe') {\n\t\t\t\tF._loadIframe();\n\n\t\t\t} else {\n\t\t\t\tF._afterLoad();\n\t\t\t}\n\t\t},\n\n\t\t_error: function ( type ) {\n\t\t\t$.extend(F.coming, {\n\t\t\t\ttype       : 'html',\n\t\t\t\tautoWidth  : true,\n\t\t\t\tautoHeight : true,\n\t\t\t\tminWidth   : 0,\n\t\t\t\tminHeight  : 0,\n\t\t\t\tscrolling  : 'no',\n\t\t\t\thasError   : type,\n\t\t\t\tcontent    : F.coming.tpl.error\n\t\t\t});\n\n\t\t\tF._afterLoad();\n\t\t},\n\n\t\t_loadImage: function () {\n\t\t\t// Reset preload image so it is later possible to check \"complete\" property\n\t\t\tvar img = F.imgPreload = new Image();\n\n\t\t\timg.onload = function () {\n\t\t\t\tthis.onload = this.onerror = null;\n\n\t\t\t\tF.coming.width  = this.width / F.opts.pixelRatio;\n\t\t\t\tF.coming.height = this.height / F.opts.pixelRatio;\n\n\t\t\t\tF._afterLoad();\n\t\t\t};\n\n\t\t\timg.onerror = function () {\n\t\t\t\tthis.onload = this.onerror = null;\n\n\t\t\t\tF._error( 'image' );\n\t\t\t};\n\n\t\t\timg.src = F.coming.href;\n\n\t\t\tif (img.complete !== true) {\n\t\t\t\tF.showLoading();\n\t\t\t}\n\t\t},\n\n\t\t_loadAjax: function () {\n\t\t\tvar coming = F.coming;\n\n\t\t\tF.showLoading();\n\n\t\t\tF.ajaxLoad = $.ajax($.extend({}, coming.ajax, {\n\t\t\t\turl: coming.href,\n\t\t\t\terror: function (jqXHR, textStatus) {\n\t\t\t\t\tif (F.coming && textStatus !== 'abort') {\n\t\t\t\t\t\tF._error( 'ajax', jqXHR );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tF.hideLoading();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsuccess: function (data, textStatus) {\n\t\t\t\t\tif (textStatus === 'success') {\n\t\t\t\t\t\tcoming.content = data;\n\n\t\t\t\t\t\tF._afterLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\n\t\t_loadIframe: function() {\n\t\t\tvar coming = F.coming,\n\t\t\t\tiframe = $(coming.tpl.iframe.replace(/\\{rnd\\}/g, new Date().getTime()))\n\t\t\t\t\t.attr('scrolling', isTouch ? 'auto' : coming.iframe.scrolling)\n\t\t\t\t\t.attr('src', coming.href);\n\n\t\t\t// This helps IE\n\t\t\t$(coming.wrap).bind('onReset', function () {\n\t\t\t\ttry {\n\t\t\t\t\t$(this).find('iframe').hide().attr('src', '//about:blank').end().empty();\n\t\t\t\t} catch (e) {}\n\t\t\t});\n\n\t\t\tif (coming.iframe.preload) {\n\t\t\t\tF.showLoading();\n\n\t\t\t\tiframe.one('load', function() {\n\t\t\t\t\t$(this).data('ready', 1);\n\n\t\t\t\t\t// iOS will lose scrolling if we resize\n\t\t\t\t\tif (!isTouch) {\n\t\t\t\t\t\t$(this).bind('load.fb', F.update);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Without this trick:\n\t\t\t\t\t//   - iframe won't scroll on iOS devices\n\t\t\t\t\t//   - IE7 sometimes displays empty iframe\n\t\t\t\t\t$(this).parents('.fancybox-wrap').width('100%').removeClass('fancybox-tmp').show();\n\n\t\t\t\t\tF._afterLoad();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcoming.content = iframe.appendTo( coming.inner );\n\n\t\t\tif (!coming.iframe.preload) {\n\t\t\t\tF._afterLoad();\n\t\t\t}\n\t\t},\n\n\t\t_preloadImages: function() {\n\t\t\tvar group   = F.group,\n\t\t\t\tcurrent = F.current,\n\t\t\t\tlen     = group.length,\n\t\t\t\tcnt     = current.preload ? Math.min(current.preload, len - 1) : 0,\n\t\t\t\titem,\n\t\t\t\ti;\n\n\t\t\tfor (i = 1; i <= cnt; i += 1) {\n\t\t\t\titem = group[ (current.index + i ) % len ];\n\n\t\t\t\tif (item.type === 'image' && item.href) {\n\t\t\t\t\tnew Image().src = item.href;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_afterLoad: function () {\n\t\t\tvar coming   = F.coming,\n\t\t\t\tprevious = F.current,\n\t\t\t\tplaceholder = 'fancybox-placeholder',\n\t\t\t\tcurrent,\n\t\t\t\tcontent,\n\t\t\t\ttype,\n\t\t\t\tscrolling,\n\t\t\t\thref,\n\t\t\t\tembed;\n\n\t\t\tF.hideLoading();\n\n\t\t\tif (!coming || F.isActive === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (false === F.trigger('afterLoad', coming, previous)) {\n\t\t\t\tcoming.wrap.stop(true).trigger('onReset').remove();\n\n\t\t\t\tF.coming = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (previous) {\n\t\t\t\tF.trigger('beforeChange', previous);\n\n\t\t\t\tprevious.wrap.stop(true).removeClass('fancybox-opened')\n\t\t\t\t\t.find('.fancybox-item, .fancybox-nav')\n\t\t\t\t\t.remove();\n\t\t\t}\n\n\t\t\tF.unbindEvents();\n\n\t\t\tcurrent   = coming;\n\t\t\tcontent   = coming.content;\n\t\t\ttype      = coming.type;\n\t\t\tscrolling = coming.scrolling;\n\n\t\t\t$.extend(F, {\n\t\t\t\twrap  : current.wrap,\n\t\t\t\tskin  : current.skin,\n\t\t\t\touter : current.outer,\n\t\t\t\tinner : current.inner,\n\t\t\t\tcurrent  : current,\n\t\t\t\tprevious : previous\n\t\t\t});\n\n\t\t\thref = current.href;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'inline':\n\t\t\t\tcase 'ajax':\n\t\t\t\tcase 'html':\n\t\t\t\t\tif (current.selector) {\n\t\t\t\t\t\tcontent = $('<div>').html(content).find(current.selector);\n\n\t\t\t\t\t} else if (isQuery(content)) {\n\t\t\t\t\t\tif (!content.data(placeholder)) {\n\t\t\t\t\t\t\tcontent.data(placeholder, $('<div class=\"' + placeholder + '\"></div>').insertAfter( content ).hide() );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontent = content.show().detach();\n\n\t\t\t\t\t\tcurrent.wrap.bind('onReset', function () {\n\t\t\t\t\t\t\tif ($(this).find(content).length) {\n\t\t\t\t\t\t\t\tcontent.hide().replaceAll( content.data(placeholder) ).data(placeholder, false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'image':\n\t\t\t\t\tcontent = current.tpl.image.replace(/\\{href\\}/g, href);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'swf':\n\t\t\t\t\tcontent = '<object id=\"fancybox-swf\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"100%\" height=\"100%\"><param name=\"movie\" value=\"' + href + '\"></param>';\n\t\t\t\t\tembed   = '';\n\n\t\t\t\t\t$.each(current.swf, function(name, val) {\n\t\t\t\t\t\tcontent += '<param name=\"' + name + '\" value=\"' + val + '\"></param>';\n\t\t\t\t\t\tembed   += ' ' + name + '=\"' + val + '\"';\n\t\t\t\t\t});\n\n\t\t\t\t\tcontent += '<embed src=\"' + href + '\" type=\"application/x-shockwave-flash\" width=\"100%\" height=\"100%\"' + embed + '></embed></object>';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!(isQuery(content) && content.parent().is(current.inner))) {\n\t\t\t\tcurrent.inner.append( content );\n\t\t\t}\n\n\t\t\t// Give a chance for helpers or callbacks to update elements\n\t\t\tF.trigger('beforeShow');\n\n\t\t\t// Set scrolling before calculating dimensions\n\t\t\tcurrent.inner.css('overflow', scrolling === 'yes' ? 'scroll' : (scrolling === 'no' ? 'hidden' : scrolling));\n\n\t\t\t// Set initial dimensions and start position\n\t\t\tF._setDimension();\n\n\t\t\tF.reposition();\n\n\t\t\tF.isOpen = false;\n\t\t\tF.coming = null;\n\n\t\t\tF.bindEvents();\n\n\t\t\tif (!F.isOpened) {\n\t\t\t\t$('.fancybox-wrap').not( current.wrap ).stop(true).trigger('onReset').remove();\n\n\t\t\t} else if (previous.prevMethod) {\n\t\t\t\tF.transitions[ previous.prevMethod ]();\n\t\t\t}\n\n\t\t\tF.transitions[ F.isOpened ? current.nextMethod : current.openMethod ]();\n\n\t\t\tF._preloadImages();\n\t\t},\n\n\t\t_setDimension: function () {\n\t\t\tvar viewport   = F.getViewport(),\n\t\t\t\tsteps      = 0,\n\t\t\t\tcanShrink  = false,\n\t\t\t\tcanExpand  = false,\n\t\t\t\twrap       = F.wrap,\n\t\t\t\tskin       = F.skin,\n\t\t\t\tinner      = F.inner,\n\t\t\t\tcurrent    = F.current,\n\t\t\t\twidth      = current.width,\n\t\t\t\theight     = current.height,\n\t\t\t\tminWidth   = current.minWidth,\n\t\t\t\tminHeight  = current.minHeight,\n\t\t\t\tmaxWidth   = current.maxWidth,\n\t\t\t\tmaxHeight  = current.maxHeight,\n\t\t\t\tscrolling  = current.scrolling,\n\t\t\t\tscrollOut  = current.scrollOutside ? current.scrollbarWidth : 0,\n\t\t\t\tmargin     = current.margin,\n\t\t\t\twMargin    = getScalar(margin[1] + margin[3]),\n\t\t\t\thMargin    = getScalar(margin[0] + margin[2]),\n\t\t\t\twPadding,\n\t\t\t\thPadding,\n\t\t\t\twSpace,\n\t\t\t\thSpace,\n\t\t\t\torigWidth,\n\t\t\t\torigHeight,\n\t\t\t\torigMaxWidth,\n\t\t\t\torigMaxHeight,\n\t\t\t\tratio,\n\t\t\t\twidth_,\n\t\t\t\theight_,\n\t\t\t\tmaxWidth_,\n\t\t\t\tmaxHeight_,\n\t\t\t\tiframe,\n\t\t\t\tbody;\n\n\t\t\t// Reset dimensions so we could re-check actual size\n\t\t\twrap.add(skin).add(inner).width('auto').height('auto').removeClass('fancybox-tmp');\n\n\t\t\twPadding = getScalar(skin.outerWidth(true)  - skin.width());\n\t\t\thPadding = getScalar(skin.outerHeight(true) - skin.height());\n\n\t\t\t// Any space between content and viewport (margin, padding, border, title)\n\t\t\twSpace = wMargin + wPadding;\n\t\t\thSpace = hMargin + hPadding;\n\n\t\t\torigWidth  = isPercentage(width)  ? (viewport.w - wSpace) * getScalar(width)  / 100 : width;\n\t\t\torigHeight = isPercentage(height) ? (viewport.h - hSpace) * getScalar(height) / 100 : height;\n\n\t\t\tif (current.type === 'iframe') {\n\t\t\t\tiframe = current.content;\n\n\t\t\t\tif (current.autoHeight && iframe && iframe.data('ready') === 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (iframe[0].contentWindow.document.location) {\n\t\t\t\t\t\t\tinner.width( origWidth ).height(9999);\n\n\t\t\t\t\t\t\tbody = iframe.contents().find('body');\n\n\t\t\t\t\t\t\tif (scrollOut) {\n\t\t\t\t\t\t\t\tbody.css('overflow-x', 'hidden');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\torigHeight = body.outerHeight(true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\n\t\t\t} else if (current.autoWidth || current.autoHeight) {\n\t\t\t\tinner.addClass( 'fancybox-tmp' );\n\n\t\t\t\t// Set width or height in case we need to calculate only one dimension\n\t\t\t\tif (!current.autoWidth) {\n\t\t\t\t\tinner.width( origWidth );\n\t\t\t\t}\n\n\t\t\t\tif (!current.autoHeight) {\n\t\t\t\t\tinner.height( origHeight );\n\t\t\t\t}\n\n\t\t\t\tif (current.autoWidth) {\n\t\t\t\t\torigWidth = inner.width();\n\t\t\t\t}\n\n\t\t\t\tif (current.autoHeight) {\n\t\t\t\t\torigHeight = inner.height();\n\t\t\t\t}\n\n\t\t\t\tinner.removeClass( 'fancybox-tmp' );\n\t\t\t}\n\n\t\t\twidth  = getScalar( origWidth );\n\t\t\theight = getScalar( origHeight );\n\n\t\t\tratio  = origWidth / origHeight;\n\n\t\t\t// Calculations for the content\n\t\t\tminWidth  = getScalar(isPercentage(minWidth) ? getScalar(minWidth, 'w') - wSpace : minWidth);\n\t\t\tmaxWidth  = getScalar(isPercentage(maxWidth) ? getScalar(maxWidth, 'w') - wSpace : maxWidth);\n\n\t\t\tminHeight = getScalar(isPercentage(minHeight) ? getScalar(minHeight, 'h') - hSpace : minHeight);\n\t\t\tmaxHeight = getScalar(isPercentage(maxHeight) ? getScalar(maxHeight, 'h') - hSpace : maxHeight);\n\n\t\t\t// These will be used to determine if wrap can fit in the viewport\n\t\t\torigMaxWidth  = maxWidth;\n\t\t\torigMaxHeight = maxHeight;\n\n\t\t\tif (current.fitToView) {\n\t\t\t\tmaxWidth  = Math.min(viewport.w - wSpace, maxWidth);\n\t\t\t\tmaxHeight = Math.min(viewport.h - hSpace, maxHeight);\n\t\t\t}\n\n\t\t\tmaxWidth_  = viewport.w - wMargin;\n\t\t\tmaxHeight_ = viewport.h - hMargin;\n\n\t\t\tif (current.aspectRatio) {\n\t\t\t\tif (width > maxWidth) {\n\t\t\t\t\twidth  = maxWidth;\n\t\t\t\t\theight = getScalar(width / ratio);\n\t\t\t\t}\n\n\t\t\t\tif (height > maxHeight) {\n\t\t\t\t\theight = maxHeight;\n\t\t\t\t\twidth  = getScalar(height * ratio);\n\t\t\t\t}\n\n\t\t\t\tif (width < minWidth) {\n\t\t\t\t\twidth  = minWidth;\n\t\t\t\t\theight = getScalar(width / ratio);\n\t\t\t\t}\n\n\t\t\t\tif (height < minHeight) {\n\t\t\t\t\theight = minHeight;\n\t\t\t\t\twidth  = getScalar(height * ratio);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\twidth = Math.max(minWidth, Math.min(width, maxWidth));\n\n\t\t\t\tif (current.autoHeight && current.type !== 'iframe') {\n\t\t\t\t\tinner.width( width );\n\n\t\t\t\t\theight = inner.height();\n\t\t\t\t}\n\n\t\t\t\theight = Math.max(minHeight, Math.min(height, maxHeight));\n\t\t\t}\n\n\t\t\t// Try to fit inside viewport (including the title)\n\t\t\tif (current.fitToView) {\n\t\t\t\tinner.width( width ).height( height );\n\n\t\t\t\twrap.width( width + wPadding );\n\n\t\t\t\t// Real wrap dimensions\n\t\t\t\twidth_  = wrap.width();\n\t\t\t\theight_ = wrap.height();\n\n\t\t\t\tif (current.aspectRatio) {\n\t\t\t\t\twhile ((width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight) {\n\t\t\t\t\t\tif (steps++ > 19) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\theight = Math.max(minHeight, Math.min(maxHeight, height - 10));\n\t\t\t\t\t\twidth  = getScalar(height * ratio);\n\n\t\t\t\t\t\tif (width < minWidth) {\n\t\t\t\t\t\t\twidth  = minWidth;\n\t\t\t\t\t\t\theight = getScalar(width / ratio);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (width > maxWidth) {\n\t\t\t\t\t\t\twidth  = maxWidth;\n\t\t\t\t\t\t\theight = getScalar(width / ratio);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinner.width( width ).height( height );\n\n\t\t\t\t\t\twrap.width( width + wPadding );\n\n\t\t\t\t\t\twidth_  = wrap.width();\n\t\t\t\t\t\theight_ = wrap.height();\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\twidth  = Math.max(minWidth,  Math.min(width,  width  - (width_  - maxWidth_)));\n\t\t\t\t\theight = Math.max(minHeight, Math.min(height, height - (height_ - maxHeight_)));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (scrollOut && scrolling === 'auto' && height < origHeight && (width + wPadding + scrollOut) < maxWidth_) {\n\t\t\t\twidth += scrollOut;\n\t\t\t}\n\n\t\t\tinner.width( width ).height( height );\n\n\t\t\twrap.width( width + wPadding );\n\n\t\t\twidth_  = wrap.width();\n\t\t\theight_ = wrap.height();\n\n\t\t\tcanShrink = (width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight;\n\t\t\tcanExpand = current.aspectRatio ? (width < origMaxWidth && height < origMaxHeight && width < origWidth && height < origHeight) : ((width < origMaxWidth || height < origMaxHeight) && (width < origWidth || height < origHeight));\n\n\t\t\t$.extend(current, {\n\t\t\t\tdim : {\n\t\t\t\t\twidth\t: getValue( width_ ),\n\t\t\t\t\theight\t: getValue( height_ )\n\t\t\t\t},\n\t\t\t\torigWidth  : origWidth,\n\t\t\t\torigHeight : origHeight,\n\t\t\t\tcanShrink  : canShrink,\n\t\t\t\tcanExpand  : canExpand,\n\t\t\t\twPadding   : wPadding,\n\t\t\t\thPadding   : hPadding,\n\t\t\t\twrapSpace  : height_ - skin.outerHeight(true),\n\t\t\t\tskinSpace  : skin.height() - height\n\t\t\t});\n\n\t\t\tif (!iframe && current.autoHeight && height > minHeight && height < maxHeight && !canExpand) {\n\t\t\t\tinner.height('auto');\n\t\t\t}\n\t\t},\n\n\t\t_getPosition: function (onlyAbsolute) {\n\t\t\tvar current  = F.current,\n\t\t\t\tviewport = F.getViewport(),\n\t\t\t\tmargin   = current.margin,\n\t\t\t\twidth    = F.wrap.width()  + margin[1] + margin[3],\n\t\t\t\theight   = F.wrap.height() + margin[0] + margin[2],\n\t\t\t\trez      = {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop  : margin[0],\n\t\t\t\t\tleft : margin[3]\n\t\t\t\t};\n\n\t\t\tif (current.autoCenter && current.fixed && !onlyAbsolute && height <= viewport.h && width <= viewport.w) {\n\t\t\t\trez.position = 'fixed';\n\n\t\t\t} else if (!current.locked) {\n\t\t\t\trez.top  += viewport.y;\n\t\t\t\trez.left += viewport.x;\n\t\t\t}\n\n\t\t\trez.top  = getValue(Math.max(rez.top,  rez.top  + ((viewport.h - height) * current.topRatio)));\n\t\t\trez.left = getValue(Math.max(rez.left, rez.left + ((viewport.w - width)  * current.leftRatio)));\n\n\t\t\treturn rez;\n\t\t},\n\n\t\t_afterZoomIn: function () {\n\t\t\tvar current = F.current;\n\n\t\t\tif (!current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tF.isOpen = F.isOpened = true;\n\n\t\t\tF.wrap.css('overflow', 'visible').addClass('fancybox-opened').hide().show(0);\n\n\t\t\tF.update();\n\n\t\t\t// Assign a click event\n\t\t\tif ( current.closeClick || (current.nextClick && F.group.length > 1) ) {\n\t\t\t\tF.inner.css('cursor', 'pointer').bind('click.fb', function(e) {\n\t\t\t\t\tif (!$(e.target).is('a') && !$(e.target).parent().is('a')) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tF[ current.closeClick ? 'close' : 'next' ]();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Create a close button\n\t\t\tif (current.closeBtn) {\n\t\t\t\t$(current.tpl.closeBtn).appendTo(F.skin).bind('click.fb', function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tF.close();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Create navigation arrows\n\t\t\tif (current.arrows && F.group.length > 1) {\n\t\t\t\tif (current.loop || current.index > 0) {\n\t\t\t\t\t$(current.tpl.prev).appendTo(F.outer).bind('click.fb', F.prev);\n\t\t\t\t}\n\n\t\t\t\tif (current.loop || current.index < F.group.length - 1) {\n\t\t\t\t\t$(current.tpl.next).appendTo(F.outer).bind('click.fb', F.next);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tF.trigger('afterShow');\n\n\t\t\t// Stop the slideshow if this is the last item\n\t\t\tif (!current.loop && current.index === current.group.length - 1) {\n\n\t\t\t\tF.play( false );\n\n\t\t\t} else if (F.opts.autoPlay && !F.player.isActive) {\n\t\t\t\tF.opts.autoPlay = false;\n\n\t\t\t\tF.play(true);\n\t\t\t}\n\t\t},\n\n\t\t_afterZoomOut: function ( obj ) {\n\t\t\tobj = obj || F.current;\n\n\t\t\t$('.fancybox-wrap').trigger('onReset').remove();\n\n\t\t\t$.extend(F, {\n\t\t\t\tgroup  : {},\n\t\t\t\topts   : {},\n\t\t\t\trouter : false,\n\t\t\t\tcurrent   : null,\n\t\t\t\tisActive  : false,\n\t\t\t\tisOpened  : false,\n\t\t\t\tisOpen    : false,\n\t\t\t\tisClosing : false,\n\t\t\t\twrap   : null,\n\t\t\t\tskin   : null,\n\t\t\t\touter  : null,\n\t\t\t\tinner  : null\n\t\t\t});\n\n\t\t\tF.trigger('afterClose', obj);\n\t\t}\n\t});\n\n\t/*\n\t *\tDefault transitions\n\t */\n\n\tF.transitions = {\n\t\tgetOrigPosition: function () {\n\t\t\tvar current  = F.current,\n\t\t\t\telement  = current.element,\n\t\t\t\torig     = current.orig,\n\t\t\t\tpos      = {},\n\t\t\t\twidth    = 50,\n\t\t\t\theight   = 50,\n\t\t\t\thPadding = current.hPadding,\n\t\t\t\twPadding = current.wPadding,\n\t\t\t\tviewport = F.getViewport();\n\n\t\t\tif (!orig && current.isDom && element.is(':visible')) {\n\t\t\t\torig = element.find('img:first');\n\n\t\t\t\tif (!orig.length) {\n\t\t\t\t\torig = element;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isQuery(orig)) {\n\t\t\t\tpos = orig.offset();\n\n\t\t\t\tif (orig.is('img')) {\n\t\t\t\t\twidth  = orig.outerWidth();\n\t\t\t\t\theight = orig.outerHeight();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tpos.top  = viewport.y + (viewport.h - height) * current.topRatio;\n\t\t\t\tpos.left = viewport.x + (viewport.w - width)  * current.leftRatio;\n\t\t\t}\n\n\t\t\tif (F.wrap.css('position') === 'fixed' || current.locked) {\n\t\t\t\tpos.top  -= viewport.y;\n\t\t\t\tpos.left -= viewport.x;\n\t\t\t}\n\n\t\t\tpos = {\n\t\t\t\ttop     : getValue(pos.top  - hPadding * current.topRatio),\n\t\t\t\tleft    : getValue(pos.left - wPadding * current.leftRatio),\n\t\t\t\twidth   : getValue(width  + wPadding),\n\t\t\t\theight  : getValue(height + hPadding)\n\t\t\t};\n\n\t\t\treturn pos;\n\t\t},\n\n\t\tstep: function (now, fx) {\n\t\t\tvar ratio,\n\t\t\t\tpadding,\n\t\t\t\tvalue,\n\t\t\t\tprop       = fx.prop,\n\t\t\t\tcurrent    = F.current,\n\t\t\t\twrapSpace  = current.wrapSpace,\n\t\t\t\tskinSpace  = current.skinSpace;\n\n\t\t\tif (prop === 'width' || prop === 'height') {\n\t\t\t\tratio = fx.end === fx.start ? 1 : (now - fx.start) / (fx.end - fx.start);\n\n\t\t\t\tif (F.isClosing) {\n\t\t\t\t\tratio = 1 - ratio;\n\t\t\t\t}\n\n\t\t\t\tpadding = prop === 'width' ? current.wPadding : current.hPadding;\n\t\t\t\tvalue   = now - padding;\n\n\t\t\t\tF.skin[ prop ](  getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) ) );\n\t\t\t\tF.inner[ prop ]( getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) - (skinSpace * ratio) ) );\n\t\t\t}\n\t\t},\n\n\t\tzoomIn: function () {\n\t\t\tvar current  = F.current,\n\t\t\t\tstartPos = current.pos,\n\t\t\t\teffect   = current.openEffect,\n\t\t\t\telastic  = effect === 'elastic',\n\t\t\t\tendPos   = $.extend({opacity : 1}, startPos);\n\n\t\t\t// Remove \"position\" property that breaks older IE\n\t\t\tdelete endPos.position;\n\n\t\t\tif (elastic) {\n\t\t\t\tstartPos = this.getOrigPosition();\n\n\t\t\t\tif (current.openOpacity) {\n\t\t\t\t\tstartPos.opacity = 0.1;\n\t\t\t\t}\n\n\t\t\t} else if (effect === 'fade') {\n\t\t\t\tstartPos.opacity = 0.1;\n\t\t\t}\n\n\t\t\tF.wrap.css(startPos).animate(endPos, {\n\t\t\t\tduration : effect === 'none' ? 0 : current.openSpeed,\n\t\t\t\teasing   : current.openEasing,\n\t\t\t\tstep     : elastic ? this.step : null,\n\t\t\t\tcomplete : F._afterZoomIn\n\t\t\t});\n\t\t},\n\n\t\tzoomOut: function () {\n\t\t\tvar current  = F.current,\n\t\t\t\teffect   = current.closeEffect,\n\t\t\t\telastic  = effect === 'elastic',\n\t\t\t\tendPos   = {opacity : 0.1};\n\n\t\t\tif (elastic) {\n\t\t\t\tendPos = this.getOrigPosition();\n\n\t\t\t\tif (current.closeOpacity) {\n\t\t\t\t\tendPos.opacity = 0.1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tF.wrap.animate(endPos, {\n\t\t\t\tduration : effect === 'none' ? 0 : current.closeSpeed,\n\t\t\t\teasing   : current.closeEasing,\n\t\t\t\tstep     : elastic ? this.step : null,\n\t\t\t\tcomplete : F._afterZoomOut\n\t\t\t});\n\t\t},\n\n\t\tchangeIn: function () {\n\t\t\tvar current   = F.current,\n\t\t\t\teffect    = current.nextEffect,\n\t\t\t\tstartPos  = current.pos,\n\t\t\t\tendPos    = { opacity : 1 },\n\t\t\t\tdirection = F.direction,\n\t\t\t\tdistance  = 200,\n\t\t\t\tfield;\n\n\t\t\tstartPos.opacity = 0.1;\n\n\t\t\tif (effect === 'elastic') {\n\t\t\t\tfield = direction === 'down' || direction === 'up' ? 'top' : 'left';\n\n\t\t\t\tif (direction === 'down' || direction === 'right') {\n\t\t\t\t\tstartPos[ field ] = getValue(getScalar(startPos[ field ]) - distance);\n\t\t\t\t\tendPos[ field ]   = '+=' + distance + 'px';\n\n\t\t\t\t} else {\n\t\t\t\t\tstartPos[ field ] = getValue(getScalar(startPos[ field ]) + distance);\n\t\t\t\t\tendPos[ field ]   = '-=' + distance + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Workaround for http://bugs.jquery.com/ticket/12273\n\t\t\tif (effect === 'none') {\n\t\t\t\tF._afterZoomIn();\n\n\t\t\t} else {\n\t\t\t\tF.wrap.css(startPos).animate(endPos, {\n\t\t\t\t\tduration : current.nextSpeed,\n\t\t\t\t\teasing   : current.nextEasing,\n\t\t\t\t\tcomplete : F._afterZoomIn\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tchangeOut: function () {\n\t\t\tvar previous  = F.previous,\n\t\t\t\teffect    = previous.prevEffect,\n\t\t\t\tendPos    = { opacity : 0.1 },\n\t\t\t\tdirection = F.direction,\n\t\t\t\tdistance  = 200;\n\n\t\t\tif (effect === 'elastic') {\n\t\t\t\tendPos[ direction === 'down' || direction === 'up' ? 'top' : 'left' ] = ( direction === 'up' || direction === 'left' ? '-' : '+' ) + '=' + distance + 'px';\n\t\t\t}\n\n\t\t\tprevious.wrap.animate(endPos, {\n\t\t\t\tduration : effect === 'none' ? 0 : previous.prevSpeed,\n\t\t\t\teasing   : previous.prevEasing,\n\t\t\t\tcomplete : function () {\n\t\t\t\t\t$(this).trigger('onReset').remove();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/*\n\t *\tOverlay helper\n\t */\n\n\tF.helpers.overlay = {\n\t\tdefaults : {\n\t\t\tcloseClick : true,      // if true, fancyBox will be closed when user clicks on the overlay\n\t\t\tspeedOut   : 200,       // duration of fadeOut animation\n\t\t\tshowEarly  : true,      // indicates if should be opened immediately or wait until the content is ready\n\t\t\tcss        : {},        // custom CSS properties\n\t\t\tlocked     : !isTouch,  // if true, the content will be locked into overlay\n\t\t\tfixed      : true       // if false, the overlay CSS position property will not be set to \"fixed\"\n\t\t},\n\n\t\toverlay : null,      // current handle\n\t\tfixed   : false,     // indicates if the overlay has position \"fixed\"\n\t\tel      : $('html'), // element that contains \"the lock\"\n\n\t\t// Public methods\n\t\tcreate : function(opts) {\n\t\t\tvar parent;\n\n\t\t\topts = $.extend({}, this.defaults, opts);\n\n\t\t\tif (this.overlay) {\n\t\t\t\tthis.close();\n\t\t\t}\n\n\t\t\tparent = F.coming ? F.coming.parent : opts.parent;\n\n\t\t\tthis.overlay = $('<div class=\"fancybox-overlay\"></div>').appendTo( parent && parent.length ? parent : 'body' );\n\t\t\tthis.fixed   = false;\n\n\t\t\tif (opts.fixed && F.defaults.fixed) {\n\t\t\t\tthis.overlay.addClass('fancybox-overlay-fixed');\n\n\t\t\t\tthis.fixed = true;\n\t\t\t}\n\t\t},\n\n\t\topen : function(opts) {\n\t\t\tvar that = this;\n\n\t\t\topts = $.extend({}, this.defaults, opts);\n\n\t\t\tif (this.overlay) {\n\t\t\t\tthis.overlay.unbind('.overlay').width('auto').height('auto');\n\n\t\t\t} else {\n\t\t\t\tthis.create(opts);\n\t\t\t}\n\n\t\t\tif (!this.fixed) {\n\t\t\t\tW.bind('resize.overlay', $.proxy( this.update, this) );\n\n\t\t\t\tthis.update();\n\t\t\t}\n\n\t\t\tif (opts.closeClick) {\n\t\t\t\tthis.overlay.bind('click.overlay', function(e) {\n\t\t\t\t\tif ($(e.target).hasClass('fancybox-overlay')) {\n\t\t\t\t\t\tif (F.isActive) {\n\t\t\t\t\t\t\tF.close();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.close();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.overlay.css( opts.css ).show();\n\t\t},\n\n\t\tclose : function() {\n\t\t\tW.unbind('resize.overlay');\n\n\t\t\tif (this.el.hasClass('fancybox-lock')) {\n\t\t\t\t$('.fancybox-margin').removeClass('fancybox-margin');\n\n\t\t\t\tthis.el.removeClass('fancybox-lock');\n\n\t\t\t\tW.scrollTop( this.scrollV ).scrollLeft( this.scrollH );\n\t\t\t}\n\n\t\t\t$('.fancybox-overlay').remove().hide();\n\n\t\t\t$.extend(this, {\n\t\t\t\toverlay : null,\n\t\t\t\tfixed   : false\n\t\t\t});\n\t\t},\n\n\t\t// Private, callbacks\n\n\t\tupdate : function () {\n\t\t\tvar width = '100%', offsetWidth;\n\n\t\t\t// Reset width/height so it will not mess\n\t\t\tthis.overlay.width(width).height('100%');\n\n\t\t\t// jQuery does not return reliable result for IE\n\t\t\tif (IE) {\n\t\t\t\toffsetWidth = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);\n\n\t\t\t\tif (D.width() > offsetWidth) {\n\t\t\t\t\twidth = D.width();\n\t\t\t\t}\n\n\t\t\t} else if (D.width() > W.width()) {\n\t\t\t\twidth = D.width();\n\t\t\t}\n\n\t\t\tthis.overlay.width(width).height(D.height());\n\t\t},\n\n\t\t// This is where we can manipulate DOM, because later it would cause iframes to reload\n\t\tonReady : function (opts, obj) {\n\t\t\tvar overlay = this.overlay;\n\n\t\t\t$('.fancybox-overlay').stop(true, true);\n\n\t\t\tif (!overlay) {\n\t\t\t\tthis.create(opts);\n\t\t\t}\n\n\t\t\tif (opts.locked && this.fixed && obj.fixed) {\n\t\t\t\tobj.locked = this.overlay.append( obj.wrap );\n\t\t\t\tobj.fixed  = false;\n\t\t\t}\n\n\t\t\tif (opts.showEarly === true) {\n\t\t\t\tthis.beforeShow.apply(this, arguments);\n\t\t\t}\n\t\t},\n\n\t\tbeforeShow : function(opts, obj) {\n\t\t\tif (obj.locked && !this.el.hasClass('fancybox-lock')) {\n\t\t\t\tif (this.fixPosition !== false) {\n\t\t\t\t\t$('*:not(object)').filter(function(){\n\t\t\t\t\t\treturn ($(this).css('position') === 'fixed' && !$(this).hasClass(\"fancybox-overlay\") && !$(this).hasClass(\"fancybox-wrap\") );\n\t\t\t\t\t}).addClass('fancybox-margin');\n\t\t\t\t}\n\n\t\t\t\tthis.el.addClass('fancybox-margin');\n\n\t\t\t\tthis.scrollV = W.scrollTop();\n\t\t\t\tthis.scrollH = W.scrollLeft();\n\n\t\t\t\tthis.el.addClass('fancybox-lock');\n\n\t\t\t\tW.scrollTop( this.scrollV ).scrollLeft( this.scrollH );\n\t\t\t}\n\n\t\t\tthis.open(opts);\n\t\t},\n\n\t\tonUpdate : function() {\n\t\t\tif (!this.fixed) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\n\t\tafterClose: function (opts) {\n\t\t\t// Remove overlay if exists and fancyBox is not opening\n\t\t\t// (e.g., it is not being open using afterClose callback)\n\t\t\tif (this.overlay && !F.coming) {\n\t\t\t\tthis.overlay.fadeOut(opts.speedOut, $.proxy( this.close, this ));\n\t\t\t}\n\t\t}\n\t};\n\n\t/*\n\t *\tTitle helper\n\t */\n\n\tF.helpers.title = {\n\t\tdefaults : {\n\t\t\ttype     : 'float', // 'float', 'inside', 'outside' or 'over',\n\t\t\tposition : 'bottom' // 'top' or 'bottom'\n\t\t},\n\n\t\tbeforeShow: function (opts) {\n\t\t\tvar current = F.current,\n\t\t\t\ttext    = current.title,\n\t\t\t\ttype    = opts.type,\n\t\t\t\ttitle,\n\t\t\t\ttarget;\n\n\t\t\tif ($.isFunction(text)) {\n\t\t\t\ttext = text.call(current.element, current);\n\t\t\t}\n\n\t\t\tif (!isString(text) || $.trim(text) === '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttitle = $('<div class=\"fancybox-title fancybox-title-' + type + '-wrap\">' + text + '</div>');\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'inside':\n\t\t\t\t\ttarget = F.skin;\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'outside':\n\t\t\t\t\ttarget = F.wrap;\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'over':\n\t\t\t\t\ttarget = F.inner;\n\t\t\t\tbreak;\n\n\t\t\t\tdefault: // 'float'\n\t\t\t\t\ttarget = F.skin;\n\n\t\t\t\t\ttitle.appendTo('body');\n\n\t\t\t\t\tif (IE) {\n\t\t\t\t\t\ttitle.width( title.width() );\n\t\t\t\t\t}\n\n\t\t\t\t\ttitle.wrapInner('<span class=\"child\"></span>');\n\n\t\t\t\t\t//Increase bottom margin so this title will also fit into viewport\n\t\t\t\t\tF.current.margin[2] += Math.abs( getScalar(title.css('margin-bottom')) );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttitle[ (opts.position === 'top' ? 'prependTo'  : 'appendTo') ](target);\n\t\t}\n\t};\n\n\t// jQuery plugin initialization\n\t$.fn.fancybox = function (options) {\n\t\tvar index,\n\t\t\tthat     = $(this),\n\t\t\tselector = this.selector || '',\n\t\t\trun      = function(e) {\n\t\t\t\tvar what = $(this).blur(), idx = index, relType, relVal;\n\n\t\t\t\tif (!(e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) && !what.is('.fancybox-wrap')) {\n\t\t\t\t\trelType = options.groupAttr || 'data-fancybox-group';\n\t\t\t\t\trelVal  = what.attr(relType);\n\n\t\t\t\t\tif (!relVal) {\n\t\t\t\t\t\trelType = 'rel';\n\t\t\t\t\t\trelVal  = what.get(0)[ relType ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (relVal && relVal !== '' && relVal !== 'nofollow') {\n\t\t\t\t\t\twhat = selector.length ? $(selector) : that;\n\t\t\t\t\t\twhat = what.filter('[' + relType + '=\"' + relVal + '\"]');\n\t\t\t\t\t\tidx  = what.index(this);\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.index = idx;\n\n\t\t\t\t\t// Stop an event from bubbling if everything is fine\n\t\t\t\t\tif (F.open(what, options) !== false) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\toptions = options || {};\n\t\tindex   = options.index || 0;\n\n\t\tif (!selector || options.live === false) {\n\t\t\tthat.unbind('click.fb-start').bind('click.fb-start', run);\n\n\t\t} else {\n\t\t\tD.undelegate(selector, 'click.fb-start').delegate(selector + \":not('.fancybox-item, .fancybox-nav')\", 'click.fb-start', run);\n\t\t}\n\n\t\tthis.filter('[data-fancybox-start=1]').trigger('click');\n\n\t\treturn this;\n\t};\n\n\t// Tests that need a body at doc ready\n\tD.ready(function() {\n\t\tvar w1, w2;\n\n\t\tif ( $.scrollbarWidth === undefined ) {\n\t\t\t// http://benalman.com/projects/jquery-misc-plugins/#scrollbarwidth\n\t\t\t$.scrollbarWidth = function() {\n\t\t\t\tvar parent = $('<div style=\"width:50px;height:50px;overflow:auto\"><div/></div>').appendTo('body'),\n\t\t\t\t\tchild  = parent.children(),\n\t\t\t\t\twidth  = child.innerWidth() - child.height( 99 ).innerWidth();\n\n\t\t\t\tparent.remove();\n\n\t\t\t\treturn width;\n\t\t\t};\n\t\t}\n\n\t\tif ( $.support.fixedPosition === undefined ) {\n\t\t\t$.support.fixedPosition = (function() {\n\t\t\t\tvar elem  = $('<div style=\"position:fixed;top:20px;\"></div>').appendTo('body'),\n\t\t\t\t\tfixed = ( elem[0].offsetTop === 20 || elem[0].offsetTop === 15 );\n\n\t\t\t\telem.remove();\n\n\t\t\t\treturn fixed;\n\t\t\t}());\n\t\t}\n\n\t\t$.extend(F.defaults, {\n\t\t\tscrollbarWidth : $.scrollbarWidth(),\n\t\t\tfixed  : $.support.fixedPosition,\n\t\t\tparent : $('body')\n\t\t});\n\n\t\t//Get real width of page scroll-bar\n\t\tw1 = $(window).width();\n\n\t\tH.addClass('fancybox-lock-test');\n\n\t\tw2 = $(window).width();\n\n\t\tH.removeClass('fancybox-lock-test');\n\n\t\t$(\"<style type='text/css'>.fancybox-margin{margin-right:\" + (w2 - w1) + \"px;}</style>\").appendTo(\"head\");\n\t});\n\n}(window, document, jQuery));\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/fancybox/source/jquery.fancybox.pack.js":"/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */\n(function(s,H,f,w){var K=f(\"html\"),q=f(s),p=f(H),b=f.fancybox=function(){b.open.apply(this,arguments)},J=navigator.userAgent.match(/msie/i),C=null,t=H.createTouch!==w,u=function(a){return a&&a.hasOwnProperty&&a instanceof f},r=function(a){return a&&\"string\"===f.type(a)},F=function(a){return r(a)&&0<a.indexOf(\"%\")},m=function(a,d){var e=parseInt(a,10)||0;d&&F(a)&&(e*=b.getViewport()[d]/100);return Math.ceil(e)},x=function(a,b){return m(a,b)+\"px\"};f.extend(b,{version:\"2.1.5\",defaults:{padding:15,margin:20,\nwidth:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!t,fitToView:!0,aspectRatio:!1,topRatio:0.5,leftRatio:0.5,scrolling:\"auto\",wrapCSS:\"\",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3E3,preload:3,modal:!1,loop:!0,ajax:{dataType:\"html\",headers:{\"X-fancyBox\":!0}},iframe:{scrolling:\"auto\",preload:!0},swf:{wmode:\"transparent\",allowfullscreen:\"true\",allowscriptaccess:\"always\"},\nkeys:{next:{13:\"left\",34:\"up\",39:\"left\",40:\"up\"},prev:{8:\"right\",33:\"down\",37:\"right\",38:\"down\"},close:[27],play:[32],toggle:[70]},direction:{next:\"left\",prev:\"right\"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class=\"fancybox-wrap\" tabIndex=\"-1\"><div class=\"fancybox-skin\"><div class=\"fancybox-outer\"><div class=\"fancybox-inner\"></div></div></div></div>',image:'<img class=\"fancybox-image\" src=\"{href}\" alt=\"\" />',iframe:'<iframe id=\"fancybox-frame{rnd}\" name=\"fancybox-frame{rnd}\" class=\"fancybox-iframe\" frameborder=\"0\" vspace=\"0\" hspace=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+\n(J?' allowtransparency=\"true\"':\"\")+\"></iframe>\",error:'<p class=\"fancybox-error\">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title=\"Close\" class=\"fancybox-item fancybox-close\" href=\"javascript:;\"></a>',next:'<a title=\"Next\" class=\"fancybox-nav fancybox-next\" href=\"javascript:;\"><span></span></a>',prev:'<a title=\"Previous\" class=\"fancybox-nav fancybox-prev\" href=\"javascript:;\"><span></span></a>'},openEffect:\"fade\",openSpeed:250,openEasing:\"swing\",openOpacity:!0,\nopenMethod:\"zoomIn\",closeEffect:\"fade\",closeSpeed:250,closeEasing:\"swing\",closeOpacity:!0,closeMethod:\"zoomOut\",nextEffect:\"elastic\",nextSpeed:250,nextEasing:\"swing\",nextMethod:\"changeIn\",prevEffect:\"elastic\",prevSpeed:250,prevEasing:\"swing\",prevMethod:\"changeOut\",helpers:{overlay:!0,title:!0},onCancel:f.noop,beforeLoad:f.noop,afterLoad:f.noop,beforeShow:f.noop,afterShow:f.noop,beforeChange:f.noop,beforeClose:f.noop,afterClose:f.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,\nisOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(a,d){if(a&&(f.isPlainObject(d)||(d={}),!1!==b.close(!0)))return f.isArray(a)||(a=u(a)?f(a).get():[a]),f.each(a,function(e,c){var l={},g,h,k,n,m;\"object\"===f.type(c)&&(c.nodeType&&(c=f(c)),u(c)?(l={href:c.data(\"fancybox-href\")||c.attr(\"href\"),title:f(\"<div/>\").text(c.data(\"fancybox-title\")||c.attr(\"title\")).html(),isDom:!0,element:c},\nf.metadata&&f.extend(!0,l,c.metadata())):l=c);g=d.href||l.href||(r(c)?c:null);h=d.title!==w?d.title:l.title||\"\";n=(k=d.content||l.content)?\"html\":d.type||l.type;!n&&l.isDom&&(n=c.data(\"fancybox-type\"),n||(n=(n=c.prop(\"class\").match(/fancybox\\.(\\w+)/))?n[1]:null));r(g)&&(n||(b.isImage(g)?n=\"image\":b.isSWF(g)?n=\"swf\":\"#\"===g.charAt(0)?n=\"inline\":r(c)&&(n=\"html\",k=c)),\"ajax\"===n&&(m=g.split(/\\s+/,2),g=m.shift(),m=m.shift()));k||(\"inline\"===n?g?k=f(r(g)?g.replace(/.*(?=#[^\\s]+$)/,\"\"):g):l.isDom&&(k=c):\n\"html\"===n?k=g:n||g||!l.isDom||(n=\"inline\",k=c));f.extend(l,{href:g,type:n,content:k,title:h,selector:m});a[e]=l}),b.opts=f.extend(!0,{},b.defaults,d),d.keys!==w&&(b.opts.keys=d.keys?f.extend({},b.defaults.keys,d.keys):!1),b.group=a,b._start(b.opts.index)},cancel:function(){var a=b.coming;a&&!1===b.trigger(\"onCancel\")||(b.hideLoading(),a&&(b.ajaxLoad&&b.ajaxLoad.abort(),b.ajaxLoad=null,b.imgPreload&&(b.imgPreload.onload=b.imgPreload.onerror=null),a.wrap&&a.wrap.stop(!0,!0).trigger(\"onReset\").remove(),\nb.coming=null,b.current||b._afterZoomOut(a)))},close:function(a){b.cancel();!1!==b.trigger(\"beforeClose\")&&(b.unbindEvents(),b.isActive&&(b.isOpen&&!0!==a?(b.isOpen=b.isOpened=!1,b.isClosing=!0,f(\".fancybox-item, .fancybox-nav\").remove(),b.wrap.stop(!0,!0).removeClass(\"fancybox-opened\"),b.transitions[b.current.closeMethod]()):(f(\".fancybox-wrap\").stop(!0).trigger(\"onReset\").remove(),b._afterZoomOut())))},play:function(a){var d=function(){clearTimeout(b.player.timer)},e=function(){d();b.current&&b.player.isActive&&\n(b.player.timer=setTimeout(b.next,b.current.playSpeed))},c=function(){d();p.unbind(\".player\");b.player.isActive=!1;b.trigger(\"onPlayEnd\")};!0===a||!b.player.isActive&&!1!==a?b.current&&(b.current.loop||b.current.index<b.group.length-1)&&(b.player.isActive=!0,p.bind({\"onCancel.player beforeClose.player\":c,\"onUpdate.player\":e,\"beforeLoad.player\":d}),e(),b.trigger(\"onPlayStart\")):c()},next:function(a){var d=b.current;d&&(r(a)||(a=d.direction.next),b.jumpto(d.index+1,a,\"next\"))},prev:function(a){var d=\nb.current;d&&(r(a)||(a=d.direction.prev),b.jumpto(d.index-1,a,\"prev\"))},jumpto:function(a,d,e){var c=b.current;c&&(a=m(a),b.direction=d||c.direction[a>=c.index?\"next\":\"prev\"],b.router=e||\"jumpto\",c.loop&&(0>a&&(a=c.group.length+a%c.group.length),a%=c.group.length),c.group[a]!==w&&(b.cancel(),b._start(a)))},reposition:function(a,d){var e=b.current,c=e?e.wrap:null,l;c&&(l=b._getPosition(d),a&&\"scroll\"===a.type?(delete l.position,c.stop(!0,!0).animate(l,200)):(c.css(l),e.pos=f.extend({},e.dim,l)))},\nupdate:function(a){var d=a&&a.originalEvent&&a.originalEvent.type,e=!d||\"orientationchange\"===d;e&&(clearTimeout(C),C=null);b.isOpen&&!C&&(C=setTimeout(function(){var c=b.current;c&&!b.isClosing&&(b.wrap.removeClass(\"fancybox-tmp\"),(e||\"load\"===d||\"resize\"===d&&c.autoResize)&&b._setDimension(),\"scroll\"===d&&c.canShrink||b.reposition(a),b.trigger(\"onUpdate\"),C=null)},e&&!t?0:300))},toggle:function(a){b.isOpen&&(b.current.fitToView=\"boolean\"===f.type(a)?a:!b.current.fitToView,t&&(b.wrap.removeAttr(\"style\").addClass(\"fancybox-tmp\"),\nb.trigger(\"onUpdate\")),b.update())},hideLoading:function(){p.unbind(\".loading\");f(\"#fancybox-loading\").remove()},showLoading:function(){var a,d;b.hideLoading();a=f('<div id=\"fancybox-loading\"><div></div></div>').click(b.cancel).appendTo(\"body\");p.bind(\"keydown.loading\",function(a){27===(a.which||a.keyCode)&&(a.preventDefault(),b.cancel())});b.defaults.fixed||(d=b.getViewport(),a.css({position:\"absolute\",top:0.5*d.h+d.y,left:0.5*d.w+d.x}));b.trigger(\"onLoading\")},getViewport:function(){var a=b.current&&\nb.current.locked||!1,d={x:q.scrollLeft(),y:q.scrollTop()};a&&a.length?(d.w=a[0].clientWidth,d.h=a[0].clientHeight):(d.w=t&&s.innerWidth?s.innerWidth:q.width(),d.h=t&&s.innerHeight?s.innerHeight:q.height());return d},unbindEvents:function(){b.wrap&&u(b.wrap)&&b.wrap.unbind(\".fb\");p.unbind(\".fb\");q.unbind(\".fb\")},bindEvents:function(){var a=b.current,d;a&&(q.bind(\"orientationchange.fb\"+(t?\"\":\" resize.fb\")+(a.autoCenter&&!a.locked?\" scroll.fb\":\"\"),b.update),(d=a.keys)&&p.bind(\"keydown.fb\",function(e){var c=\ne.which||e.keyCode,l=e.target||e.srcElement;if(27===c&&b.coming)return!1;e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||l&&(l.type||f(l).is(\"[contenteditable]\"))||f.each(d,function(d,l){if(1<a.group.length&&l[c]!==w)return b[d](l[c]),e.preventDefault(),!1;if(-1<f.inArray(c,l))return b[d](),e.preventDefault(),!1})}),f.fn.mousewheel&&a.mouseWheel&&b.wrap.bind(\"mousewheel.fb\",function(d,c,l,g){for(var h=f(d.target||null),k=!1;h.length&&!(k||h.is(\".fancybox-skin\")||h.is(\".fancybox-wrap\"));)k=h[0]&&!(h[0].style.overflow&&\n\"hidden\"===h[0].style.overflow)&&(h[0].clientWidth&&h[0].scrollWidth>h[0].clientWidth||h[0].clientHeight&&h[0].scrollHeight>h[0].clientHeight),h=f(h).parent();0!==c&&!k&&1<b.group.length&&!a.canShrink&&(0<g||0<l?b.prev(0<g?\"down\":\"left\"):(0>g||0>l)&&b.next(0>g?\"up\":\"right\"),d.preventDefault())}))},trigger:function(a,d){var e,c=d||b.coming||b.current;if(c){f.isFunction(c[a])&&(e=c[a].apply(c,Array.prototype.slice.call(arguments,1)));if(!1===e)return!1;c.helpers&&f.each(c.helpers,function(d,e){if(e&&\nb.helpers[d]&&f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0,{},b.helpers[d].defaults,e),c)})}p.trigger(a)},isImage:function(a){return r(a)&&a.match(/(^data:image\\/.*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\\?|#).*)?$)/i)},isSWF:function(a){return r(a)&&a.match(/\\.(swf)((\\?|#).*)?$/i)},_start:function(a){var d={},e,c;a=m(a);e=b.group[a]||null;if(!e)return!1;d=f.extend(!0,{},b.opts,e);e=d.margin;c=d.padding;\"number\"===f.type(e)&&(d.margin=[e,e,e,e]);\"number\"===f.type(c)&&(d.padding=[c,c,\nc,c]);d.modal&&f.extend(!0,d,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}});d.autoSize&&(d.autoWidth=d.autoHeight=!0);\"auto\"===d.width&&(d.autoWidth=!0);\"auto\"===d.height&&(d.autoHeight=!0);d.group=b.group;d.index=a;b.coming=d;if(!1===b.trigger(\"beforeLoad\"))b.coming=null;else{c=d.type;e=d.href;if(!c)return b.coming=null,b.current&&b.router&&\"jumpto\"!==b.router?(b.current.index=a,b[b.router](b.direction)):!1;b.isActive=!0;if(\"image\"===\nc||\"swf\"===c)d.autoHeight=d.autoWidth=!1,d.scrolling=\"visible\";\"image\"===c&&(d.aspectRatio=!0);\"iframe\"===c&&t&&(d.scrolling=\"scroll\");d.wrap=f(d.tpl.wrap).addClass(\"fancybox-\"+(t?\"mobile\":\"desktop\")+\" fancybox-type-\"+c+\" fancybox-tmp \"+d.wrapCSS).appendTo(d.parent||\"body\");f.extend(d,{skin:f(\".fancybox-skin\",d.wrap),outer:f(\".fancybox-outer\",d.wrap),inner:f(\".fancybox-inner\",d.wrap)});f.each([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(a,b){d.skin.css(\"padding\"+b,x(d.padding[a]))});b.trigger(\"onReady\");\nif(\"inline\"===c||\"html\"===c){if(!d.content||!d.content.length)return b._error(\"content\")}else if(!e)return b._error(\"href\");\"image\"===c?b._loadImage():\"ajax\"===c?b._loadAjax():\"iframe\"===c?b._loadIframe():b._afterLoad()}},_error:function(a){f.extend(b.coming,{type:\"html\",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:\"no\",hasError:a,content:b.coming.tpl.error});b._afterLoad()},_loadImage:function(){var a=b.imgPreload=new Image;a.onload=function(){this.onload=this.onerror=null;b.coming.width=\nthis.width/b.opts.pixelRatio;b.coming.height=this.height/b.opts.pixelRatio;b._afterLoad()};a.onerror=function(){this.onload=this.onerror=null;b._error(\"image\")};a.src=b.coming.href;!0!==a.complete&&b.showLoading()},_loadAjax:function(){var a=b.coming;b.showLoading();b.ajaxLoad=f.ajax(f.extend({},a.ajax,{url:a.href,error:function(a,e){b.coming&&\"abort\"!==e?b._error(\"ajax\",a):b.hideLoading()},success:function(d,e){\"success\"===e&&(a.content=d,b._afterLoad())}}))},_loadIframe:function(){var a=b.coming,\nd=f(a.tpl.iframe.replace(/\\{rnd\\}/g,(new Date).getTime())).attr(\"scrolling\",t?\"auto\":a.iframe.scrolling).attr(\"src\",a.href);f(a.wrap).bind(\"onReset\",function(){try{f(this).find(\"iframe\").hide().attr(\"src\",\"//about:blank\").end().empty()}catch(a){}});a.iframe.preload&&(b.showLoading(),d.one(\"load\",function(){f(this).data(\"ready\",1);t||f(this).bind(\"load.fb\",b.update);f(this).parents(\".fancybox-wrap\").width(\"100%\").removeClass(\"fancybox-tmp\").show();b._afterLoad()}));a.content=d.appendTo(a.inner);a.iframe.preload||\nb._afterLoad()},_preloadImages:function(){var a=b.group,d=b.current,e=a.length,c=d.preload?Math.min(d.preload,e-1):0,f,g;for(g=1;g<=c;g+=1)f=a[(d.index+g)%e],\"image\"===f.type&&f.href&&((new Image).src=f.href)},_afterLoad:function(){var a=b.coming,d=b.current,e,c,l,g,h;b.hideLoading();if(a&&!1!==b.isActive)if(!1===b.trigger(\"afterLoad\",a,d))a.wrap.stop(!0).trigger(\"onReset\").remove(),b.coming=null;else{d&&(b.trigger(\"beforeChange\",d),d.wrap.stop(!0).removeClass(\"fancybox-opened\").find(\".fancybox-item, .fancybox-nav\").remove());\nb.unbindEvents();e=a.content;c=a.type;l=a.scrolling;f.extend(b,{wrap:a.wrap,skin:a.skin,outer:a.outer,inner:a.inner,current:a,previous:d});g=a.href;switch(c){case \"inline\":case \"ajax\":case \"html\":a.selector?e=f(\"<div>\").html(e).find(a.selector):u(e)&&(e.data(\"fancybox-placeholder\")||e.data(\"fancybox-placeholder\",f('<div class=\"fancybox-placeholder\"></div>').insertAfter(e).hide()),e=e.show().detach(),a.wrap.bind(\"onReset\",function(){f(this).find(e).length&&e.hide().replaceAll(e.data(\"fancybox-placeholder\")).data(\"fancybox-placeholder\",\n!1)}));break;case \"image\":e=a.tpl.image.replace(/\\{href\\}/g,g);break;case \"swf\":e='<object id=\"fancybox-swf\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"100%\" height=\"100%\"><param name=\"movie\" value=\"'+g+'\"></param>',h=\"\",f.each(a.swf,function(a,b){e+='<param name=\"'+a+'\" value=\"'+b+'\"></param>';h+=\" \"+a+'=\"'+b+'\"'}),e+='<embed src=\"'+g+'\" type=\"application/x-shockwave-flash\" width=\"100%\" height=\"100%\"'+h+\"></embed></object>\"}u(e)&&e.parent().is(a.inner)||a.inner.append(e);b.trigger(\"beforeShow\");\na.inner.css(\"overflow\",\"yes\"===l?\"scroll\":\"no\"===l?\"hidden\":l);b._setDimension();b.reposition();b.isOpen=!1;b.coming=null;b.bindEvents();if(!b.isOpened)f(\".fancybox-wrap\").not(a.wrap).stop(!0).trigger(\"onReset\").remove();else if(d.prevMethod)b.transitions[d.prevMethod]();b.transitions[b.isOpened?a.nextMethod:a.openMethod]();b._preloadImages()}},_setDimension:function(){var a=b.getViewport(),d=0,e=!1,c=!1,e=b.wrap,l=b.skin,g=b.inner,h=b.current,c=h.width,k=h.height,n=h.minWidth,v=h.minHeight,p=h.maxWidth,\nq=h.maxHeight,t=h.scrolling,r=h.scrollOutside?h.scrollbarWidth:0,y=h.margin,z=m(y[1]+y[3]),s=m(y[0]+y[2]),w,A,u,D,B,G,C,E,I;e.add(l).add(g).width(\"auto\").height(\"auto\").removeClass(\"fancybox-tmp\");y=m(l.outerWidth(!0)-l.width());w=m(l.outerHeight(!0)-l.height());A=z+y;u=s+w;D=F(c)?(a.w-A)*m(c)/100:c;B=F(k)?(a.h-u)*m(k)/100:k;if(\"iframe\"===h.type){if(I=h.content,h.autoHeight&&1===I.data(\"ready\"))try{I[0].contentWindow.document.location&&(g.width(D).height(9999),G=I.contents().find(\"body\"),r&&G.css(\"overflow-x\",\n\"hidden\"),B=G.outerHeight(!0))}catch(H){}}else if(h.autoWidth||h.autoHeight)g.addClass(\"fancybox-tmp\"),h.autoWidth||g.width(D),h.autoHeight||g.height(B),h.autoWidth&&(D=g.width()),h.autoHeight&&(B=g.height()),g.removeClass(\"fancybox-tmp\");c=m(D);k=m(B);E=D/B;n=m(F(n)?m(n,\"w\")-A:n);p=m(F(p)?m(p,\"w\")-A:p);v=m(F(v)?m(v,\"h\")-u:v);q=m(F(q)?m(q,\"h\")-u:q);G=p;C=q;h.fitToView&&(p=Math.min(a.w-A,p),q=Math.min(a.h-u,q));A=a.w-z;s=a.h-s;h.aspectRatio?(c>p&&(c=p,k=m(c/E)),k>q&&(k=q,c=m(k*E)),c<n&&(c=n,k=m(c/\nE)),k<v&&(k=v,c=m(k*E))):(c=Math.max(n,Math.min(c,p)),h.autoHeight&&\"iframe\"!==h.type&&(g.width(c),k=g.height()),k=Math.max(v,Math.min(k,q)));if(h.fitToView)if(g.width(c).height(k),e.width(c+y),a=e.width(),z=e.height(),h.aspectRatio)for(;(a>A||z>s)&&c>n&&k>v&&!(19<d++);)k=Math.max(v,Math.min(q,k-10)),c=m(k*E),c<n&&(c=n,k=m(c/E)),c>p&&(c=p,k=m(c/E)),g.width(c).height(k),e.width(c+y),a=e.width(),z=e.height();else c=Math.max(n,Math.min(c,c-(a-A))),k=Math.max(v,Math.min(k,k-(z-s)));r&&\"auto\"===t&&k<B&&\nc+y+r<A&&(c+=r);g.width(c).height(k);e.width(c+y);a=e.width();z=e.height();e=(a>A||z>s)&&c>n&&k>v;c=h.aspectRatio?c<G&&k<C&&c<D&&k<B:(c<G||k<C)&&(c<D||k<B);f.extend(h,{dim:{width:x(a),height:x(z)},origWidth:D,origHeight:B,canShrink:e,canExpand:c,wPadding:y,hPadding:w,wrapSpace:z-l.outerHeight(!0),skinSpace:l.height()-k});!I&&h.autoHeight&&k>v&&k<q&&!c&&g.height(\"auto\")},_getPosition:function(a){var d=b.current,e=b.getViewport(),c=d.margin,f=b.wrap.width()+c[1]+c[3],g=b.wrap.height()+c[0]+c[2],c={position:\"absolute\",\ntop:c[0],left:c[3]};d.autoCenter&&d.fixed&&!a&&g<=e.h&&f<=e.w?c.position=\"fixed\":d.locked||(c.top+=e.y,c.left+=e.x);c.top=x(Math.max(c.top,c.top+(e.h-g)*d.topRatio));c.left=x(Math.max(c.left,c.left+(e.w-f)*d.leftRatio));return c},_afterZoomIn:function(){var a=b.current;a&&((b.isOpen=b.isOpened=!0,b.wrap.css(\"overflow\",\"visible\").addClass(\"fancybox-opened\"),b.update(),(a.closeClick||a.nextClick&&1<b.group.length)&&b.inner.css(\"cursor\",\"pointer\").bind(\"click.fb\",function(d){f(d.target).is(\"a\")||f(d.target).parent().is(\"a\")||\n(d.preventDefault(),b[a.closeClick?\"close\":\"next\"]())}),a.closeBtn&&f(a.tpl.closeBtn).appendTo(b.skin).bind(\"click.fb\",function(a){a.preventDefault();b.close()}),a.arrows&&1<b.group.length&&((a.loop||0<a.index)&&f(a.tpl.prev).appendTo(b.outer).bind(\"click.fb\",b.prev),(a.loop||a.index<b.group.length-1)&&f(a.tpl.next).appendTo(b.outer).bind(\"click.fb\",b.next)),b.trigger(\"afterShow\"),a.loop||a.index!==a.group.length-1)?b.opts.autoPlay&&!b.player.isActive&&(b.opts.autoPlay=!1,b.play(!0)):b.play(!1))},\n_afterZoomOut:function(a){a=a||b.current;f(\".fancybox-wrap\").trigger(\"onReset\").remove();f.extend(b,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null});b.trigger(\"afterClose\",a)}});b.transitions={getOrigPosition:function(){var a=b.current,d=a.element,e=a.orig,c={},f=50,g=50,h=a.hPadding,k=a.wPadding,n=b.getViewport();!e&&a.isDom&&d.is(\":visible\")&&(e=d.find(\"img:first\"),e.length||(e=d));u(e)?(c=e.offset(),e.is(\"img\")&&\n(f=e.outerWidth(),g=e.outerHeight())):(c.top=n.y+(n.h-g)*a.topRatio,c.left=n.x+(n.w-f)*a.leftRatio);if(\"fixed\"===b.wrap.css(\"position\")||a.locked)c.top-=n.y,c.left-=n.x;return c={top:x(c.top-h*a.topRatio),left:x(c.left-k*a.leftRatio),width:x(f+k),height:x(g+h)}},step:function(a,d){var e,c,f=d.prop;c=b.current;var g=c.wrapSpace,h=c.skinSpace;if(\"width\"===f||\"height\"===f)e=d.end===d.start?1:(a-d.start)/(d.end-d.start),b.isClosing&&(e=1-e),c=\"width\"===f?c.wPadding:c.hPadding,c=a-c,b.skin[f](m(\"width\"===\nf?c:c-g*e)),b.inner[f](m(\"width\"===f?c:c-g*e-h*e))},zoomIn:function(){var a=b.current,d=a.pos,e=a.openEffect,c=\"elastic\"===e,l=f.extend({opacity:1},d);delete l.position;c?(d=this.getOrigPosition(),a.openOpacity&&(d.opacity=0.1)):\"fade\"===e&&(d.opacity=0.1);b.wrap.css(d).animate(l,{duration:\"none\"===e?0:a.openSpeed,easing:a.openEasing,step:c?this.step:null,complete:b._afterZoomIn})},zoomOut:function(){var a=b.current,d=a.closeEffect,e=\"elastic\"===d,c={opacity:0.1};e&&(c=this.getOrigPosition(),a.closeOpacity&&\n(c.opacity=0.1));b.wrap.animate(c,{duration:\"none\"===d?0:a.closeSpeed,easing:a.closeEasing,step:e?this.step:null,complete:b._afterZoomOut})},changeIn:function(){var a=b.current,d=a.nextEffect,e=a.pos,c={opacity:1},f=b.direction,g;e.opacity=0.1;\"elastic\"===d&&(g=\"down\"===f||\"up\"===f?\"top\":\"left\",\"down\"===f||\"right\"===f?(e[g]=x(m(e[g])-200),c[g]=\"+=200px\"):(e[g]=x(m(e[g])+200),c[g]=\"-=200px\"));\"none\"===d?b._afterZoomIn():b.wrap.css(e).animate(c,{duration:a.nextSpeed,easing:a.nextEasing,complete:b._afterZoomIn})},\nchangeOut:function(){var a=b.previous,d=a.prevEffect,e={opacity:0.1},c=b.direction;\"elastic\"===d&&(e[\"down\"===c||\"up\"===c?\"top\":\"left\"]=(\"up\"===c||\"left\"===c?\"-\":\"+\")+\"=200px\");a.wrap.animate(e,{duration:\"none\"===d?0:a.prevSpeed,easing:a.prevEasing,complete:function(){f(this).trigger(\"onReset\").remove()}})}};b.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!t,fixed:!0},overlay:null,fixed:!1,el:f(\"html\"),create:function(a){var d;a=f.extend({},this.defaults,a);this.overlay&&\nthis.close();d=b.coming?b.coming.parent:a.parent;this.overlay=f('<div class=\"fancybox-overlay\"></div>').appendTo(d&&d.lenth?d:\"body\");this.fixed=!1;a.fixed&&b.defaults.fixed&&(this.overlay.addClass(\"fancybox-overlay-fixed\"),this.fixed=!0)},open:function(a){var d=this;a=f.extend({},this.defaults,a);this.overlay?this.overlay.unbind(\".overlay\").width(\"auto\").height(\"auto\"):this.create(a);this.fixed||(q.bind(\"resize.overlay\",f.proxy(this.update,this)),this.update());a.closeClick&&this.overlay.bind(\"click.overlay\",\nfunction(a){if(f(a.target).hasClass(\"fancybox-overlay\"))return b.isActive?b.close():d.close(),!1});this.overlay.css(a.css).show()},close:function(){q.unbind(\"resize.overlay\");this.el.hasClass(\"fancybox-lock\")&&(f(\".fancybox-margin\").removeClass(\"fancybox-margin\"),this.el.removeClass(\"fancybox-lock\"),q.scrollTop(this.scrollV).scrollLeft(this.scrollH));f(\".fancybox-overlay\").remove().hide();f.extend(this,{overlay:null,fixed:!1})},update:function(){var a=\"100%\",b;this.overlay.width(a).height(\"100%\");\nJ?(b=Math.max(H.documentElement.offsetWidth,H.body.offsetWidth),p.width()>b&&(a=p.width())):p.width()>q.width()&&(a=p.width());this.overlay.width(a).height(p.height())},onReady:function(a,b){var e=this.overlay;f(\".fancybox-overlay\").stop(!0,!0);e||this.create(a);a.locked&&this.fixed&&b.fixed&&(b.locked=this.overlay.append(b.wrap),b.fixed=!1);!0===a.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(a,b){b.locked&&!this.el.hasClass(\"fancybox-lock\")&&(!1!==this.fixPosition&&f(\"*\").filter(function(){return\"fixed\"===\nf(this).css(\"position\")&&!f(this).hasClass(\"fancybox-overlay\")&&!f(this).hasClass(\"fancybox-wrap\")}).addClass(\"fancybox-margin\"),this.el.addClass(\"fancybox-margin\"),this.scrollV=q.scrollTop(),this.scrollH=q.scrollLeft(),this.el.addClass(\"fancybox-lock\"),q.scrollTop(this.scrollV).scrollLeft(this.scrollH));this.open(a)},onUpdate:function(){this.fixed||this.update()},afterClose:function(a){this.overlay&&!b.coming&&this.overlay.fadeOut(a.speedOut,f.proxy(this.close,this))}};b.helpers.title={defaults:{type:\"float\",\nposition:\"bottom\"},beforeShow:function(a){var d=b.current,e=d.title,c=a.type;f.isFunction(e)&&(e=e.call(d.element,d));if(r(e)&&\"\"!==f.trim(e)){d=f('<div class=\"fancybox-title fancybox-title-'+c+'-wrap\">'+e+\"</div>\");switch(c){case \"inside\":c=b.skin;break;case \"outside\":c=b.wrap;break;case \"over\":c=b.inner;break;default:c=b.skin,d.appendTo(\"body\"),J&&d.width(d.width()),d.wrapInner('<span class=\"child\"></span>'),b.current.margin[2]+=Math.abs(m(d.css(\"margin-bottom\")))}d[\"top\"===a.position?\"prependTo\":\n\"appendTo\"](c)}}};f.fn.fancybox=function(a){var d,e=f(this),c=this.selector||\"\",l=function(g){var h=f(this).blur(),k=d,l,m;g.ctrlKey||g.altKey||g.shiftKey||g.metaKey||h.is(\".fancybox-wrap\")||(l=a.groupAttr||\"data-fancybox-group\",m=h.attr(l),m||(l=\"rel\",m=h.get(0)[l]),m&&\"\"!==m&&\"nofollow\"!==m&&(h=c.length?f(c):e,h=h.filter(\"[\"+l+'=\"'+m+'\"]'),k=h.index(this)),a.index=k,!1!==b.open(h,a)&&g.preventDefault())};a=a||{};d=a.index||0;c&&!1!==a.live?p.undelegate(c,\"click.fb-start\").delegate(c+\":not('.fancybox-item, .fancybox-nav')\",\n\"click.fb-start\",l):e.unbind(\"click.fb-start\").bind(\"click.fb-start\",l);this.filter(\"[data-fancybox-start=1]\").trigger(\"click\");return this};p.ready(function(){var a,d;f.scrollbarWidth===w&&(f.scrollbarWidth=function(){var a=f('<div style=\"width:50px;height:50px;overflow:auto\"><div/></div>').appendTo(\"body\"),b=a.children(),b=b.innerWidth()-b.height(99).innerWidth();a.remove();return b});f.support.fixedPosition===w&&(f.support.fixedPosition=function(){var a=f('<div style=\"position:fixed;top:20px;\"></div>').appendTo(\"body\"),\nb=20===a[0].offsetTop||15===a[0].offsetTop;a.remove();return b}());f.extend(b.defaults,{scrollbarWidth:f.scrollbarWidth(),fixed:f.support.fixedPosition,parent:f(\"body\")});a=f(s).width();K.addClass(\"fancybox-lock-test\");d=f(s).width();K.removeClass(\"fancybox-lock-test\");f(\"<style type='text/css'>.fancybox-margin{margin-right:\"+(d-a)+\"px;}</style>\").appendTo(\"head\")})})(window,document,jQuery);","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/findit/lib/findit.js":"/* global Emitify */\n\n(function(global) {\n    'use strict';\n    \n    if (typeof module !== 'undefined' && module.exports)\n        module.exports  = findit;\n    else\n        global.findit   = findit;\n    \n    function findit(entry) {\n        var emitter = Emitify();\n        \n        setTimeout(function() {\n            FindIt(emitter, entry);\n        }, 0);\n        \n        return emitter;\n    }\n    \n    function FindIt(emitter, entry) {\n        if (!(this instanceof FindIt))\n            return new FindIt(emitter, entry);\n            \n        this._dirs  = 0;\n        this._first = true;\n        \n        this._find(emitter, entry);\n    }\n    \n    FindIt.prototype._find = function(emitter, entry) {\n        var self = this;\n        \n        if (entry.isFile) {\n            emitter.emit('file', entry.fullPath, entry);\n            \n            if (self._first)\n                emitter.emit('end');\n        } else {\n            if (self._first)\n                self._first = false;\n            \n            emitter.emit('directory', entry.fullPath, entry);\n            \n            ++self._dirs;\n            \n            entry.createReader()\n                .readEntries(function(entries) {\n                    [].forEach.call(entries, function(entry) {\n                        self._find(emitter, entry);\n                    });\n                    \n                    --self._dirs;\n                    \n                    if (!self._dirs)\n                        emitter.emit('end');\n                });\n            }\n    };\n})(this);\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/philip/lib/philip.js":"/* global Emitify */\n/* global findit */\n/* global exec */\n\n(function(global) {\n    'use strict';\n    \n    if (typeof module !== 'undefined' && module.exports)\n        module.exports  = Philip;\n    else\n        global.philip   = Philip;\n    \n    Philip.prototype = Object.create(Emitify.prototype);\n    \n    function Philip(entries, processingFn) {\n        var array,\n            self;\n        \n        if (!(this instanceof Philip))\n            return new Philip(entries, processingFn);\n        \n        if (typeof processingFn !== 'function')\n            throw Error('processingFn should be function!');\n        \n        Emitify.call(this);\n        \n        if (Array.isArray(entries))\n            array = entries;\n        else\n            array = [entries];\n        \n        self    = this;\n        \n        this._i             = 0;\n        this._n             = 0;\n        this._processingFn  = processingFn;\n        this._pause         = false;\n        this._prev          = 0;\n        \n        this._find(array, function(files, dirs) {\n            self._files = files;\n            self._dirs  = dirs;\n            self._n     = files.length + dirs.length;\n            self._data  = {};\n            \n            self._getFiles(files, self._data, function() {\n                self._process();\n            });\n        });\n    }\n    \n    Philip.prototype._process    = function() {\n        var args,\n            argsLength  = this._processingFn.length,\n            el,\n            data,\n            self        = this,\n            name        = self._dirs.shift(),\n            type        = 'directory',\n            fn          = function(error) {\n                ++self._i;\n                \n                if (error) {\n                    self.emit('error', error);\n                    self.pause();\n                }\n                \n                self._process();\n                self._progress();\n            };\n        \n        if (!name) {\n            type    = 'file';\n            el      = self._files.shift();\n            \n            if (el) {\n                name    = el.fullPath;\n                data    = self._data[name];\n            }\n        }\n        \n        if (!name) {\n            self.emit('end');\n        } else if (!this._pause) {\n            switch(argsLength) {\n            default:\n                args = [type, name, data];\n                break;\n            \n            case 6:\n                args = [type, name, data, this._i, this._n];\n                break;\n            }\n            \n            args.push(fn);\n            \n            self._processingFn.apply(null, args);\n        }\n    };\n    \n    Philip.prototype.pause      = function() {\n        this._pause = true;\n    };\n    \n    Philip.prototype.continue   = function() {\n        if (this._pause) {\n            this._pause = false;\n            this._process();\n        }\n    };\n    \n    Philip.prototype.abort   = function() {\n        this._files = [];\n        this._dirs  = [];\n        \n        this._process();\n    };\n    \n    Philip.prototype._progress  = function() {\n        var value = Math.round(this._i * 100 / this._n);\n        \n        if (value !== this._prev) {\n            this._prev = value;\n            this.emit('progress', value);\n        }\n    };\n    \n    Philip.prototype._getFiles = function(files, obj, callback) {\n        var current,\n            self    = this;\n        \n        files   = files.slice();\n        current = files.shift();\n        \n        if (!obj)\n            obj = {};\n        \n        if (!current)\n            callback(null, obj);\n        else\n            current.file(function(file) {\n                var name    = current.fullPath;\n                \n                obj[name]   = file;\n                \n                self._getFiles(files, obj, callback);\n            });\n    };\n    \n    Philip.prototype._find = function(entries, fn) {\n        var files   = [],\n            dirs    = [];\n        \n        exec.each(entries, function(entry, callback) {\n            var finder  = findit(entry);\n            \n            finder.on('directory', function(name) {\n                dirs.push(name);\n            });\n            \n            finder.on('file', function(name, current) {\n                files.push(current);\n            });\n            \n            finder.on('end', function() {\n                callback();\n            });\n        }, function() {\n            fn(files, dirs);\n        });\n    };\n})(this);\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/smalltalk/lib/smalltalk.js":"'use strict';\n\nconst currify = require('currify/legacy');\nconst keyDown = currify(keyDown_);\n\nconst remove = bind(removeEl, '.smalltalk');\n\nconst BUTTON_OK = ['OK'];\nconst BUTTON_OK_CANCEL = ['OK', 'Cancel'];\n\nexports.alert = (title, msg) => {\n    return showDialog(title, msg, '', BUTTON_OK, {cancel: false});\n};\n\nexports.prompt = (title, msg, value = '', options) => {\n    const val = value.replace(/\\\"/g, '&quot;');\n    const valueStr = `<input type=\"text\" value=\"${ val }\" data-name=\"js-input\">`;\n    \n    return showDialog(title, msg, valueStr, BUTTON_OK_CANCEL, options);\n};\n\nexports.confirm = (title, msg, options) => {\n    return showDialog(title, msg, '', BUTTON_OK_CANCEL, options);\n};\n\nfunction getTemplate(title, msg, value, buttons) {\n    return `<div class=\"page\">\n        <div data-name=\"js-close\" class=\"close-button\"></div>\n        <header>${ title }</header>\n        <div class=\"content-area\">\n            ${ msg }\n            ${ value }\n        </div>\n        <div class=\"action-area\">\n            <div class=\"button-strip\"> ${\n                buttons.map((name, i) =>\n                    `<button tabindex=${ i } data-name=\"js-${ name.toLowerCase() }\">${ name }</button>`\n                ).join('')\n            }\n            </div>\n        </div>\n    </div>`;\n}\n\nconst store = () => {\n    let a;\n    return (...b) => {\n        if (b.length)\n            a = b.pop();\n        \n        return a;\n    };\n};\n\nfunction showDialog(title, msg, value, buttons, options) {\n    const ok = store();\n    const cancel = store();\n    \n    const dialog = document.createElement('div');\n    const closeButtons = [\n        'cancel',\n        'close',\n        'ok'\n    ];\n    \n    const promise = new Promise((resolve, reject) => {\n        const noCancel = options && !options.cancel;\n        const empty = () => {};\n        \n        ok(resolve);\n        cancel(noCancel ? empty : reject);\n    });\n    \n    const tmpl = getTemplate(title, msg, value, buttons);\n    \n    dialog.innerHTML = tmpl;\n    dialog.className = 'smalltalk';\n    \n    document.body.appendChild(dialog);\n    \n    find(dialog, ['ok', 'input']).forEach((el) =>\n        el.focus()\n    );\n    \n    find(dialog, ['input']).forEach((el) => {\n        el.setSelectionRange(0, value.length);\n    });\n    \n    addListenerAll('click', dialog, closeButtons, (event) =>\n        closeDialog(event.target, dialog, ok(), cancel())\n    );\n    \n    ['click', 'contextmenu'].forEach((event) =>\n        dialog.addEventListener(event, () =>\n            find(dialog, ['ok', 'input']).forEach((el) =>\n                el.focus()\n            )\n        )\n    );\n    \n    dialog.addEventListener('keydown', keyDown(dialog, ok(), cancel()));\n    \n    return promise;\n}\n\nfunction keyDown_(dialog, ok, cancel, event) {\n    const KEY   = {\n        ENTER : 13,\n        ESC   : 27,\n        TAB   : 9,\n        LEFT  : 37,\n        UP    : 38,\n        RIGHT : 39,\n        DOWN  : 40\n    };\n    \n    const keyCode = event.keyCode;\n    const el = event.target;\n    \n    const namesAll = ['ok', 'cancel', 'input'];\n    const names = find(dialog, namesAll)\n        .map(getDataName);\n    \n    switch(keyCode) {\n    case KEY.ENTER:\n        closeDialog(el, dialog, ok, cancel);\n        event.preventDefault();\n        break;\n    \n    case KEY.ESC:\n        remove();\n        cancel();\n        break;\n    \n    case KEY.TAB:\n        if (event.shiftKey)\n            tab(dialog, names);\n        \n        tab(dialog, names);\n        event.preventDefault();\n        break;\n    \n    default:\n        ['left', 'right', 'up', 'down'].filter((name) => {\n            return keyCode === KEY[name.toUpperCase()];\n        }).forEach(() => {\n            changeButtonFocus(dialog, names);\n        });\n        \n        break;\n    }\n    \n    event.stopPropagation();\n}\n\nfunction getDataName(el) {\n    return el\n        .getAttribute('data-name')\n        .replace('js-', '');\n}\n\nfunction changeButtonFocus(dialog, names) {\n    const active = document.activeElement;\n    const activeName = getDataName(active);\n    const isButton = /ok|cancel/.test(activeName);\n    const count = names.length - 1;\n    const getName = (activeName) => {\n        if (activeName === 'cancel')\n            return 'ok';\n        \n        return 'cancel';\n    };\n    \n    if (activeName === 'input' || !count || !isButton)\n        return;\n    \n    const name = getName(activeName);\n    \n    find(dialog, [name]).forEach((el) => {\n        el.focus();\n    });\n}\n\nconst getIndex = (count, index) => {\n    if (index === count)\n        return 0;\n    \n    if (index < count)\n        return index + 1;\n};\n\nfunction tab(dialog, names) {\n    const active = document.activeElement;\n    const activeName = getDataName(active);\n    const count = names.length - 1;\n    \n    const activeIndex = names.indexOf(activeName);\n    const index = getIndex(count, activeIndex);\n    \n    const name = names[index];\n    \n    find(dialog, [name]).forEach((el) =>\n        el.focus()\n    );\n}\n\nfunction closeDialog(el, dialog, ok, cancel) {\n    const name = el\n        .getAttribute('data-name')\n        .replace('js-', '');\n    \n    if (/close|cancel/.test(name)) {\n        cancel();\n        remove();\n        return;\n    }\n    \n    const value = find(dialog, ['input'])\n        .reduce((value, el) => el.value, null);\n    \n    ok(value);\n    remove();\n}\n\nfunction find(element, names) {\n    const notEmpty = (a) => a;\n    const elements = names.map((name) =>\n        element.querySelector(`[data-name=\"js-${ name }\"]`)\n    ).filter(notEmpty);\n    \n    return elements;\n}\n\nfunction addListenerAll(event, parent, elements, fn) {\n    find(parent, elements)\n        .forEach((el) =>\n            el.addEventListener(event, fn)\n        );\n}\n\nfunction removeEl(name) {\n     const el = document.querySelector(name);\n     \n     el.parentElement.removeChild(el);\n}\n\nfunction bind(fn, ...args) {\n    return () => fn(...args);\n}\n\n","/home/travis/build/npmtest/node-npmtest-cloudcmd/node_modules/cloudcmd/modules/smalltalk/lib/smalltalk.native.js":"'use strict';\n\nexports.alert          = (title, message) => {\n    const promise = new Promise(function(resolve) {\n        alert(message);\n        resolve();\n    });\n    \n    return promise;\n};\n\nexports.prompt         = (title, message, value, options) => {\n    const o     = options,\n        promise = new Promise(function(resolve, reject) {\n            const noCancel = o && !o.cancel,\n                result  = prompt(message, value);\n            \n            if (result !== null)\n                resolve(result);\n            else if (!noCancel)\n                reject();\n        });\n    \n    return promise;\n};\n\nexports.confirm         = (title, message, options) => {\n    const o         = options,\n        noCancel    = o && !o.cancel,\n        promise     = new Promise(function(resolve, reject) {\n            const is = confirm(message);\n            \n            if (is || noCancel)\n                resolve();\n            else\n                reject();\n        });\n    \n    return promise;\n};\n\n"}